// <auto-generated />
using HisApiMockService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HisApiMockService.Migrations
{
    [DbContext(typeof(SqliteDbContext))]
    [Migration("20221123095438_add_RegisterPatient")]
    partial class addRegisterPatient
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("HisApiMockService.Models.PatientDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlternateVisitId")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("AppointmentId")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Birthday")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("CardNo")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("CardType")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("DeptId")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("DoctorCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("EthnicGroup")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeAddress")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCard")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentifyNO")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("IsCancel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Job")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nationaddress")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nationality")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("OfficeAddress")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Operator")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientClass")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PatientNo")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumberBus")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumberHome")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("RegisterDate")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("RegisterId")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<string>("RegisterSequence")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<string>("SeeDate")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Shift")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<string>("SsnNum")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("VisitNo")
                        .HasColumnType("TEXT");

                    b.Property<string>("VisitNum")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Weight")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RegisterPatient");
                });
#pragma warning restore 612, 618
        }
    }
}
