FROM mcr.microsoft.com/dotnet/sdk:3.1-bullseye AS restore
WORKDIR /source
RUN dotnet nuget add source "https://nuget.cdn.azure.cn/v3/index.json"
COPY services/TriageService/nuget/. /root/.nuget/packages/
COPY services/TriageService/TriageService.csproj .
# COPY services/TriageService/nuget.config .
# RUN dotnet restore "TriageService.csproj"
# COPY services/TriageService/Spire.PDF/. /root/.nuget/packages/spire.xls/12.12.3/lib/netcoreapp2.0/
# 在复制完成破解的nuget包之后再次强制还原项目
RUN dotnet restore "TriageService.csproj" -f

FROM restore AS build
WORKDIR /source
COPY services/TriageService/. .
RUN dotnet publish --no-restore -c Release -o /app TriageService.csproj

FROM mcr.microsoft.com/dotnet/core/aspnet:3.1-buster-slim AS base
WORKDIR /app
EXPOSE 80
ENV TZ Asia/Shanghai

# ARG DEBIAN_FRONTEND=noninteractive
# RUN apt-get update && apt-get install -y libgdiplus libc6-dev && ln -s /usr/lib/libgdiplus.so /usr/lib/gdiplus.dll && apt-get install --assume-yes apt-utils && apt-get install -y locales && localedef -c -f UTF-8 -i zh_CN zh_CN.utf8
# ENV LANG zh_CN.utf8 
# RUN apt-get install -y fontconfig
# COPY services/TriageService/Fonts/. /usr/share/fonts/
# RUN fc-cache -f -v
RUN apt-get install -y curl

COPY --from=build /app .

HEALTHCHECK --interval=5s --timeout=3s \
    CMD curl -sS -f http://localhost/healthcheck || exit 1

ENTRYPOINT ["dotnet", "TriageService.dll", "--urls=http://*:80"]
