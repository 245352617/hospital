// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;
using YiJian.MasterData.EntityFrameworkCore;

namespace YiJian.MasterData.Migrations
{
    [DbContext(typeof(MasterDataHttpApiHostMigrationsDbContext))]
    [Migration("20211216065319_Update_ExamTarget_TableName")]
    partial class Update_ExamTarget_TableName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YiJian.MasterData.AllItems.AllItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("分类编码");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("分类名称");

                    b.Property<string>("ChargeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费分类编码");

                    b.Property<string>("ChargeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("收费分类名称");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IndexNo")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("名称");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("价格");

                    b.Property<string>("TypeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("类型编码");

                    b.Property<string>("TypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("类型名称");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("单位");

                    b.HasKey("Id");

                    b.HasIndex("CategoryCode");

                    b.ToTable("Dict_AllItems");

                    b
                        .HasComment("诊疗检查检验药品项目合集");
                });

            modelBuilder.Entity("YiJian.MasterData.Dictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DictionariesCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DictionariesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DictionariesTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DictionariesTypeName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Py")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Dict_Dictionaries");

                    b
                        .HasComment("平台字典表");
                });

            modelBuilder.Entity("YiJian.MasterData.DictionariesType.DictionariesType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DictionariesTypeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("字典类型编码");

                    b.Property<string>("DictionariesTypeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("字典类型名称");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.HasKey("Id");

                    b.HasIndex("DictionariesTypeCode");

                    b.ToTable("Dict_DictionariesTypes");

                    b
                        .HasComment("字典类型编码");
                });

            modelBuilder.Entity("YiJian.MasterData.ExamCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatalogCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("检查编码");

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查名称");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室编码");

                    b.Property<string>("DeptName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("科室名称");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("显示名称(申请单) eg: CT检查申请单、MRI检查申请单、X线检查申请单");

                    b.Property<string>("ExamPartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查部位编码");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IndexNo")
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("位置编码");

                    b.Property<string>("PositionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("位置名称");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("拼音码");

                    b.Property<string>("RoomCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行机房编码");

                    b.Property<string>("RoomName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行机房");

                    b.Property<string>("WbCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("CatalogCode");

                    b.ToTable("Dict_ExamCatalog");

                    b
                        .HasComment("检查目录");
                });

            modelBuilder.Entity("YiJian.MasterData.ExamPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("PartCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查部位编码");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("检查部位名称");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("拼音码");

                    b.Property<int>("Sort")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.HasKey("Id");

                    b.HasIndex("PartCode");

                    b.ToTable("Dict_ExamPart");

                    b
                        .HasComment("检查部位");
                });

            modelBuilder.Entity("YiJian.MasterData.Exams.ExamProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatalogCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("分类编码");

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("目录名称");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExamPartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查部位");

                    b.Property<string>("ExecDeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室编码");

                    b.Property<string>("ExecDeptName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("科室名称");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("PlatformType")
                        .HasColumnType("int")
                        .HasComment("平台标识");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("位置编码");

                    b.Property<string>("PositionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("位置");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("价格");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("检查编码");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("检查名称");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("拼音码");

                    b.Property<string>("RoomCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行机房编码");

                    b.Property<string>("RoomName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行机房名称");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("单位");

                    b.Property<string>("WbCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("ProjectCode");

                    b.ToTable("Dict_ExamProject");

                    b
                        .HasComment("检查申请项目");
                });

            modelBuilder.Entity("YiJian.MasterData.Exams.ExamTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("InsureType")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("医保类型");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("OtherPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("其它价格");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("价格");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("项目编码");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("拼音码");

                    b.Property<int>("Qty")
                        .HasColumnType("int")
                        .HasComment("数量");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<string>("SpecialFlag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("特殊标识");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("规格");

                    b.Property<string>("TargetCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("编码");

                    b.Property<string>("TargetName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("名称");

                    b.Property<string>("TargetUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("单位");

                    b.Property<string>("WbCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("TargetCode");

                    b.ToTable("Dict_ExamTarget");

                    b
                        .HasComment("检查明细项");
                });

            modelBuilder.Entity("YiJian.MasterData.Exams.Notes.ExamNotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("注意事项编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Dept")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("科室");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室编码");

                    b.Property<string>("DescTemplate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查申请描述模板");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("显示名称(申请单) eg: CT检查申请单、MRI检查申请单、X线检查申请单");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("注意事项名称");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Dict_ExamNotes");

                    b
                        .HasComment("检查申请注意事项");
                });

            modelBuilder.Entity("YiJian.MasterData.Labs.Container.LabContainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ContainerCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("容器编码");

                    b.Property<string>("ContainerColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("容器颜色");

                    b.Property<string>("ContainerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("容器名称");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.HasKey("Id");

                    b.HasIndex("ContainerCode");

                    b.ToTable("Dict_LabContainers");

                    b
                        .HasComment("容器编码");
                });

            modelBuilder.Entity("YiJian.MasterData.Labs.LabCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("分类编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Dept")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("科室");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室编码");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IndexNo")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("分类编码");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("位置描述");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("位置编码");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("拼音码");

                    b.Property<string>("WbCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Dict_LabCatalogs");

                    b
                        .HasComment("检验目录");
                });

            modelBuilder.Entity("YiJian.MasterData.Labs.LabProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Catalog")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("检验分类");

                    b.Property<string>("CatalogCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("检验分类编码");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ContainerCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("容器编码");

                    b.Property<string>("ContainerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("容器名称");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExecDept")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("科室");

                    b.Property<string>("ExecDeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室编码");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IndexNo")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsFirstAid")
                        .HasColumnType("bit")
                        .HasComment("是否急救");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("名称");

                    b.Property<decimal>("OtherPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("价格");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("位置");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("位置编码");

                    b.Property<decimal>("Price")
                        .HasMaxLength(50)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("价格");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("拼音码");

                    b.Property<string>("Specimen")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("标本");

                    b.Property<string>("SpecimenCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本编码");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("单位");

                    b.Property<string>("WbCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("CatalogCode");

                    b.HasIndex("Code");

                    b.ToTable("Dict_LabProjects");

                    b
                        .HasComment("检验项目");
                });

            modelBuilder.Entity("YiJian.MasterData.Labs.LabSpecimen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IndexNo")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本名称");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("拼音码");

                    b.Property<string>("WbCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Dict_LabSpecimens");

                    b
                        .HasComment("检验标本");
                });

            modelBuilder.Entity("YiJian.MasterData.Labs.LabTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasComment("数量");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IndexNo")
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<string>("InsureType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医保类型");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("名称");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("价格");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("项目编码");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("拼音码");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("单位");

                    b.Property<string>("WbCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Dict_LabTargets");

                    b
                        .HasComment("检验明细项");
                });

            modelBuilder.Entity("YiJian.MasterData.Labs.Position.LabSpecimenPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IndexNo")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("PositionCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("采集部位编码");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("采集部位名称");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("拼音码");

                    b.Property<string>("SpecimenCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("标本编码");

                    b.Property<string>("SpecimenName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("标本名称");

                    b.HasKey("Id");

                    b.HasIndex("SpecimenCode");

                    b.ToTable("Dict_LabSpecimenPositions");

                    b
                        .HasComment("检验标本采集部位");
                });

            modelBuilder.Entity("YiJian.MasterData.Medicines.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("别名");

                    b.Property<string>("AliasPyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("别名拼音");

                    b.Property<string>("AliasWbCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("别名五笔码");

                    b.Property<int?>("AntibioticLevel")
                        .HasColumnType("int")
                        .HasComment("抗菌药  0非抗菌药,1非限制级,2限制级,3特殊使用级");

                    b.Property<int>("AntibioticPermission")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("抗生素权限");

                    b.Property<string>("BaseFlag")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("基药标准  N普通,Y国基,P省基,C市基");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("批次号");

                    b.Property<int>("BigPackAmount")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("大包装量");

                    b.Property<decimal>("BigPackPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("包装价格");

                    b.Property<string>("BigPackUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("包装单位");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("中药分类");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("中药分类编码");

                    b.Property<decimal?>("ChildrenPrice")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("儿童价格");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药品编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<double>("DefaultDosage")
                        .HasMaxLength(20)
                        .HasColumnType("float")
                        .HasComment("默认剂量");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DosageForm")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("剂型");

                    b.Property<double?>("DosageQty")
                        .HasColumnType("float")
                        .HasComment("剂量");

                    b.Property<string>("DosageUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("剂量单位");

                    b.Property<string>("ExecDept")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行科室");

                    b.Property<string>("ExecDeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行科室编码");

                    b.Property<DateTime?>("ExpirDate")
                        .HasMaxLength(20)
                        .HasColumnType("datetime2")
                        .HasComment("失效期");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Factory")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("厂家");

                    b.Property<string>("FactoryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("厂家代码");

                    b.Property<decimal?>("FixPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("批发价格");

                    b.Property<string>("FrequencyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("默认频次编码");

                    b.Property<string>("FrequencyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("默认频次名称");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("InsureCode")
                        .HasColumnType("int")
                        .HasComment("医保类型代码");

                    b.Property<string>("InsureType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医保类型：0自费,1甲类,2乙类，3丙类");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool?>("IsAllergyTest")
                        .HasColumnType("bit")
                        .HasComment("试敏药");

                    b.Property<bool?>("IsAnaleptic")
                        .HasColumnType("bit")
                        .HasComment("兴奋剂");

                    b.Property<bool?>("IsCompound")
                        .HasColumnType("bit")
                        .HasComment("复方药");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsDrunk")
                        .HasColumnType("bit")
                        .HasComment("麻醉药");

                    b.Property<bool?>("IsEmergency")
                        .HasColumnType("bit")
                        .HasComment("急救药");

                    b.Property<bool>("IsFirstAid")
                        .HasColumnType("bit")
                        .HasComment("是否急救");

                    b.Property<bool?>("IsHighRisk")
                        .HasColumnType("bit")
                        .HasComment("高危药");

                    b.Property<bool?>("IsInsulin")
                        .HasColumnType("bit")
                        .HasComment("胰岛素");

                    b.Property<bool?>("IsLimited")
                        .HasColumnType("bit")
                        .HasComment("限制性用药标识");

                    b.Property<bool?>("IsPrecious")
                        .HasColumnType("bit")
                        .HasComment("贵重药");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRefrigerated")
                        .HasColumnType("bit")
                        .HasComment("冷藏药");

                    b.Property<bool?>("IsSkinTest")
                        .HasColumnType("bit")
                        .HasComment("皮试药");

                    b.Property<bool?>("IsTumour")
                        .HasColumnType("bit")
                        .HasComment("肿瘤药");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LimitedNote")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("限制性用药描述");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("药品名称");

                    b.Property<int?>("PayRate")
                        .HasColumnType("int")
                        .HasComment("医保支付比例");

                    b.Property<string>("Pharmacy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药房");

                    b.Property<string>("PharmacyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药房代码");

                    b.Property<int>("PrescriptionPermission")
                        .HasColumnType("int")
                        .HasComment("处方权");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("基本单位价格");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("拼音码");

                    b.Property<string>("Remark")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("备注");

                    b.Property<decimal?>("RetPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("零售价格");

                    b.Property<string>("ScientificName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("学名");

                    b.Property<int>("SmallPackAmount")
                        .HasColumnType("int")
                        .HasComment("小包装量");

                    b.Property<decimal>("SmallPackSinglePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("小包装单价");

                    b.Property<string>("SmallPackUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("小包装单位");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("规格");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasComment("库存");

                    b.Property<int?>("ToxicLevel")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("精神药  0非精神药,1一类精神药,2二类精神药");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("基本单位");

                    b.Property<int>("Unpack")
                        .HasColumnType("int")
                        .HasComment("门诊拆分属性 0最小单位总量取整 1包装单位总量取整 2最小单位每次取整 3包装单位每次取整 4最小单位可拆分");

                    b.Property<string>("Usage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("药物用途");

                    b.Property<string>("UsageCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("默认用法编码");

                    b.Property<string>("UsageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("默认用法名称");

                    b.Property<double?>("Volum")
                        .HasMaxLength(20)
                        .HasColumnType("float")
                        .HasComment("体积");

                    b.Property<string>("VolumUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("体积单位");

                    b.Property<string>("WbCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔");

                    b.Property<double?>("Weight")
                        .HasMaxLength(20)
                        .HasColumnType("float")
                        .HasComment("重量");

                    b.Property<string>("WeightUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("重量单位");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex(new[] { "Code", "IsDeleted" }, "IX_Medicine_Code");

                    b.HasIndex(new[] { "Name", "IsDeleted" }, "IX_Medicine_Name");

                    b.ToTable("Dict_Medicines");

                    b
                        .HasComment("药品表");
                });

            modelBuilder.Entity("YiJian.MasterData.Medicines.MedicineFrequency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Catalog")
                        .HasColumnType("int")
                        .HasComment("频次分类 0：临时 1：长期 2：通用");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("频次编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExecTimes")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("执行时间 eg：8:00,10:00,12:00,14:00,16:00,18:00  一个或多个时间，多个以,隔开");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("频次全称");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IndexNo")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("频次名称");

                    b.Property<string>("Remark")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("备注");

                    b.Property<int>("Times")
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasComment("频次系数");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("频次单位");

                    b.Property<string>("Weeks")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("频次周明细");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Dict_MedicineFrequencies");

                    b
                        .HasComment("药品频次字典");
                });

            modelBuilder.Entity("YiJian.MasterData.Medicines.MedicineUsage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Catalog")
                        .HasColumnType("int")
                        .HasComment("分类  1：输液  2：注射  3：治疗  4：服药  10其他");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("全称");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IndexNo")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSingle")
                        .HasColumnType("bit")
                        .HasComment("是否单次");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("拼音码");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("备注");

                    b.Property<string>("TreatCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("诊疗项目 描述：一个或多个项目，多个以,隔开");

                    b.Property<string>("WbCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔码");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Dict_MedicineUsages");

                    b
                        .HasComment("药品用法字典");
                });

            modelBuilder.Entity("YiJian.MasterData.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ExtensionField1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ExtensionField2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ExtensionField3")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ExtensionField4")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ExtensionField5")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<string>("ModUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OperationCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OperationName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PyCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dict_Operations");

                    b
                        .HasComment("手术字典表");
                });

            modelBuilder.Entity("YiJian.MasterData.Sequences.Sequence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasComment("日期");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Format")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("格式");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("Length")
                        .HasColumnType("int")
                        .HasComment("序列值长度");

                    b.Property<string>("Memo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("备注");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称");

                    b.Property<int>("Value")
                        .HasColumnType("int")
                        .HasComment("序列值");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Sys_Sequences");

                    b
                        .HasComment("序列");
                });

            modelBuilder.Entity("YiJian.MasterData.Treats.Treat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("诊疗处置类别");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("诊疗处置类别代码");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExecDept")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("执行科室");

                    b.Property<string>("ExecDeptCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行科室代码");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FeeTypeMain")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费大类代码");

                    b.Property<string>("FeeTypeSub")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费小类代码");

                    b.Property<string>("FrequencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("默认频次代码");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsFirstAid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否急救标识");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("名称");

                    b.Property<decimal?>("OtherPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("其它价格");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("单价");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("拼音码");

                    b.Property<string>("Specification")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("规格");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("单位");

                    b.Property<string>("WbCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Dict_Treats");

                    b
                        .HasComment("诊疗项目字典");
                });

            modelBuilder.Entity("YiJian.MasterData.ViewSettings.ViewSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Align")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("对齐");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("注释");

                    b.Property<string>("DefaultAlign")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("默认对齐");

                    b.Property<string>("DefaultHeaderAlign")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("默认标头对齐");

                    b.Property<int>("DefaultIndex")
                        .HasColumnType("int")
                        .HasComment("默认序号");

                    b.Property<string>("DefaultLabel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("默认标头");

                    b.Property<int>("DefaultMinWidth")
                        .HasColumnType("int")
                        .HasComment("默认最小宽度");

                    b.Property<bool>("DefaultShowTooltip")
                        .HasColumnType("bit")
                        .HasComment("默认是否提示");

                    b.Property<bool>("DefaultVisible")
                        .HasColumnType("bit")
                        .HasComment("默认显示");

                    b.Property<int>("DefaultWidth")
                        .HasColumnType("int")
                        .HasComment("默认宽度");

                    b.Property<string>("HeaderAlign")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("标头对齐");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasComment("序号");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("标头");

                    b.Property<int>("MinWidth")
                        .HasColumnType("int")
                        .HasComment("最小宽度");

                    b.Property<int>("ParentID")
                        .HasColumnType("int")
                        .HasComment("父级ID");

                    b.Property<string>("Prop")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("属性");

                    b.Property<bool>("ShowTooltip")
                        .HasColumnType("bit")
                        .HasComment("是否提示");

                    b.Property<string>("View")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("视图");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit")
                        .HasComment("是否显示");

                    b.Property<int>("Width")
                        .HasColumnType("int")
                        .HasComment("宽度");

                    b.HasKey("Id");

                    b.HasIndex("Prop");

                    b.ToTable("Dict_ViewSettings");

                    b
                        .HasComment("视图配置");
                });

            modelBuilder.Entity("YiJian.MasterData.VitalSign.VitalSignExpression", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DefaultNdLevelExpression")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("默认Ⅱ级评分表达式");

                    b.Property<string>("DefaultRdLevelExpression")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("默认Ⅲ级评分表达式");

                    b.Property<string>("DefaultStLevelExpression")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("默认Ⅰ级评分表达式");

                    b.Property<string>("DefaultThALevelExpression")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("默认Ⅳa级评分表达式");

                    b.Property<string>("DefaultThBLevelExpression")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasComment("默认Ⅳb级评分表达式");

                    b.Property<string>("ItemName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("评分项");

                    b.Property<string>("NdLevelExpression")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Ⅱ级评分表达式");

                    b.Property<string>("RdLevelExpression")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Ⅲ级评分表达式");

                    b.Property<string>("StLevelExpression")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Ⅰ级评分表达式");

                    b.Property<string>("ThALevelExpression")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Ⅳa级评分表达式");

                    b.Property<string>("ThBLevelExpression")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Ⅳb级评分表达式");

                    b.HasKey("Id");

                    b.HasIndex("ItemName");

                    b.ToTable("Dict_VitalSignExpressions");

                    b
                        .HasComment("生命体征表达式");
                });
#pragma warning restore 612, 618
        }
    }
}
