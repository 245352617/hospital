// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;
using YiJian.MasterData.EntityFrameworkCore;

namespace YiJian.MasterData.Migrations
{
    [DbContext(typeof(MasterDataHttpApiHostMigrationsDbContext))]
    [Migration("20211101104501_Add_LabCatalog")]
    partial class Add_LabCatalog
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YiJian.MasterData.Dictionaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DictionariesCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DictionariesName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DictionariesTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DictionariesTypeName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Py")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Dict_Dictionaries");

                    b
                        .HasComment("平台字典表");
                });

            modelBuilder.Entity("YiJian.MasterData.Labs.LabCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("分类编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Dept")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("科室");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室编码");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IndexNo")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("分类编码");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("位置描述");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("位置编码");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("拼音码");

                    b.Property<string>("WbCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Dict_LabCatalogs");

                    b
                        .HasComment("检验目录");
                });

            modelBuilder.Entity("YiJian.MasterData.Labs.LabProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Catalog")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("检验分类");

                    b.Property<string>("CatalogCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("检验分类编码");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Dept")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("科室");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室编码");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IndexNo")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("名称");

                    b.Property<decimal>("OtherPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("价格");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("位置");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("位置编码");

                    b.Property<decimal>("Price")
                        .HasMaxLength(50)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("价格");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("拼音码");

                    b.Property<string>("Specimen")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("标本");

                    b.Property<string>("SpecimenCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本编码");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("单位");

                    b.Property<string>("WbCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Dict_LabProjects");

                    b
                        .HasComment("检验项目");
                });

            modelBuilder.Entity("YiJian.MasterData.Medicines.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("别名");

                    b.Property<string>("AliasPyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("别名拼音");

                    b.Property<string>("AliasWbCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("别名五笔码");

                    b.Property<int?>("AntibioticLevel")
                        .HasColumnType("int")
                        .HasComment("抗菌药  0非抗菌药,1非限制级,2限制级,3特殊使用级");

                    b.Property<int>("AntibioticPermission")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("抗生素权限");

                    b.Property<string>("BaseFlag")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("基药标准  N普通,Y国基,P省基,C市基");

                    b.Property<string>("BasicUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("基本单位");

                    b.Property<decimal>("BasicUnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("基本单位价格");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("批次号");

                    b.Property<int>("BigPackAmount")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("大包装量");

                    b.Property<decimal>("BigPackPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("包装价格");

                    b.Property<string>("BigPackUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("包装单位");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("中药分类");

                    b.Property<decimal?>("ChildrenPrice")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("儿童价格");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药品编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<double>("DefaultDosage")
                        .HasMaxLength(20)
                        .HasColumnType("float")
                        .HasComment("默认剂量");

                    b.Property<string>("DefaultFrequency")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("默认频次");

                    b.Property<string>("DefaultUsage")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("默认用法");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DosageForm")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("剂型");

                    b.Property<double?>("DosageQty")
                        .HasColumnType("float")
                        .HasComment("剂量");

                    b.Property<string>("DosageUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("剂量单位");

                    b.Property<string>("ExecDept")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行科室");

                    b.Property<DateTime?>("ExpirDate")
                        .HasMaxLength(20)
                        .HasColumnType("datetime2")
                        .HasComment("失效期");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Factory")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("厂家");

                    b.Property<string>("FactoryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("厂家代码");

                    b.Property<decimal?>("FixPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("批发价格");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("InsureCode")
                        .HasColumnType("int")
                        .HasComment("医保类型代码");

                    b.Property<string>("InsureType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医保类型：0自费,1甲类,2乙类，3丙类");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool?>("IsAllergyTest")
                        .HasColumnType("bit")
                        .HasComment("试敏药");

                    b.Property<bool?>("IsAnaleptic")
                        .HasColumnType("bit")
                        .HasComment("兴奋剂");

                    b.Property<bool?>("IsCompound")
                        .HasColumnType("bit")
                        .HasComment("复方药");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsDrunk")
                        .HasColumnType("bit")
                        .HasComment("麻醉药");

                    b.Property<bool?>("IsEmergency")
                        .HasColumnType("bit")
                        .HasComment("急救药");

                    b.Property<bool?>("IsHighRisk")
                        .HasColumnType("bit")
                        .HasComment("高危药");

                    b.Property<bool?>("IsInsulin")
                        .HasColumnType("bit")
                        .HasComment("胰岛素");

                    b.Property<bool?>("IsLimited")
                        .HasColumnType("bit")
                        .HasComment("限制性用药标识");

                    b.Property<bool?>("IsPrecious")
                        .HasColumnType("bit")
                        .HasComment("贵重药");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRefrigerated")
                        .HasColumnType("bit")
                        .HasComment("冷藏药");

                    b.Property<bool?>("IsSkinTest")
                        .HasColumnType("bit")
                        .HasComment("皮试药");

                    b.Property<bool?>("IsTumour")
                        .HasColumnType("bit")
                        .HasComment("肿瘤药");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LimitedNote")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("限制性用药描述");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("药品名称");

                    b.Property<int?>("PayRate")
                        .HasColumnType("int")
                        .HasComment("医保支付比例");

                    b.Property<string>("Pharmacy")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药房");

                    b.Property<string>("PharmacyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药房代码");

                    b.Property<int>("PrescriptionPermission")
                        .HasColumnType("int")
                        .HasComment("处方权");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("拼音码");

                    b.Property<string>("Remark")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("备注");

                    b.Property<decimal?>("RetPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("零售价格");

                    b.Property<string>("ScientificName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("学名");

                    b.Property<int>("SmallPackAmount")
                        .HasColumnType("int")
                        .HasComment("小包装量");

                    b.Property<decimal>("SmallPackSinglePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("小包装单价");

                    b.Property<string>("SmallPackUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("小包装单位");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("规格");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasComment("库存");

                    b.Property<int?>("ToxicLevel")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("精神药  0非精神药,1一类精神药,2二类精神药");

                    b.Property<string>("Usage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("药物用途");

                    b.Property<double?>("Volum")
                        .HasMaxLength(20)
                        .HasColumnType("float")
                        .HasComment("体积");

                    b.Property<string>("VolumUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("体积单位");

                    b.Property<string>("WbCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔");

                    b.Property<double?>("Weight")
                        .HasMaxLength(20)
                        .HasColumnType("float")
                        .HasComment("重量");

                    b.Property<string>("WeightUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("重量单位");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex(new[] { "Code", "IsDeleted" }, "IX_Medicine_Code");

                    b.HasIndex(new[] { "Name", "IsDeleted" }, "IX_Medicine_Name");

                    b.ToTable("Dict_Medicines");

                    b
                        .HasComment("药品表");
                });

            modelBuilder.Entity("YiJian.MasterData.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<string>("DeleteUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ExtensionField1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ExtensionField2")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ExtensionField3")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ExtensionField4")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ExtensionField5")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<string>("ModUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OperationCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OperationName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PyCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Remark")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dict_Operations");

                    b
                        .HasComment("手术字典表");
                });
#pragma warning restore 612, 618
        }
    }
}
