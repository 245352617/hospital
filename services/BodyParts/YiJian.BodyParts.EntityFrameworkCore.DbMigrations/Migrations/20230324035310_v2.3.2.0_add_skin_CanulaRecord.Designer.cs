// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;
using YiJian.BodyParts.EntityFrameworkCore;

namespace YiJian.BodyParts.EntityFrameworkCore.DbMigrations.Migrations
{
    [DbContext(typeof(DbMigrationsContext))]
    [Migration("20230324035310_v2.3.2.0_add_skin_CanulaRecord")]
    partial class v2320_add_skin_CanulaRecord
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YiJian.BodyParts.Model.Dict", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室代码")
                        .HasMaxLength(20);

                    b.Property<string>("DictCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("字典代码")
                        .HasMaxLength(20);

                    b.Property<string>("DictDesc")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("DictStandard")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("字典标准（国标、自定义）")
                        .HasMaxLength(20);

                    b.Property<string>("DictValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasComment("字典值")
                        .HasMaxLength(80);

                    b.Property<string>("HisCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("HIS对照代码")
                        .HasMaxLength(20);

                    b.Property<string>("HisName")
                        .HasColumnType("nvarchar(40)")
                        .HasComment("HIS对照")
                        .HasMaxLength(40);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasComment("是否默认");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<string>("ModuleCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("模块代码")
                        .HasMaxLength(20);

                    b.Property<string>("ParaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("参数代码")
                        .HasMaxLength(20);

                    b.Property<string>("ParaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasComment("参数名称")
                        .HasMaxLength(40);

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("上级代码")
                        .HasMaxLength(20);

                    b.Property<int>("SortNum")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<int>("ValidState")
                        .HasColumnType("int")
                        .HasComment("是否有效（1-是，0-否）");

                    b.HasKey("Id");

                    b.HasIndex("DeptCode")
                        .HasName("Index_DeptCode");

                    b.HasIndex("ModuleCode")
                        .HasName("Index_ModuleCode");

                    b.HasIndex("ParaCode")
                        .HasName("Index_ParaCode");

                    b.HasIndex("ValidState")
                        .HasName("Index_ValidState");

                    b.ToTable("Dict");

                    b.HasComment("字典-参数字典");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.DictCanulaPart", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室代码")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否可用");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("模块代码")
                        .HasMaxLength(20);

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasComment("部位名称")
                        .HasMaxLength(80);

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("部位编号")
                        .HasMaxLength(20);

                    b.Property<string>("RiskLevel")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("风险级别 默认空，1低危 2中危 3高危  皮肤分期 默认空  1-1期 2-2期 3-3期 4-4期 5-深部组织损伤 6-不可分期");

                    b.Property<int>("SortNum")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("DictCanulaPart");

                    b.HasComment("人体图-编号字典");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.DictSource", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室代码")
                        .HasMaxLength(20);

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<string>("ModuleCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("模板名称")
                        .HasMaxLength(50);

                    b.Property<string>("ParaCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("参数代码")
                        .HasMaxLength(50);

                    b.Property<string>("ParaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("参数名称")
                        .HasMaxLength(50);

                    b.Property<string>("ParaType")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasComment("参数类型(S-系统参数，D-科室参数)")
                        .HasMaxLength(10);

                    b.Property<bool>("ParaValue")
                        .HasColumnType("bit")
                        .HasComment("参数值");

                    b.Property<Guid?>("Pid")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("父级Id");

                    b.Property<int>("SortNum")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("DictSource");

                    b.HasComment("字典-基础字典设置表");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.FileRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BucketName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("桶名称，如果文件同时在多个桶中，则英文逗号相隔")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DelTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室代码")
                        .HasMaxLength(20);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("文件名称")
                        .HasMaxLength(50);

                    b.Property<string>("FileSuffix")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("文件后缀（类型）")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDel")
                        .HasColumnType("bit")
                        .HasComment("是否删除");

                    b.Property<string>("ModuleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("regulation = ，literatur = 文献")
                        .HasMaxLength(20);

                    b.Property<string>("PI_ID")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者ID")
                        .HasMaxLength(50);

                    b.Property<long>("Size")
                        .HasColumnType("bigint")
                        .HasComment("文件大小");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime2")
                        .HasComment("上传时间");

                    b.HasKey("Id");

                    b.ToTable("FileRecord");

                    b.HasComment("文件表");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.IcuDeptSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ID");

                    b.Property<string>("Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(4)")
                        .HasComment("跨天(包含天数)")
                        .HasMaxLength(4);

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室代码")
                        .HasMaxLength(20);

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasComment("结束时间")
                        .HasMaxLength(10);

                    b.Property<string>("Hours")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasComment("小时数")
                        .HasMaxLength(10);

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasComment("周期")
                        .HasMaxLength(100);

                    b.Property<string>("ScheduleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("班次代码")
                        .HasMaxLength(20);

                    b.Property<string>("ScheduleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("班次名称")
                        .HasMaxLength(20);

                    b.Property<int>("ScheduleTimeTypeEnum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("前闭后开 = 1,前开后闭 = 2")
                        .HasDefaultValue(1);

                    b.Property<int>("SortNum")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasComment("开始时间")
                        .HasMaxLength(10);

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("班次类别，观察项：0，出入量：1 血液净化：2，ECMO：3，PICCO：4")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("IcuDeptSchedule");

                    b.HasComment("科室班次");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.IcuNursingEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主键");

                    b.Property<string>("AuditNurseCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("审核人")
                        .HasMaxLength(20);

                    b.Property<string>("AuditNurseName")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("审核人名称")
                        .HasMaxLength(20);

                    b.Property<Guid?>("AuditSignatureId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("审核者签名");

                    b.Property<int?>("AuditState")
                        .HasColumnType("int")
                        .HasComment("审核状态（0-未审核，1，已审核，2-取消审核）");

                    b.Property<DateTime?>("AuditTime")
                        .HasColumnType("datetime2")
                        .HasComment("审核时间");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("内容")
                        .HasMaxLength(4000);

                    b.Property<int>("EventType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("事件类型")
                        .HasDefaultValue(1);

                    b.Property<string>("Measure")
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("处理措施")
                        .HasMaxLength(4000);

                    b.Property<string>("NurseCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("护士工号")
                        .HasMaxLength(20);

                    b.Property<DateTime>("NurseDate")
                        .HasColumnType("datetime2")
                        .HasComment("护理日期");

                    b.Property<string>("NurseName")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("护士名称")
                        .HasMaxLength(20);

                    b.Property<DateTime>("NurseTime")
                        .HasColumnType("datetime2")
                        .HasComment("护理时间");

                    b.Property<string>("PI_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者id")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("RecordTime")
                        .HasColumnType("datetime2")
                        .HasComment("记录时间");

                    b.Property<Guid?>("SignatureId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("签名记录编号对应icu_signature的id");

                    b.Property<string>("SkinDescription")
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("皮肤情况描述")
                        .HasMaxLength(4000);

                    b.Property<int?>("SortNum")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<int>("ValidState")
                        .HasColumnType("int")
                        .HasComment("有效状态（1-有效，0-无效）");

                    b.HasKey("Id");

                    b.HasIndex("NurseTime")
                        .HasName("Index_NurseTime");

                    b.HasIndex("PI_ID")
                        .HasName("Index_PI_ID");

                    b.HasIndex("ValidState")
                        .HasName("Index_ValidState");

                    b.ToTable("IcuNursingEvent");

                    b.HasComment("护理记录表");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.IcuNursingSkin", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主键");

                    b.Property<string>("CanulaRecord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExudateAmount")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("渗出液量")
                        .HasMaxLength(50);

                    b.Property<string>("ExudateColor")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("渗出液颜色")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnType("datetime2")
                        .HasComment("结束时间");

                    b.Property<bool>("Finished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasComment("是否结束")
                        .HasDefaultValue(false);

                    b.Property<string>("ModuleCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("压疮分类编码")
                        .HasMaxLength(20);

                    b.Property<string>("NurseId")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("护士Id")
                        .HasMaxLength(50);

                    b.Property<string>("NurseName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("护士名称")
                        .HasMaxLength(50);

                    b.Property<DateTime>("NurseTime")
                        .HasColumnType("datetime2")
                        .HasComment("发生时间");

                    b.Property<string>("PI_ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者id")
                        .HasMaxLength(50);

                    b.Property<string>("PressArea")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("压疮面积")
                        .HasMaxLength(50);

                    b.Property<string>("PressColor")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("伤口颜色")
                        .HasMaxLength(50);

                    b.Property<string>("PressPart")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("压疮部位")
                        .HasMaxLength(50);

                    b.Property<string>("PressSmell")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("伤口气味")
                        .HasMaxLength(50);

                    b.Property<string>("PressSource")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("压疮来源")
                        .HasMaxLength(50);

                    b.Property<string>("PressStage")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("压疮分期")
                        .HasMaxLength(255);

                    b.Property<string>("PressType")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("压疮类型")
                        .HasMaxLength(50);

                    b.Property<int>("ValidState")
                        .HasColumnType("int")
                        .HasComment("有效状态（1-有效，0-无效）");

                    b.HasKey("Id");

                    b.ToTable("IcuNursingSkin");

                    b.HasComment("皮肤主表");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.IcuParaItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ID");

                    b.Property<string>("AbnormalSign")
                        .HasColumnType("nvarchar(1)")
                        .HasComment("是否异常体征参数")
                        .HasMaxLength(1);

                    b.Property<string>("AddSource")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("添加来源")
                        .HasMaxLength(20);

                    b.Property<string>("ColorParaCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("关联颜色")
                        .HasMaxLength(20);

                    b.Property<string>("ColorParaName")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("关联颜色名称")
                        .HasMaxLength(255);

                    b.Property<string>("DataSource")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("默认值")
                        .HasMaxLength(10);

                    b.Property<string>("DecimalDigits")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("小数位数")
                        .HasMaxLength(20);

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室代码")
                        .HasMaxLength(20);

                    b.Property<string>("DeviceParaCode")
                        .HasColumnType("nvarchar(40)")
                        .HasComment("设备参数代码")
                        .HasMaxLength(40);

                    b.Property<string>("DeviceParaType")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("设备参数类型")
                        .HasMaxLength(10);

                    b.Property<string>("DeviceTimePoint")
                        .HasColumnType("nvarchar(40)")
                        .HasComment("采集时间点")
                        .HasMaxLength(40);

                    b.Property<string>("DictFlag")
                        .HasColumnType("nvarchar(1)")
                        .HasComment("插管部位特殊标记")
                        .HasMaxLength(1);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(80)")
                        .HasComment("显示名称")
                        .HasMaxLength(80);

                    b.Property<int>("DrawChartFlag")
                        .HasColumnType("int")
                        .HasComment("绘制趋势图形");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(40)")
                        .HasComment("导管分类")
                        .HasMaxLength(40);

                    b.Property<bool?>("GuidFlag")
                        .HasColumnType("bit")
                        .HasComment("是否评分");

                    b.Property<string>("GuidId")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("评分指引编号")
                        .HasMaxLength(50);

                    b.Property<int?>("HealthSign")
                        .HasColumnType("int")
                        .HasComment("是否生命体征项目");

                    b.Property<string>("HighValue")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("高值")
                        .HasMaxLength(20);

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool?>("IsUsage")
                        .HasColumnType("bit")
                        .HasComment("是否用药所属项目");

                    b.Property<string>("KBCode")
                        .HasColumnName("KBCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("知识库代码")
                        .HasMaxLength(20);

                    b.Property<string>("LowValue")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("低值")
                        .HasMaxLength(20);

                    b.Property<string>("MaxValue")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("最大值")
                        .HasMaxLength(20);

                    b.Property<string>("MinValue")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("最小值")
                        .HasMaxLength(20);

                    b.Property<string>("ModuleCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("模块代码")
                        .HasMaxLength(20);

                    b.Property<string>("NuringViewCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("护理概览参数")
                        .HasMaxLength(20);

                    b.Property<string>("ParaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("项目代码")
                        .HasMaxLength(20);

                    b.Property<int>("ParaItemType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("项目参数类型，用于区分监护仪： 3，呼吸机：2等")
                        .HasDefaultValue(0);

                    b.Property<string>("ParaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasComment("项目名称")
                        .HasMaxLength(80);

                    b.Property<string>("PropertyParaCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("关联性状")
                        .HasMaxLength(20);

                    b.Property<string>("PropertyParaName")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("关联性状名称")
                        .HasMaxLength(255);

                    b.Property<string>("ScoreCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("评分代码")
                        .HasMaxLength(50);

                    b.Property<int>("SortNum")
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<string>("StatisticalType")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("特护单统计参数分类")
                        .HasMaxLength(20);

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("文本类型")
                        .HasMaxLength(20);

                    b.Property<bool>("Threshold")
                        .HasColumnType("bit")
                        .HasComment("是否预警");

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("单位名称")
                        .HasMaxLength(20);

                    b.Property<int>("ValidState")
                        .HasColumnType("int")
                        .HasComment("有效状态");

                    b.Property<string>("ValueType")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("数据类型")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("DeptCode")
                        .HasName("Index_DeptCode");

                    b.HasIndex("ModuleCode")
                        .HasName("Index_ModuleCode");

                    b.HasIndex("ParaCode")
                        .HasName("Index_ParaCode");

                    b.HasIndex("ValidState")
                        .HasName("Index_ValidState");

                    b.ToTable("IcuParaItem");

                    b.HasComment("护理项目表");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.IcuParaModule", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ID");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室代码")
                        .HasMaxLength(20);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(80)")
                        .HasComment("模块显示名称")
                        .HasMaxLength(80);

                    b.Property<string>("Enname")
                        .HasColumnType("nvarchar(40)")
                        .HasComment("拼音")
                        .HasMaxLength(40);

                    b.Property<bool>("IsBloodflow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasComment("是否血流内导管")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("模块代码")
                        .HasMaxLength(50);

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasComment("模块名称")
                        .HasMaxLength(80);

                    b.Property<string>("ModuleType")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("模块类型：（CANULA：导管，SKIN：皮肤，VS：观察项目，IO：出入量，EM：ECMO，BP：血液净化，PC：PICCO）")
                        .HasMaxLength(20);

                    b.Property<string>("PartNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("部位编号");

                    b.Property<string>("RiskLevel")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("风险级别 默认空，1低危 2中危 3高危");

                    b.Property<int>("SortNum")
                        .HasColumnType("int")
                        .HasComment("排序")
                        .HasMaxLength(10);

                    b.Property<int>("ValidState")
                        .HasColumnType("int")
                        .HasComment("是否有效(1-有效，0-无效)");

                    b.HasKey("Id");

                    b.HasIndex("DeptCode")
                        .HasName("Index_DeptCode");

                    b.HasIndex("ModuleCode")
                        .HasName("Index_ModuleCode");

                    b.HasIndex("ValidState")
                        .HasName("Index_ValidState");

                    b.ToTable("IcuParaModule");

                    b.HasComment("模块参数");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.IcuPhrase", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("科室代码")
                        .HasMaxLength(10);

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("上级编号")
                        .HasMaxLength(10);

                    b.Property<string>("PhraseText")
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("模板内容")
                        .HasMaxLength(4000);

                    b.Property<int>("SortNum")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("StaffCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("员工代码")
                        .HasMaxLength(20);

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("类型代码")
                        .HasMaxLength(10);

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("类型名称")
                        .HasMaxLength(50);

                    b.Property<int>("ValidState")
                        .HasColumnType("int")
                        .HasComment("是否有效(1-有效，0-无效)");

                    b.HasKey("Id");

                    b.ToTable("IcuPhrase");

                    b.HasComment("常用语模板");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.IcuSignature", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否有效（1-是，0-否）");

                    b.Property<DateTime>("NurseTime")
                        .HasColumnType("datetime2")
                        .HasComment("护理时间");

                    b.Property<string>("PI_ID")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者id")
                        .HasMaxLength(50);

                    b.Property<string>("ReviewState")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("特护单审核状态（S:已审核）")
                        .HasMaxLength(20);

                    b.Property<string>("SignImage")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("签名图片");

                    b.Property<string>("SignImage2")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("二级签名图片");

                    b.Property<string>("SignImage3")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("三级签名图片");

                    b.Property<string>("SignNurseCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("签名工号")
                        .HasMaxLength(20);

                    b.Property<string>("SignNurseCode2")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("二级签名工号")
                        .HasMaxLength(20);

                    b.Property<string>("SignNurseCode3")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("三级签名工号")
                        .HasMaxLength(20);

                    b.Property<string>("SignNurseName")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("签名名称")
                        .HasMaxLength(20);

                    b.Property<string>("SignNurseName2")
                        .HasColumnType("nvarchar(40)")
                        .HasComment("二级签名名称")
                        .HasMaxLength(40);

                    b.Property<string>("SignNurseName3")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("三级签名名称")
                        .HasMaxLength(20);

                    b.Property<int?>("SignState")
                        .HasColumnType("int")
                        .HasComment("签名标志");

                    b.Property<int?>("SignState2")
                        .HasColumnType("int")
                        .HasComment("二级签名标志");

                    b.Property<int?>("SignState3")
                        .HasColumnType("int")
                        .HasComment("三级签名标志");

                    b.Property<DateTime?>("SignTime")
                        .HasColumnType("datetime")
                        .HasComment("签名时间");

                    b.Property<DateTime?>("SignTime2")
                        .HasColumnType("datetime")
                        .HasComment("二级签名时间");

                    b.Property<DateTime?>("SignTime3")
                        .HasColumnType("datetime")
                        .HasComment("三级签名时间");

                    b.HasKey("Id");

                    b.ToTable("IcuSignature");

                    b.HasComment("签名");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.IcuSkin", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主键");

                    b.Property<string>("CanulaRecord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExudateAmount")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("渗出液量")
                        .HasMaxLength(50);

                    b.Property<string>("ExudateColor")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("渗出液颜色")
                        .HasMaxLength(50);

                    b.Property<string>("NurseId")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("护士Id")
                        .HasMaxLength(50);

                    b.Property<string>("NurseName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("护士名称")
                        .HasMaxLength(50);

                    b.Property<DateTime>("NurseTime")
                        .HasColumnType("datetime2")
                        .HasComment("护理时间");

                    b.Property<string>("NursingMeasure")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("护理措施")
                        .HasMaxLength(255);

                    b.Property<string>("PressArea")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("压疮面积")
                        .HasMaxLength(50);

                    b.Property<string>("PressColor")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("伤口颜色")
                        .HasMaxLength(50);

                    b.Property<string>("PressSmell")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("伤口气味")
                        .HasMaxLength(50);

                    b.Property<string>("PressStage")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("压疮分期")
                        .HasMaxLength(255);

                    b.Property<Guid?>("SkinId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("压疮Id");

                    b.HasKey("Id");

                    b.ToTable("IcuSkin");

                    b.HasComment("皮肤详细信息记录表");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.IcuSysPara", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("ID");

                    b.Property<string>("DataSource")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("数据源")
                        .HasMaxLength(100);

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室代码")
                        .HasMaxLength(20);

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("描述");

                    b.Property<bool>("IsAddiable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasComment("表格模式下是否可添加")
                        .HasDefaultValue(false);

                    b.Property<string>("ModuleName")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("模板名称")
                        .HasMaxLength(1000);

                    b.Property<string>("ModuleSort")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("模块排序号")
                        .HasDefaultValue("1");

                    b.Property<string>("ParaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("参数代码")
                        .HasMaxLength(50);

                    b.Property<string>("ParaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("参数名称")
                        .HasMaxLength(1000);

                    b.Property<string>("ParaType")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasComment("参数类型(S-系统参数，D-科室参数)")
                        .HasMaxLength(10);

                    b.Property<string>("ParaValue")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("参数值")
                        .HasMaxLength(8000);

                    b.Property<int>("SortNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("排序号")
                        .HasDefaultValue(1);

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("类型（系统参数 = 1,特护单参数 = 2）")
                        .HasMaxLength(10);

                    b.Property<int>("ValueType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("值类型")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("DeptCode", "ParaCode")
                        .IsUnique()
                        .HasName("Unique_ParaCode")
                        .HasFilter("[DeptCode] IS NOT NULL");

                    b.ToTable("IcuSysPara");

                    b.HasComment("系统-参数设置表");
                });

            modelBuilder.Entity("YiJian.BodyParts.Model.SkinDynamic", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主键");

                    b.Property<Guid>("CanulaId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主键");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(40)")
                        .HasComment("皮肤分类")
                        .HasMaxLength(40);

                    b.Property<string>("ParaCode")
                        .HasColumnType("nvarchar(40)")
                        .HasComment("参数代码")
                        .HasMaxLength(40);

                    b.Property<string>("ParaName")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("参数名称")
                        .HasMaxLength(255);

                    b.Property<string>("ParaValue")
                        .HasColumnType("nvarchar(255)")
                        .HasComment("参数值")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("SkinDynamic");

                    b.HasComment("人体图动态表");
                });
#pragma warning restore 612, 618
        }
    }
}
