// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;
using YiJian.ECIS.Call.EntityFrameworkCore;

#nullable disable

namespace YiJian.ECIS.Call.Migrations
{
    [DbContext(typeof(CallHttpApiHostMigrationsDbContext))]
    [Migration("20231107080457_Update_CallInfo3")]
    partial class Update_CallInfo3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("YiJian.ECIS.Call.CallConfig.RowConfig", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("DefaultOrder")
                        .HasColumnType("smallint");

                    b.Property<string>("DefaultText")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("DefaultVisible")
                        .HasColumnType("bit");

                    b.Property<short>("DefaultWidth")
                        .HasColumnType("smallint");

                    b.Property<bool>("DefaultWrap")
                        .HasColumnType("bit");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("Order")
                        .HasColumnType("smallint");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.Property<short>("Width")
                        .HasColumnType("smallint");

                    b.Property<bool>("Wrap")
                        .HasColumnType("bit");

                    b.HasKey("Key");

                    b.ToTable("CallRowConfig", (string)null);
                });

            modelBuilder.Entity("YiJian.ECIS.Call.Domain.CallCenter.CallInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActTriageLevel")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("患者实际分诊级别");

                    b.Property<string>("ActTriageLevelName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("患者实际分诊级别名称");

                    b.Property<int>("CallStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("叫号状态");

                    b.Property<string>("CallingSn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("排队号");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DoctorCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("急诊医生Code");

                    b.Property<string>("DoctorName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("急诊医生姓名");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime?>("InCallQueueTime")
                        .HasColumnType("datetime2")
                        .HasComment("开始排队时间");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsPause")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否暂停");

                    b.Property<bool>("IsReport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否是查看报告");

                    b.Property<bool>("IsShow")
                        .HasColumnType("bit")
                        .HasComment("是否显示");

                    b.Property<bool>("IsTop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否置顶");

                    b.Property<DateTime?>("LastCalledTime")
                        .HasColumnType("datetime2")
                        .HasComment("叫号时间");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTime?>("LogDate")
                        .HasColumnType("datetime2")
                        .HasComment("排队日期（工作日计算）");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2")
                        .HasComment("登记时间");

                    b.Property<string>("PatientID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者唯一标识(HIS)");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者姓名");

                    b.Property<string>("RegisterNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("就诊号");

                    b.Property<DateTime?>("TopTime")
                        .HasColumnType("datetime2")
                        .HasComment("置顶时间");

                    b.Property<string>("TriageDept")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("患者分诊科室编码");

                    b.Property<string>("TriageDeptName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("患者分诊科室名称");

                    b.Property<int>("VisitStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("就诊状态");

                    b.HasKey("Id");

                    b.ToTable("CallCallInfo", (string)null);

                    b.HasComment("叫号信息");
                });

            modelBuilder.Entity("YiJian.ECIS.Call.Domain.CallCenter.CallingRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CallInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("叫号信息id");

                    b.Property<string>("ConsultingRoomCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("就诊诊室编码");

                    b.Property<string>("ConsultingRoomName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("就诊诊室名称");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime")
                        .HasComment("创建时间（叫号时间）");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId")
                        .HasComment("创建人id（叫号医生/护士）");

                    b.Property<string>("DoctorId")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("急诊医生id");

                    b.Property<string>("DoctorName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("急诊医生姓名");

                    b.Property<int>("TreatStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("就诊状态");

                    b.HasKey("Id");

                    b.HasIndex("CallInfoId");

                    b.ToTable("CallCallingRecord", (string)null);

                    b.HasComment("叫号记录");
                });

            modelBuilder.Entity("YiJian.ECIS.Call.Domain.CallConfig.BaseConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<int>("CurrentCallMode")
                        .HasColumnType("int")
                        .HasComment("当前叫号模式");

                    b.Property<int>("CurrentUpdateNoHour")
                        .HasColumnType("int")
                        .HasComment("当前的 每日更新号码时间（小时）（0-23）");

                    b.Property<int>("CurrentUpdateNoMinute")
                        .HasColumnType("int")
                        .HasComment("每日更新号码时间（分钟）");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FriendlyReminder")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("温馨提醒（大屏叫号端）");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("RegularEffectTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("模式生效时间");

                    b.Property<int>("TomorrowCallMode")
                        .HasColumnType("int")
                        .HasComment("当前叫号模式");

                    b.Property<int>("TomorrowUpdateNoHour")
                        .HasColumnType("int")
                        .HasComment("每日更新号码时间（小时）");

                    b.Property<int>("TomorrowUpdateNoMinute")
                        .HasColumnType("int")
                        .HasComment("每日更新号码时间（分钟）");

                    b.HasKey("Id");

                    b.ToTable("CallBaseConfig", (string)null);

                    b.HasComment("叫号设置-基础设置");
                });

            modelBuilder.Entity("YiJian.ECIS.Call.Domain.CallConfig.ConsultingRoomRegular", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<Guid>("ConsultingRoomId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("诊室id");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit")
                        .HasComment("是否使用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.HasKey("Id");

                    b.ToTable("CallConsultingRoomRegular", (string)null);

                    b.HasComment("诊室固定表");
                });

            modelBuilder.Entity("YiJian.ECIS.Call.Domain.CallConfig.DoctorRegular", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("对应急诊科室id");

                    b.Property<Guid>("DoctorDepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医生所属科室id");

                    b.Property<string>("DoctorDepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("医生所属科室名称");

                    b.Property<string>("DoctorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("医生id");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("医生名称");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit")
                        .HasComment("是否使用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.HasKey("Id");

                    b.ToTable("CallDoctorRegular", (string)null);

                    b.HasComment("医生变动表");
                });

            modelBuilder.Entity("YiJian.ECIS.Call.Domain.CallConfig.SerialNoRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<int>("CurrentNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("当前流水号");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("科室id");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasComment("开头字母");

                    b.Property<DateTime>("SerialDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SerialLength")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3)
                        .HasComment("流水号位数");

                    b.HasKey("Id");

                    b.ToTable("CallSerialNoRule", (string)null);

                    b.HasComment("排队号规则");
                });

            modelBuilder.Entity("YiJian.ECIS.Call.Domain.ConsultingRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("IP");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("CallConsultingRoom", (string)null);

                    b.HasComment("诊室表");
                });

            modelBuilder.Entity("YiJian.ECIS.Call.Domain.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称");

                    b.HasKey("Id");

                    b.ToTable("CallDepartment", (string)null);

                    b.HasComment("科室表");
                });

            modelBuilder.Entity("YiJian.ECIS.Call.Domain.CallCenter.CallingRecord", b =>
                {
                    b.HasOne("YiJian.ECIS.Call.Domain.CallCenter.CallInfo", "CallInfo")
                        .WithMany("CallingRecords")
                        .HasForeignKey("CallInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CallInfo_CallingRecord");

                    b.Navigation("CallInfo");
                });

            modelBuilder.Entity("YiJian.ECIS.Call.Domain.ConsultingRoom", b =>
                {
                    b.HasOne("YiJian.ECIS.Call.Domain.Department", null)
                        .WithMany("ConsultingRooms")
                        .HasForeignKey("DepartmentId");
                });

            modelBuilder.Entity("YiJian.ECIS.Call.Domain.CallCenter.CallInfo", b =>
                {
                    b.Navigation("CallingRecords");
                });

            modelBuilder.Entity("YiJian.ECIS.Call.Domain.Department", b =>
                {
                    b.Navigation("ConsultingRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
