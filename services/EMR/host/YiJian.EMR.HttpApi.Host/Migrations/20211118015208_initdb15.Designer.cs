// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;
using YiJian.EMR.EntityFrameworkCore;

namespace YiJian.EMR.Migrations
{
    [DbContext(typeof(EMRHttpApiHostMigrationsDbContext))]
    [Migration("20211118015208_initdb15")]
    partial class initdb15
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YiJian.EMR.DataElements.Entities.DataElement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsElement")
                        .HasColumnType("bit")
                        .HasComment("是否是元素");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("Lv")
                        .HasColumnType("int")
                        .HasComment("层级，默认=0");

                    b.Property<Guid>("Parent")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("父级级联Id");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称标题");

                    b.HasKey("Id");

                    b.ToTable("EmrDataElement");

                    b
                        .HasComment("数据元集合根");
                });

            modelBuilder.Entity("YiJian.EMR.DataElements.Entities.DataElementDropdown", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("DataElementItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("元素项Id");

                    b.Property<string>("DataSource")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("来源");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsAllowMultiple")
                        .HasColumnType("bit")
                        .HasComment("允许多选");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsDynamicallyLoad")
                        .HasColumnType("bit")
                        .HasComment("动态加载下拉列表");

                    b.Property<bool>("IsSortByTime")
                        .HasColumnType("bit")
                        .HasComment("数值勾选按照时间排序");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.HasKey("Id");

                    b.HasIndex("DataElementItemId");

                    b.ToTable("EmrDataElementDropdown");

                    b
                        .HasComment("输入域类型下拉项目");
                });

            modelBuilder.Entity("YiJian.EMR.DataElements.Entities.DataElementDropdownItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DataElementDropdownId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("输入域类型下拉项目Id");

                    b.Property<string>("GroupName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("分组名称");

                    b.Property<string>("ListText")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("指定的列表文本");

                    b.Property<string>("Text")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("文本");

                    b.Property<string>("Value")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("数值");

                    b.HasKey("Id");

                    b.HasIndex("DataElementDropdownId");

                    b.ToTable("EmrDataElementDropdownItem");

                    b
                        .HasComment("元素下拉项");
                });

            modelBuilder.Entity("YiJian.EMR.DataElements.Entities.DataElementItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BeginMargin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("起始边框");

                    b.Property<string>("BindPath")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("绑定路径");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit")
                        .HasComment("允许被删除");

                    b.Property<bool>("CanModify")
                        .HasColumnType("bit")
                        .HasComment("用户可以直接修改内容");

                    b.Property<string>("CascadeExpression")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("级联表达式");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid>("DataElementId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("数据元Id");

                    b.Property<string>("DataSource")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("数据源");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("EndMargin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("结尾边框");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<int>("FixedWidth")
                        .HasColumnType("int")
                        .HasComment("固定宽度");

                    b.Property<string>("InputType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("输入域类型");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("bit")
                        .HasComment("只读状态");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("名称");

                    b.Property<bool>("NeedVerification")
                        .HasColumnType("bit")
                        .HasComment("是否开启校验");

                    b.Property<string>("No")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("编号");

                    b.Property<string>("NumericalExpression")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("数值表达式");

                    b.Property<string>("Tips")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("提示文本");

                    b.Property<string>("VerificationExpression")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("校验表达式");

                    b.Property<string>("Watermark")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("背景文本");

                    b.HasKey("Id");

                    b.HasIndex("DataElementId");

                    b.ToTable("EmrDataElementItem");

                    b
                        .HasComment("数据元素");
                });

            modelBuilder.Entity("YiJian.EMR.Libs.Entities.Catalogue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsFile")
                        .HasColumnType("bit")
                        .HasComment("是否是文件（文件夹=false,文件=true）");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("Lv")
                        .HasColumnType("int")
                        .HasComment("目录结构层级Level");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("父级Id，根级=0");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序权重");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("目录名称");

                    b.HasKey("Id");

                    b.HasIndex("Lv");

                    b.HasIndex("Title");

                    b.ToTable("EmrCatalogue");

                    b
                        .HasComment("电子病历库目录树");
                });

            modelBuilder.Entity("YiJian.EMR.Libs.Entities.XmlTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CatalogueId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("目录结构树模板Id");

                    b.Property<string>("TemplateXml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("xml模板");

                    b.HasKey("Id");

                    b.HasIndex("CatalogueId");

                    b.ToTable("EmrXmlTemplate");

                    b
                        .HasComment("xml病历模板");
                });

            modelBuilder.Entity("YiJian.EMR.Props.Entities.CategoryProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("属性标签");

                    b.Property<int>("Lv")
                        .HasColumnType("int")
                        .HasComment("属性层级");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("级联父节点Id");

                    b.Property<string>("Value")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("属性值");

                    b.HasKey("Id");

                    b.ToTable("EmrCategoryProperty");

                    b
                        .HasComment("电子病历属性");
                });

            modelBuilder.Entity("YiJian.EMR.Templates.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("科室名称");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("科室名称");

                    b.HasKey("Id");

                    b.ToTable("EmrDepartment");

                    b
                        .HasComment("科室历史记录");
                });

            modelBuilder.Entity("YiJian.EMR.Templates.Entities.InpatientWard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WardName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("病区名称");

                    b.HasKey("Id");

                    b.ToTable("EmrInpatientWard");

                    b
                        .HasComment("病区");
                });

            modelBuilder.Entity("YiJian.EMR.Templates.Entities.MyXmlTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TemplateCatalogueId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("目录结构树模板Id");

                    b.Property<string>("TemplateXml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("xml模板");

                    b.HasKey("Id");

                    b.HasIndex("TemplateCatalogueId");

                    b.ToTable("EmrMyXmlTemplate");

                    b
                        .HasComment("被管理起来的XML电子病例模板(通用模板，科室模板，个人模板)");
                });

            modelBuilder.Entity("YiJian.EMR.Templates.Entities.TemplateCatalogue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogueId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("最初引入病历库的Id");

                    b.Property<string>("CatalogueTitle")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("最初引入病历库的名称");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("科室编码");

                    b.Property<string>("DoctorCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasDefaultValue("")
                        .HasComment("医生编码");

                    b.Property<string>("DoctorName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("医生");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("InpatientWardId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("病区id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否启用");

                    b.Property<bool>("IsFile")
                        .HasColumnType("bit")
                        .HasComment("是否是文件（文件夹=false,文件=true）");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("Lv")
                        .HasColumnType("int")
                        .HasComment("目录结构层级Level");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("父级Id，根级=0");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序权重");

                    b.Property<int>("TemplateType")
                        .HasColumnType("int")
                        .HasComment("模板类型");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("目录名称");

                    b.HasKey("Id");

                    b.HasIndex("DeptCode");

                    b.HasIndex("DoctorCode");

                    b.HasIndex("Lv");

                    b.HasIndex("Title");

                    b.ToTable("EmrTemplateCatalogue");

                    b
                        .HasComment("模板目录结构");
                });

            modelBuilder.Entity("YiJian.EMR.Writes.Entities.PatientEmr", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AdmissionTime")
                        .HasColumnType("datetime2")
                        .HasComment("入院时间");

                    b.Property<string>("CategoryLv1")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("一级分类");

                    b.Property<string>("CategoryLv2")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("二级分类");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<DateTime?>("DischargeTime")
                        .HasColumnType("datetime2")
                        .HasComment("出院时间");

                    b.Property<string>("DoctorCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("医生编号");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("医生名称");

                    b.Property<string>("EmrTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("病历名称");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("PI_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("患者名称");

                    b.Property<string>("PatientNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("患者编号");

                    b.HasKey("Id");

                    b.HasIndex("DoctorCode");

                    b.ToTable("EmrPatientEmr");

                    b
                        .HasComment("患者电子病历");
                });

            modelBuilder.Entity("YiJian.EMR.Writes.Entities.PatientEmrXml", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("EmrXml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("电子病历Xml文档");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("PatientEmrId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("患者电子病历Id");

                    b.HasKey("Id");

                    b.HasIndex("PatientEmrId");

                    b.ToTable("EmrPatientEmrXml");

                    b
                        .HasComment("患者的电子病历xml文档");
                });

            modelBuilder.Entity("YiJian.EMR.XmlHistories.Entities.XmlHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("EmrXml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("XmlCategory")
                        .HasColumnType("int");

                    b.Property<Guid>("XmlId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("XmlCategory");

                    b.HasIndex("XmlId");

                    b.ToTable("EmrXmlHistory");

                    b
                        .HasComment("电子病历留痕实体");
                });

            modelBuilder.Entity("YiJian.EMR.Libs.Entities.XmlTemplate", b =>
                {
                    b.HasOne("YiJian.EMR.Libs.Entities.Catalogue", "Catalogue")
                        .WithMany()
                        .HasForeignKey("CatalogueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogue");
                });

            modelBuilder.Entity("YiJian.EMR.Templates.Entities.MyXmlTemplate", b =>
                {
                    b.HasOne("YiJian.EMR.Templates.Entities.TemplateCatalogue", "TemplateCatalogue")
                        .WithMany()
                        .HasForeignKey("TemplateCatalogueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TemplateCatalogue");
                });

            modelBuilder.Entity("YiJian.EMR.Writes.Entities.PatientEmrXml", b =>
                {
                    b.HasOne("YiJian.EMR.Writes.Entities.PatientEmr", "PatientEmr")
                        .WithMany()
                        .HasForeignKey("PatientEmrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientEmr");
                });
#pragma warning restore 612, 618
        }
    }
}
