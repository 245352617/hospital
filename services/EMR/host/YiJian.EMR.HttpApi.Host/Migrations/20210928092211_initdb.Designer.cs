// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;
using YiJian.EMR.EntityFrameworkCore;

namespace YiJian.EMR.Migrations
{
    [DbContext(typeof(EMRHttpApiHostMigrationsDbContext))]
    [Migration("20210928092211_initdb")]
    partial class initdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YiJian.EMR.Libs.Entities.Catalogue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsFile")
                        .HasColumnType("bit")
                        .HasComment("是否是文件（文件夹=false,文件=true）");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("ParentId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("父级Id，根级=0");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序权重");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("目录名称");

                    b.HasKey("Id");

                    b.HasIndex("Title");

                    b.ToTable("EmrCatalogue");
                });

            modelBuilder.Entity("YiJian.EMR.Libs.Entities.XmlTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CatalogueId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("目录结构树模板Id");

                    b.Property<string>("TemplateXml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("xml模板");

                    b.HasKey("Id");

                    b.HasIndex("CatalogueId");

                    b.ToTable("EmrXmlTemplate");
                });

            modelBuilder.Entity("YiJian.EMR.Templates.Entities.InpatientWard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WardName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("病区名称");

                    b.HasKey("Id");

                    b.ToTable("EmrInpatientWard");

                    b
                        .HasComment("病区");
                });

            modelBuilder.Entity("YiJian.EMR.Templates.Entities.MyXmlTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TemplateCatalogueId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("目录结构树模板Id");

                    b.Property<string>("TemplateXml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("xml模板");

                    b.HasKey("Id");

                    b.HasIndex("TemplateCatalogueId");

                    b.ToTable("EmrMyXmlTemplate");

                    b
                        .HasComment("被管理起来的XML电子病例模板(通用模板，科室模板，个人模板)");
                });

            modelBuilder.Entity("YiJian.EMR.Templates.Entities.TemplateCatalogue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("科室编码");

                    b.Property<string>("DoctorCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasDefaultValue("")
                        .HasComment("医生编码");

                    b.Property<string>("DoctorName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasComment("医生");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid?>("InpatientWardId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("病区id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasComment("是否启用");

                    b.Property<bool>("IsFile")
                        .HasColumnType("bit")
                        .HasComment("是否是文件（文件夹=false,文件=true）");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid?>("ParentId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier")
                        .HasComment("父级Id，根级=0");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序权重");

                    b.Property<int>("TemplateType")
                        .HasColumnType("int")
                        .HasComment("模板类型");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("目录名称");

                    b.HasKey("Id");

                    b.HasIndex("DeptCode");

                    b.HasIndex("DoctorCode");

                    b.HasIndex("Title");

                    b.ToTable("EmrTemplateCatalogue");
                });

            modelBuilder.Entity("YiJian.EMR.Writes.Entities.PatientEmr", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DoctorCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("医生编号");

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("医生名称");

                    b.Property<string>("EmrTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("病历名称");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("PatientName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("患者名称");

                    b.Property<string>("PatientNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasComment("患者编号");

                    b.HasKey("Id");

                    b.HasIndex("DoctorCode");

                    b.ToTable("EmrPatientEmr");

                    b
                        .HasComment("患者电子病历");
                });

            modelBuilder.Entity("YiJian.EMR.Writes.Entities.PatientEmrXml", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmrXml")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("电子病历Xml文档");

                    b.Property<Guid>("PatientEmrId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("患者电子病历Id");

                    b.HasKey("Id");

                    b.HasIndex("PatientEmrId");

                    b.ToTable("EmrPatientEmrXml");

                    b
                        .HasComment("患者的电子病历xml文档");
                });

            modelBuilder.Entity("YiJian.EMR.Libs.Entities.XmlTemplate", b =>
                {
                    b.HasOne("YiJian.EMR.Libs.Entities.Catalogue", "Catalogue")
                        .WithMany()
                        .HasForeignKey("CatalogueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogue");
                });
#pragma warning restore 612, 618
        }
    }
}
