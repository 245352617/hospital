// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SamJan.MicroService.PreHospital.TriageService;
using Volo.Abp.EntityFrameworkCore;

namespace SamJan.MicroService.PreHospital.TriageService.Migrations
{
    [DbContext(typeof(PreHospitalTriageDbContext))]
    [Migration("20220415070654_UpdateGestationalWeeks")]
    partial class UpdateGestationalWeeks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.AdmissionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbroadEndTime")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("境外结束日期");

                    b.Property<string>("AbroadStartTime")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("境外开始日期");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("AllergyHistory")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("过敏史")
                        .HasMaxLength(500);

                    b.Property<string>("CountrySpecific")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("具体国家/地区")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<string>("IsAggregation")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("是否聚集性发病")
                        .HasMaxLength(10);

                    b.Property<string>("IsBeenAbroad")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("2周内是否有境外旅居史")
                        .HasMaxLength(10);

                    b.Property<string>("IsContactHotPatient")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("2周内是否接触过中高风险区发热患者")
                        .HasMaxLength(10);

                    b.Property<string>("IsContactNewCoronavirus")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("2周内是否接触过确诊新冠阳性患者")
                        .HasMaxLength(10);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<string>("IsFocusIsolated")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("最近14天内您是否在集中隔离医学观察场所留观")
                        .HasMaxLength(10);

                    b.Property<string>("IsHot")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("是否发热")
                        .HasMaxLength(10);

                    b.Property<string>("IsMediumAndHighRisk")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("是否去过中高风险区")
                        .HasMaxLength(10);

                    b.Property<string>("IsSoreThroatAndCough")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("是否咽痛咳嗽")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("MedicalHistory")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("现病史")
                        .HasMaxLength(500);

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("PastMedicalHistory")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("既往史")
                        .HasMaxLength(500);

                    b.Property<Guid>("PatientInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("院前分诊患者建档表主键Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("ReturnTime")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("回国日期");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("PatientInfoId")
                        .IsUnique();

                    b.ToTable("Triage_AdmissionInfo");

                    b.HasComment("入院情况信息表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.ConsequenceInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActTriageLevel")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("实际分诊级别Code")
                        .HasMaxLength(60);

                    b.Property<string>("ActTriageLevelName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("实际分诊级别名称")
                        .HasMaxLength(60);

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("AutoTriageLevel")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("自动分诊级别Code")
                        .HasMaxLength(60);

                    b.Property<string>("AutoTriageLevelName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("自动分诊级别名称")
                        .HasMaxLength(60);

                    b.Property<string>("ChangeDept")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("科室变更Code")
                        .HasMaxLength(60);

                    b.Property<string>("ChangeDeptName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("科室变更名称")
                        .HasMaxLength(60);

                    b.Property<string>("ChangeLevel")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("分诊级别变更Code")
                        .HasMaxLength(60);

                    b.Property<string>("ChangeLevelName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("分诊级别变更名称")
                        .HasMaxLength(60);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DoctorCode")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("医生编码")
                        .HasMaxLength(60);

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("医生姓名")
                        .HasMaxLength(60);

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<Guid>("PatientInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("院前分诊患者建档表主键Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TriageDeptCode")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("分诊科室编码")
                        .HasMaxLength(60);

                    b.Property<string>("TriageDeptName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("分诊科室名称")
                        .HasMaxLength(60);

                    b.Property<string>("TriageTargetCode")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("分诊去向编码")
                        .HasMaxLength(60);

                    b.Property<string>("TriageTargetName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("分诊去向名称")
                        .HasMaxLength(60);

                    b.Property<string>("WorkType")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("班次")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("PatientInfoId")
                        .IsUnique();

                    b.ToTable("Triage_ConsequenceInfo");

                    b.HasComment("院前分诊结果表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Covid19Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<int>("BeenAbroadStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("14天内是否有境外旅居史（0: 境内本市；1: 境内非本市; 2:  境外）")
                        .HasDefaultValue(0);

                    b.Property<string>("CitySpecific")
                        .HasColumnType("nvarchar(1024)")
                        .HasComment("市")
                        .HasMaxLength(1024);

                    b.Property<string>("ContactsPhone")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("联系电话")
                        .HasMaxLength(20);

                    b.Property<string>("CountrySpecific")
                        .HasColumnType("nvarchar(1024)")
                        .HasComment("具体国家或地区")
                        .HasMaxLength(1024);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasComment("日期");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DistrictSpecific")
                        .HasColumnType("nvarchar(1024)")
                        .HasComment("区")
                        .HasMaxLength(1024);

                    b.Property<string>("DoctorSignPicture")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("接诊医生签名（图片地址或base64）");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<string>("IdentityNo")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("身份证号")
                        .HasMaxLength(20);

                    b.Property<bool>("IsAggregation")
                        .HasColumnType("bit")
                        .HasComment("14天内您的家庭、办公室、学校或托幼机构班次、车间等集体单位是否出现2例及以上发热和/或呼吸道症状的聚集性病例");

                    b.Property<bool>("IsConjunctivitis")
                        .HasColumnType("bit")
                        .HasComment("是否结膜炎");

                    b.Property<bool>("IsContactHotPatient")
                        .HasColumnType("bit")
                        .HasComment("近14天内您是否接触过来自境外以及境内中高风险地区的人员");

                    b.Property<bool>("IsContactNewCoronavirus")
                        .HasColumnType("bit")
                        .HasComment("近14天内是否接触过确诊病例或无症状感染者(核酸检测阳性者)");

                    b.Property<bool>("IsCough")
                        .HasColumnType("bit")
                        .HasComment("是否干咳");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDiarrhea")
                        .HasColumnType("bit")
                        .HasComment("是否腹泻");

                    b.Property<bool>("IsFeeble")
                        .HasColumnType("bit")
                        .HasComment("是否乏力");

                    b.Property<bool>("IsHearingAndSmellingLoss")
                        .HasColumnType("bit")
                        .HasComment("是否嗅觉、味觉减退");

                    b.Property<bool>("IsHot")
                        .HasColumnType("bit")
                        .HasComment("是否发热");

                    b.Property<bool>("IsMediumAndHighRisk")
                        .HasColumnType("bit")
                        .HasComment("近14天内您是否去过境外以及境内中高风险地区，或有病例报告的社区");

                    b.Property<bool>("IsMusclePain")
                        .HasColumnType("bit")
                        .HasComment("是否肌痛");

                    b.Property<bool>("IsNoseRunning")
                        .HasColumnType("bit")
                        .HasComment("是否流涕");

                    b.Property<bool>("IsSoreThroat")
                        .HasColumnType("bit")
                        .HasComment("是否咽痛");

                    b.Property<bool>("IsStuffyNose")
                        .HasColumnType("bit")
                        .HasComment("是否鼻塞");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者姓名")
                        .HasMaxLength(50);

                    b.Property<string>("PatientSignPicture")
                        .HasColumnType("nvarchar(1024)")
                        .HasComment("患者签名（图片地址或base64）")
                        .HasMaxLength(1024);

                    b.Property<string>("ProvinceSpecific")
                        .HasColumnType("nvarchar(1024)")
                        .HasComment("省")
                        .HasMaxLength(1024);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("decimal(18, 4)")
                        .HasComment("体温");

                    b.HasKey("Id");

                    b.ToTable("Triage_Covid19Exam");

                    b.HasComment("新冠问卷");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.FastTrackRegisterInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("患者年龄")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者姓名")
                        .HasMaxLength(50);

                    b.Property<string>("PoliceCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("警务人员警号")
                        .HasMaxLength(20);

                    b.Property<string>("PoliceName")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("警务人员姓名")
                        .HasMaxLength(20);

                    b.Property<Guid>("PoliceStationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("所属派出所Id");

                    b.Property<string>("PoliceStationName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("所处派出所名称")
                        .HasMaxLength(50);

                    b.Property<string>("PoliceStationPhone")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("所属派出所电话号码")
                        .HasMaxLength(20);

                    b.Property<string>("ReceptionNurse")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("接诊护士")
                        .HasMaxLength(20);

                    b.Property<string>("ReceptionNurseName")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("接诊护士名称")
                        .HasMaxLength(20);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("性别")
                        .HasMaxLength(20);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Triage_FastTrackRegisterInfo");

                    b.HasComment("快速通道登记信息表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.FastTrackSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("FastTrackName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("快速通道名称")
                        .HasMaxLength(100);

                    b.Property<string>("FastTrackPhone")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("快速通道电话")
                        .HasMaxLength(20);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneAndName")
                        .HasColumnType("nvarchar(150)")
                        .HasComment("快速通道电话和名称")
                        .HasMaxLength(150);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Dict_FastTrackSetting");

                    b.HasComment("快速通道");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.GroupInjuryInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("概要说明")
                        .HasMaxLength(500);

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("GroupInjuryCode")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("群伤事件类型")
                        .HasMaxLength(500);

                    b.Property<string>("GroupInjuryName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("HappeningTime")
                        .HasColumnType("datetime2")
                        .HasComment("事件发生时间");

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("详细描述")
                        .HasMaxLength(500);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Triage_GroupInjuryInfo");

                    b.HasComment("院前分诊群伤表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.JudgmentItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<int>("EmergencyLevel")
                        .HasColumnType("int")
                        .HasComment("级别");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<int>("IsEnabled")
                        .HasColumnType("int")
                        .HasComment("是否启用; 0：不启用； 1：启用");

                    b.Property<int>("IsGreenRoad")
                        .HasColumnType("int")
                        .HasComment("是否属于绿色通道； 0：不属于 1：属于");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("分诊依据");

                    b.Property<Guid>("JudgmentMasterId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("判定依据主诉分类主键Id");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Py")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("拼音码");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("JudgmentMasterId");

                    b.ToTable("Dict_JudgmentItem");

                    b.HasComment("院前分诊判定依据项目表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.JudgmentMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<int>("IsEnabled")
                        .HasColumnType("int")
                        .HasComment("是否启用; 0：不启用； 1：启用");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主诉名称");

                    b.Property<Guid>("JudgmentTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("判定依据科室分类主键Id");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Py")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("拼音码");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("JudgmentTypeId");

                    b.ToTable("Dict_JudgmentMaster");

                    b.HasComment("院前分诊判定依据主诉分类表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.JudgmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("科室分类名称");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<int>("IsEnabled")
                        .HasColumnType("int")
                        .HasComment("是否启用; 0：不启用； 1：启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Py")
                        .HasColumnType("varchar(50)")
                        .HasComment("拼音码");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TriageDeptCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("对应科室");

                    b.HasKey("Id");

                    b.ToTable("Dict_JudgmentType");

                    b.HasComment("院前分诊判定依据科室分类表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.LevelTriageRelationDirection", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("LevelTriageDirectionCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("分诊去向级别代码")
                        .HasMaxLength(50);

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("OtherDirectionCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("其他去向code")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TriageDirectionCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("分诊去向code")
                        .HasMaxLength(50);

                    b.Property<string>("TriageLevelCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("分诊级别代码")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Dict_LevelTriageRelationDirection");

                    b.HasComment("院前分诊级别关联取消字典表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.PatientInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("患者住址")
                        .HasMaxLength(200);

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("年龄")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2")
                        .HasComment("患者出生日期");

                    b.Property<string>("CallingSn")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("叫号排队号")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CancellationTime")
                        .HasColumnType("datetime2")
                        .HasComment("作废时间");

                    b.Property<string>("CancellationUser")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("作废人");

                    b.Property<string>("CarNum")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("车牌号")
                        .HasMaxLength(20);

                    b.Property<string>("CardNo")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("诊疗卡号")
                        .HasMaxLength(20);

                    b.Property<string>("ChargeType")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("费别Code")
                        .HasMaxLength(60);

                    b.Property<string>("ChargeTypeName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("费别名称")
                        .HasMaxLength(60);

                    b.Property<string>("Consciousness")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("意识Code")
                        .HasMaxLength(60);

                    b.Property<string>("ConsciousnessName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("意识名称")
                        .HasMaxLength(60);

                    b.Property<string>("ContactsAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("监护人/联系人地址")
                        .HasMaxLength(50);

                    b.Property<string>("ContactsPerson")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("紧急联系人")
                        .HasMaxLength(20);

                    b.Property<string>("ContactsPhone")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("联系电话")
                        .HasMaxLength(20);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("国家Code")
                        .HasMaxLength(60);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("CrowdCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("人群编码")
                        .HasMaxLength(50);

                    b.Property<string>("CrowdName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("人群")
                        .HasMaxLength(50);

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DiseaseCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("重点病种Code")
                        .HasMaxLength(50);

                    b.Property<string>("DiseaseName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("重点病种名称")
                        .HasMaxLength(50);

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("FirstDoctorCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("首诊医生工号")
                        .HasMaxLength(50);

                    b.Property<string>("FirstDoctorName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("首诊医生名称")
                        .HasMaxLength(50);

                    b.Property<int?>("GestationalWeeks")
                        .HasColumnType("int")
                        .HasComment("孕周");

                    b.Property<string>("GreenRoadCode")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("绿色通道Code")
                        .HasMaxLength(60);

                    b.Property<string>("GreenRoadName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("绿色通道名称")
                        .HasMaxLength(60);

                    b.Property<Guid>("GroupInjuryInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("群伤事件Id");

                    b.Property<string>("GuardianIdCardNo")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("监护人身份证号码")
                        .HasMaxLength(20);

                    b.Property<string>("GuardianIdTypeCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("GuardianIdTypeName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("GuardianPhone")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("监护人/联系人电话")
                        .HasMaxLength(20);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<string>("IdTypeCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("证件类型编码")
                        .HasMaxLength(50);

                    b.Property<string>("IdTypeName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("证件类型编码")
                        .HasMaxLength(50);

                    b.Property<string>("Identity")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("患者身份Code")
                        .HasMaxLength(60);

                    b.Property<string>("IdentityName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("患者身份名称")
                        .HasMaxLength(60);

                    b.Property<string>("IdentityNo")
                        .HasColumnType("nvarchar(500)")
                        .HasComment("身份证号")
                        .HasMaxLength(500);

                    b.Property<string>("InsuplcAdmdvCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("参保地代码")
                        .HasMaxLength(20);

                    b.Property<bool>("IsBasicInfoReadOnly")
                        .HasColumnType("bit")
                        .HasComment("患者基本信息是否不可编辑");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit")
                        .HasComment("是否作废");

                    b.Property<bool>("IsCovidExamFromOuterSystem")
                        .HasColumnType("bit")
                        .HasComment("新冠问卷是否从外部获取");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsNoThree")
                        .HasColumnType("bit")
                        .HasComment("是否三无病人");

                    b.Property<string>("LastDirectionCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("最终去向代码")
                        .HasMaxLength(50);

                    b.Property<string>("LastDirectionName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("最终去向名称")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedicalNo")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医保卡号")
                        .HasMaxLength(20);

                    b.Property<Guid>("MergeRecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("合并档案表主键Id");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主诉Code");

                    b.Property<string>("NarrationComments")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主诉备注");

                    b.Property<string>("NarrationName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主诉名称");

                    b.Property<string>("Nation")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("民族Code")
                        .HasMaxLength(60);

                    b.Property<string>("NationName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("民族名称")
                        .HasMaxLength(60);

                    b.Property<DateTime?>("OnsetTime")
                        .HasColumnType("datetime2")
                        .HasComment("发病时间");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者唯一标识(HIS)")
                        .HasMaxLength(50);

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者姓名")
                        .HasMaxLength(50);

                    b.Property<int?>("PersistDays")
                        .HasColumnType("int")
                        .HasComment("持续时间（天）");

                    b.Property<int?>("PersistHours")
                        .HasColumnType("int")
                        .HasComment("持续时间（时）");

                    b.Property<int?>("PersistMinutes")
                        .HasColumnType("int")
                        .HasComment("持续时间（分）");

                    b.Property<string>("Py")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("患者姓名拼音首字母")
                        .HasMaxLength(100);

                    b.Property<string>("RFID")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("RFID")
                        .HasMaxLength(20);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("SeqNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("预约流水号")
                        .HasMaxLength(50);

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("患者性别Code")
                        .HasMaxLength(20);

                    b.Property<string>("SexName")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("患者性别名称")
                        .HasMaxLength(20);

                    b.Property<string>("SocietyRelationCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("与联系人关系编码")
                        .HasMaxLength(20);

                    b.Property<string>("SocietyRelationName")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("与联系人关系名称")
                        .HasMaxLength(10);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<DateTime?>("StartTriageTime")
                        .HasColumnType("datetime2")
                        .HasComment("开始分诊时间");

                    b.Property<Guid>("TaskInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("任务单号");

                    b.Property<string>("TaskInfoNum")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("任务单流水号")
                        .HasMaxLength(50);

                    b.Property<string>("ToHospitalWayCode")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("来院方式Code")
                        .HasMaxLength(60);

                    b.Property<string>("ToHospitalWayName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("来院方式名称")
                        .HasMaxLength(60);

                    b.Property<string>("TriageSource")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("分诊来源标识 0：院前 1：急诊 2：卒中 3：胸痛 4：创伤 5：孕产妇 6：新生儿 7：中毒 8：其它")
                        .HasMaxLength(20);

                    b.Property<int>("TriageStatus")
                        .HasColumnType("int")
                        .HasComment("分诊状态，0：暂存，1：分诊");

                    b.Property<DateTime?>("TriageTime")
                        .HasColumnType("datetime2")
                        .HasComment("分诊时间");

                    b.Property<string>("TriageUserCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("分诊人code")
                        .HasMaxLength(50);

                    b.Property<string>("TriageUserName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("分诊人名称")
                        .HasMaxLength(50);

                    b.Property<string>("TypeOfVisitCode")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("就诊类型Code")
                        .HasMaxLength(60);

                    b.Property<string>("TypeOfVisitName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("就诊类型名称")
                        .HasMaxLength(60);

                    b.Property<string>("VisitNo")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("就诊号")
                        .HasMaxLength(20);

                    b.Property<string>("VisitReasonCode")
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("就诊原因编码")
                        .HasMaxLength(4000);

                    b.Property<string>("VisitReasonName")
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("就诊原因")
                        .HasMaxLength(4000);

                    b.Property<int>("VisitStatus")
                        .HasColumnType("int")
                        .HasComment("就诊状态");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("体重")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Triage_PatientInfo");

                    b.HasComment("院前分诊患者信息表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.RegisterInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("CancellationTime")
                        .HasColumnType("datetime2")
                        .HasComment("取消挂号时间");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit")
                        .HasComment("是否已取消挂号");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("挂号状态 0：已挂号 1：已退号")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<Guid>("PatientInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("分诊患者基本信息表Id");

                    b.Property<string>("RegisterDeptCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("挂号科室编码")
                        .HasMaxLength(50);

                    b.Property<string>("RegisterDoctorCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("挂号医生编码")
                        .HasMaxLength(50);

                    b.Property<string>("RegisterDoctorName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("挂号医生姓名")
                        .HasMaxLength(50);

                    b.Property<string>("RegisterNo")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("挂号流水号")
                        .HasMaxLength(50);

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime2")
                        .HasComment("挂号时间");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("VisitNo")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("就诊次数")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("PatientInfoId");

                    b.ToTable("Triage_RegisterInfo");

                    b.HasComment("患者挂号信息表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.RegisterMode", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("挂号模式代码")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("挂号模式名称")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Triage_RegisterMode");

                    b.HasComment("挂号模式");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.ReportHotMorningAndNight", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasComment("日期");

                    b.Property<string>("DeptCode")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("科室编码")
                        .HasMaxLength(60);

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("科室名称")
                        .HasMaxLength(60);

                    b.Property<int>("MorningCount")
                        .HasColumnType("int")
                        .HasComment("早八统计人数");

                    b.Property<int?>("MorningCountChanged")
                        .HasColumnType("int")
                        .HasComment("早八统计人数（修改）");

                    b.Property<int>("NightCount")
                        .HasColumnType("int")
                        .HasComment("晚八统计人数");

                    b.Property<int?>("NightCountChanged")
                        .HasColumnType("int")
                        .HasComment("晚八统计人数（修改）");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Rpt_HotMorningAndNight");

                    b.HasComment("早八晚八发热统计");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.ReportSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("ConnectionString")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("数据库连接")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<int>("IsEnabled")
                        .HasColumnType("int")
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<int>("OrderType")
                        .HasColumnType("int")
                        .HasComment("排序类型； 0：升序； 1：降序；");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("ReportHead")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("报表表头");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("报表名称")
                        .HasMaxLength(50);

                    b.Property<string>("ReportSortFiled")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("报表排序字段")
                        .HasMaxLength(50);

                    b.Property<string>("ReportSql")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("查询语句");

                    b.Property<string>("ReportTypeCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("报表分类")
                        .HasMaxLength(20);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Dict_ReportSetting");

                    b.HasComment("分诊报表设置表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.ReportSettingQueryOption", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DataSource")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("数据源");

                    b.Property<int>("DataSourceFlag")
                        .HasColumnType("int")
                        .HasComment("数据源标识：0.sql  1.json字符串");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("显示名称");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("QueryFiled")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("查询字段");

                    b.Property<string>("QueryName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("查询名称")
                        .HasMaxLength(50);

                    b.Property<string>("QueryType")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("查询类型");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<Guid>("ReportSettingId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("报表设置表主键Id");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("ReportSettingId");

                    b.ToTable("Dict_ReportSettingQueryOption");

                    b.HasComment("分诊报表查询选项表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.ScoreInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("LevelCode")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("等级编码")
                        .HasMaxLength(60);

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<Guid>("PatientInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("院前分诊患者建档表主键Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("ScoreContent")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("评分内容 Json字符串");

                    b.Property<string>("ScoreDescription")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("评分等级")
                        .HasMaxLength(60);

                    b.Property<string>("ScoreType")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("评分类型")
                        .HasMaxLength(60);

                    b.Property<int>("ScoreValue")
                        .HasColumnType("int")
                        .HasComment("评分数值");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("PatientInfoId");

                    b.ToTable("Triage_ScoreInfo");

                    b.HasComment("院前分诊评分表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.ScoreManage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("类名")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DynamicLibraryName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("动态库名称")
                        .HasMaxLength(50);

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("ScoreName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("评分名称")
                        .HasMaxLength(50);

                    b.Property<string>("ScoreType")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("评分类型")
                        .HasMaxLength(20);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Dict_ScoreManage");

                    b.HasComment("评分管理表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.TableSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("列名")
                        .HasMaxLength(20);

                    b.Property<string>("ColumnValue")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("列值")
                        .HasMaxLength(50);

                    b.Property<int>("ColumnWidth")
                        .HasColumnType("int")
                        .HasComment("列宽");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DefaultColumnName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("列名(默认值)");

                    b.Property<int>("DefaultColumnWidth")
                        .HasColumnType("int")
                        .HasComment("列宽(默认值)");

                    b.Property<int>("DefaultSequenceNo")
                        .HasColumnType("int")
                        .HasComment("序号(默认值)");

                    b.Property<bool>("DefaultShowOverflowTooltip")
                        .HasColumnType("bit")
                        .HasComment("单元格内文本是否换行(默认值) 0：不换行，鼠标移上显示更多  1：换行，展示所有数据");

                    b.Property<bool>("DefaultVisible")
                        .HasColumnType("bit")
                        .HasComment("显示(默认值) 0：不显示  1：显示");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("启用状态 0：已启用 1：未启用")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int>("SequenceNo")
                        .HasColumnType("int")
                        .HasComment("序号");

                    b.Property<bool>("ShowOverflowTooltip")
                        .HasColumnType("bit")
                        .HasComment("单元格内文本是否换行 0：不换行，鼠标移上显示更多  1：换行，展示所有数据");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TableCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("表格名称（不含中文）")
                        .HasMaxLength(50);

                    b.Property<bool>("Visible")
                        .HasColumnType("bit")
                        .HasComment("显示 0：不显示  1：显示");

                    b.HasKey("Id");

                    b.ToTable("Dict_TableSetting");

                    b.HasComment("表格配置表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.TriageConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtraCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("额外代码（费别对接省医保缴费档次代码）")
                        .HasMaxLength(50);

                    b.Property<string>("HisConfigCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("对应 HIS 系统中的代码")
                        .HasMaxLength(50);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<int>("IsDisable")
                        .HasColumnType("int")
                        .HasComment("是否启用 0：不启用 1：启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<int>("Platform")
                        .HasColumnType("int")
                        .HasComment("平台标识，0:不标识,1:院前急救，2：预检分诊，3：急诊管理,报表使用");

                    b.Property<string>("Py")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("拼音码")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TriageConfigCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("分诊设置代码")
                        .HasMaxLength(50);

                    b.Property<string>("TriageConfigName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("分诊设置名称")
                        .HasMaxLength(50);

                    b.Property<int>("TriageConfigType")
                        .HasColumnType("int")
                        .HasComment("分诊设置类型 1001:绿色通道 1002:群伤事件 1003:院前分诊评分类型 1004:来院方式  1005:科室配置 1006:院前分诊去向");

                    b.Property<bool>("UnDeletable")
                        .HasColumnType("bit")
                        .HasComment("是否不允许删除");

                    b.HasKey("Id");

                    b.ToTable("Dict_TriageConfig");

                    b.HasComment("分诊字典");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.TriageConfigTypeDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TriageConfigTypeCode")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("分诊设置类型代码")
                        .HasMaxLength(20);

                    b.Property<string>("TriageConfigTypeName")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("分诊设置类型名称")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Dict_TriageConfigTypeDescription");

                    b.HasComment("分诊字典类型");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.TriageDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessMode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("接入方式")
                        .HasMaxLength(50);

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DeviceCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("设备编号")
                        .HasMaxLength(50);

                    b.Property<string>("DeviceIPOrCom")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("设备IP或者串口")
                        .HasMaxLength(100);

                    b.Property<string>("DeviceModel")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("设备型号")
                        .HasMaxLength(100);

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("设备名称")
                        .HasMaxLength(100);

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("FactoryInfo")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("厂家信息")
                        .HasMaxLength(100);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Dict_TriageDevice");

                    b.HasComment("设备信息");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.VitalSignExpression", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DefaultNdLevelExpression")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("默认Ⅱ级评分表达式")
                        .HasMaxLength(200);

                    b.Property<string>("DefaultRdLevelExpression")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("默认Ⅲ级评分表达式")
                        .HasMaxLength(200);

                    b.Property<string>("DefaultStLevelExpression")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("默认Ⅰ级评分表达式")
                        .HasMaxLength(200);

                    b.Property<string>("DefaultThALevelExpression")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("默认Ⅳa级评分表达式")
                        .HasMaxLength(200);

                    b.Property<string>("DefaultThBLevelExpression")
                        .HasColumnType("nvarchar(300)")
                        .HasComment("默认Ⅳb级评分表达式")
                        .HasMaxLength(300);

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("评分项")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("NdLevelExpression")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Ⅱ级评分表达式")
                        .HasMaxLength(200);

                    b.Property<string>("RdLevelExpression")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Ⅲ级评分表达式")
                        .HasMaxLength(200);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("StLevelExpression")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Ⅰ级评分表达式")
                        .HasMaxLength(200);

                    b.Property<string>("ThALevelExpression")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Ⅳa级评分表达式")
                        .HasMaxLength(200);

                    b.Property<string>("ThBLevelExpression")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Ⅳb级评分表达式")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Dict_VitalSignExpression");

                    b.HasComment("院前分诊生命体征评级标准表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.VitalSignInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<float?>("BloodGlucose")
                        .HasColumnType("real")
                        .HasComment("血糖（单位 mmol/L）");

                    b.Property<string>("BreathRate")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("呼吸")
                        .HasMaxLength(20);

                    b.Property<string>("CardiogramCode")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("心电图 Code")
                        .HasMaxLength(100);

                    b.Property<string>("CardiogramName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("心电图 名称")
                        .HasMaxLength(100);

                    b.Property<string>("ConsciousnessCode")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("意识Code")
                        .HasMaxLength(100);

                    b.Property<string>("ConsciousnessName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("意识名称")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DeviceCode")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("设备编码")
                        .HasMaxLength(100);

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HeartRate")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("心率")
                        .HasMaxLength(20);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<Guid>("PatientInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("院前分诊患者建档表主键Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("RemarkName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("生命体征备注名称")
                        .HasMaxLength(100);

                    b.Property<string>("Sbp")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("收缩压")
                        .HasMaxLength(20);

                    b.Property<string>("Sdp")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("舒张压")
                        .HasMaxLength(20);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("SpO2")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("血氧饱和度")
                        .HasMaxLength(20);

                    b.Property<string>("Temp")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("体温")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("PatientInfoId")
                        .IsUnique();

                    b.ToTable("Triage_VitalSignInfo");

                    b.HasComment("院前分诊生命体征表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.AdmissionInfo", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.PatientInfo", null)
                        .WithOne("AdmissionInfo")
                        .HasForeignKey("SamJan.MicroService.PreHospital.TriageService.AdmissionInfo", "PatientInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.ConsequenceInfo", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.PatientInfo", null)
                        .WithOne("ConsequenceInfo")
                        .HasForeignKey("SamJan.MicroService.PreHospital.TriageService.ConsequenceInfo", "PatientInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.JudgmentItem", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.JudgmentMaster", null)
                        .WithMany("JudgmentItems")
                        .HasForeignKey("JudgmentMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.JudgmentMaster", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.JudgmentType", null)
                        .WithMany("JudgmentMasters")
                        .HasForeignKey("JudgmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.RegisterInfo", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.PatientInfo", null)
                        .WithMany("RegisterInfo")
                        .HasForeignKey("PatientInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.ReportSettingQueryOption", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.ReportSetting", null)
                        .WithMany("ReportSettingQueryOption")
                        .HasForeignKey("ReportSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.ScoreInfo", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.PatientInfo", null)
                        .WithMany("ScoreInfo")
                        .HasForeignKey("PatientInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.VitalSignInfo", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.PatientInfo", null)
                        .WithOne("VitalSignInfo")
                        .HasForeignKey("SamJan.MicroService.PreHospital.TriageService.VitalSignInfo", "PatientInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
