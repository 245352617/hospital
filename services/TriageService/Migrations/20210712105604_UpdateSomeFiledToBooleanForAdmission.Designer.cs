// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;

namespace SamJan.MicroService.PreHospital.TriageService.Migrations
{
    [DbContext(typeof(PreHospitalTriageDbContext))]
    [Migration("20210712105604_UpdateSomeFiledToBooleanForAdmission")]
    partial class UpdateSomeFiledToBooleanForAdmission
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.BaseSetting.FastTrackSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("FastTrackName")
                        .HasColumnType("varchar(100)")
                        .HasComment("快速通道名称");

                    b.Property<string>("FastTrackPhone")
                        .HasColumnType("varchar(20)")
                        .HasComment("快速通道电话");

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("PhoneAndName")
                        .HasColumnType("varchar(150)")
                        .HasComment("快速通道电话和名称");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Config_FastTrackSetting");

                    b.HasComment("快速通道");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.BaseSetting.TableSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("列名");

                    b.Property<string>("ColumnValue")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("列值");

                    b.Property<int>("ColumnWidth")
                        .HasColumnType("int")
                        .HasComment("列宽");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DefaultColumnName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("列名(默认值)");

                    b.Property<int>("DefaultColumnWidth")
                        .HasColumnType("int")
                        .HasComment("列宽(默认值)");

                    b.Property<int>("DefaultSequenceNo")
                        .HasColumnType("int")
                        .HasComment("序号(默认值)");

                    b.Property<bool>("DefaultShowOverflowTooltip")
                        .HasColumnType("bit")
                        .HasComment("单元格内文本是否换行(默认值) 0：不换行，鼠标移上显示更多  1：换行，展示所有数据");

                    b.Property<bool>("DefaultVisible")
                        .HasColumnType("bit")
                        .HasComment("显示(默认值) 0：不显示  1：显示");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("启用状态 0：已启用 1：未启用")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int>("SequenceNo")
                        .HasColumnType("int")
                        .HasComment("序号");

                    b.Property<bool>("ShowOverflowTooltip")
                        .HasColumnType("bit")
                        .HasComment("单元格内文本是否换行 0：不换行，鼠标移上显示更多  1：换行，展示所有数据");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TableCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("表格名称（不含中文）");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit")
                        .HasComment("显示 0：不显示  1：显示");

                    b.HasKey("Id");

                    b.ToTable("Config_TableSetting");

                    b.HasComment("表格配置表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.FastTrack.FastTrackRegisterInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("患者年龄");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("患者姓名");

                    b.Property<string>("PoliceCode")
                        .HasColumnType("varchar(20)")
                        .HasComment("警务人员警号");

                    b.Property<string>("PoliceName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("警务人员姓名");

                    b.Property<string>("PoliceStationName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("所处派出所名称");

                    b.Property<string>("PoliceStationPhone")
                        .HasColumnType("varchar(20)")
                        .HasComment("所属派出所电话号码");

                    b.Property<string>("ReceptionNurse")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("接诊护士");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("Sex")
                        .HasColumnType("varchar(20)")
                        .HasComment("性别");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Triage_FastTrackRegisterInfo");

                    b.HasComment("快速通道登记信息表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.AdmissionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbroadEndTime")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("境外结束日期");

                    b.Property<string>("AbroadStartTime")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("境外开始日期");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("CountrySpecific")
                        .HasColumnType("varchar(200)")
                        .HasComment("具体国家/地区");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<string>("IsAggregation")
                        .HasColumnType("varchar(10)")
                        .HasComment("是否聚集性发病");

                    b.Property<string>("IsBeenAbroad")
                        .HasColumnType("varchar(10)")
                        .HasComment("2周内是否有境外旅居史");

                    b.Property<string>("IsContactHotPatient")
                        .HasColumnType("varchar(10)")
                        .HasComment("2周内是否接触过中高风险区发热患者");

                    b.Property<string>("IsContactNewCoronavirus")
                        .HasColumnType("varchar(10)")
                        .HasComment("2周内是否接触过确诊新冠阳性患者");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<string>("IsFocusIsolated")
                        .HasColumnType("varchar(10)")
                        .HasComment("最近14天内您是否在集中隔离医学观察场所留观");

                    b.Property<string>("IsHot")
                        .HasColumnType("varchar(10)")
                        .HasComment("是否发热");

                    b.Property<string>("IsMediumAndHighRisk")
                        .HasColumnType("varchar(10)")
                        .HasComment("是否去过中高风险区");

                    b.Property<string>("IsSoreThroatAndCough")
                        .HasColumnType("varchar(10)")
                        .HasComment("是否咽痛咳嗽");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("MedicalHistory")
                        .HasColumnType("varchar(500)")
                        .HasComment("现病史");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("PastMedicalHistory")
                        .HasColumnType("varchar(500)")
                        .HasComment("既往史");

                    b.Property<Guid>("PatientInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("院前分诊患者建档表主键Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("ReturnTime")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("回国日期");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("PatientInfoId")
                        .IsUnique();

                    b.ToTable("Triage_AdmissionInfo");

                    b.HasComment("入院情况信息表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.ConsequenceInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActTriageLevel")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("实际分诊级别");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("AutoTriageLevel")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("自动分诊级别");

                    b.Property<string>("ChangeDept")
                        .HasColumnType("varchar(60)")
                        .HasComment("科室变更");

                    b.Property<string>("ChangeLevel")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("分诊级别变更");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<Guid>("PatientInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("院前分诊患者建档表主键Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TriageDeptCode")
                        .HasColumnType("varchar(60)")
                        .HasComment("分诊科室编码");

                    b.Property<string>("TriageTargetCode")
                        .HasColumnType("varchar(60)")
                        .HasComment("分诊去向编码");

                    b.HasKey("Id");

                    b.HasIndex("PatientInfoId")
                        .IsUnique();

                    b.ToTable("Triage_ConsequenceInfo");

                    b.HasComment("院前分诊结果表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.GroupInjuryInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("概要说明");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("GroupInjuryCode")
                        .HasColumnType("varchar(200)")
                        .HasComment("群伤事件类型");

                    b.Property<DateTime>("HappeningTime")
                        .HasColumnType("datetime2")
                        .HasComment("事件发生时间");

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<int>("NdLevelCount")
                        .HasColumnType("int")
                        .HasComment("Ⅱ级患者人数");

                    b.Property<int>("RdLevelCount")
                        .HasColumnType("int")
                        .HasComment("Ⅲ级患者人数");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("详细描述")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<int>("StLevelCount")
                        .HasColumnType("int")
                        .HasComment("Ⅰ级患者人数");

                    b.Property<int>("ThaLevelCount")
                        .HasColumnType("int")
                        .HasComment("Ⅳa级患者人数");

                    b.Property<int>("ThbLevelCount")
                        .HasColumnType("int")
                        .HasComment("Ⅳb级患者人数");

                    b.HasKey("Id");

                    b.ToTable("Triage_GroupInjuryInfo");

                    b.HasComment("院前分诊群伤表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.MergeRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Triage_MergeRecord");

                    b.HasComment("院前分诊患者档案合并记录表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.PatientInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("患者住址");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("年龄");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2")
                        .HasComment("患者出生日期");

                    b.Property<string>("CarNum")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("车牌号");

                    b.Property<string>("CardNo")
                        .HasColumnType("varchar(20)")
                        .HasComment("诊疗卡号");

                    b.Property<string>("ChargeType")
                        .HasColumnType("varchar(60)")
                        .HasComment("费别");

                    b.Property<string>("Consciousness")
                        .HasColumnType("varchar(60)")
                        .HasComment("意识");

                    b.Property<string>("ContactsPerson")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("紧急联系人");

                    b.Property<string>("ContactsPhone")
                        .HasColumnType("varchar(20)")
                        .HasComment("联系电话");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(60)")
                        .HasComment("国家");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("分诊时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DiseaseCode")
                        .HasColumnType("varchar(50)")
                        .HasComment("重点病种Code");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("GreenRoadCode")
                        .HasColumnType("varchar(60)")
                        .HasComment("绿色通道");

                    b.Property<Guid>("GroupInjuryInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("群伤事件Id");

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<string>("Identity")
                        .HasColumnType("varchar(60)")
                        .HasComment("患者身份");

                    b.Property<string>("IdentityNo")
                        .HasColumnType("varchar(20)")
                        .HasComment("身份证号");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsNoThree")
                        .HasColumnType("bit")
                        .HasComment("是否三无病人");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("MedicalNo")
                        .HasColumnType("varchar(20)")
                        .HasComment("医保卡号");

                    b.Property<Guid>("MergeRecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("合并档案表主键Id");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Narration")
                        .HasColumnType("varchar(max)")
                        .HasComment("主诉");

                    b.Property<string>("Nation")
                        .HasColumnType("varchar(60)")
                        .HasComment("民族");

                    b.Property<DateTime?>("OnsetTime")
                        .HasColumnType("datetime2")
                        .HasComment("发病时间");

                    b.Property<string>("PatientId")
                        .HasColumnType("varchar(50)")
                        .HasComment("患者唯一标识(HIS)");

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者姓名");

                    b.Property<string>("Py")
                        .HasColumnType("varchar(100)")
                        .HasComment("患者姓名拼音首字母");

                    b.Property<string>("RFID")
                        .HasColumnType("varchar(20)")
                        .HasComment("RFID");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("Sex")
                        .HasColumnType("varchar(20)")
                        .HasComment("患者性别");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<DateTime?>("StartTriageTime")
                        .HasColumnType("datetime2")
                        .HasComment("开始分诊时间");

                    b.Property<Guid>("TaskInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("任务单号");

                    b.Property<string>("ToHospitalWayCode")
                        .HasColumnType("varchar(60)")
                        .HasComment("来院方式");

                    b.Property<string>("TriageSource")
                        .HasColumnType("varchar(20)")
                        .HasComment("分诊来源标识 0：院前 1：急诊 2：卒中 3：胸痛 4：创伤 5：孕产妇 6：新生儿 7：中毒 8：其它");

                    b.Property<int>("TriageStatus")
                        .HasColumnType("int")
                        .HasComment("分诊状态，0：暂存，1：分诊");

                    b.Property<DateTime?>("TriageTime")
                        .HasColumnType("datetime2")
                        .HasComment("分诊时间");

                    b.Property<string>("TriageUserCode")
                        .HasColumnType("varchar(30)")
                        .HasComment("分诊人");

                    b.Property<string>("TypeOfVisitCode")
                        .HasColumnType("varchar(60)")
                        .HasComment("就诊类型");

                    b.Property<string>("VisitNo")
                        .HasColumnType("varchar(20)")
                        .HasComment("就诊次数");

                    b.HasKey("Id");

                    b.ToTable("Triage_PatientInfo");

                    b.HasComment("院前分诊患者信息表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.RegisterInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("挂号状态 0：已挂号 1：已退号")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<Guid>("PatientInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("分诊患者基本信息表Id");

                    b.Property<string>("RegisterDeptCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("挂号科室编码");

                    b.Property<string>("RegisterDoctorCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("挂号医生编码");

                    b.Property<string>("RegisterNo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("挂号流水号");

                    b.Property<DateTime>("RegisterTime")
                        .HasColumnType("datetime2")
                        .HasComment("挂号时间");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("PatientInfoId");

                    b.ToTable("Triage_RegisterInfo");

                    b.HasComment("患者挂号信息表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.ScoreInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<Guid>("PatientInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("院前分诊患者建档表主键Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("ScoreContent")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("评分内容 Json字符串");

                    b.Property<string>("ScoreDescription")
                        .HasColumnType("nvarchar(60)")
                        .HasComment("评分等级");

                    b.Property<string>("ScoreType")
                        .HasColumnType("varchar(60)")
                        .HasComment("评分类型");

                    b.Property<int>("ScoreValue")
                        .HasColumnType("int")
                        .HasComment("评分数值");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("PatientInfoId");

                    b.ToTable("Triage_ScoreInfo");

                    b.HasComment("院前分诊评分表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.VitalSignInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("BreathRate")
                        .HasColumnType("varchar(20)")
                        .HasComment("呼吸");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HeartRate")
                        .HasColumnType("varchar(20)")
                        .HasComment("心率");

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<Guid>("PatientInfoId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("院前分诊患者建档表主键Id");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("Sbp")
                        .HasColumnType("varchar(20)")
                        .HasComment("收缩压");

                    b.Property<string>("Sdp")
                        .HasColumnType("varchar(20)")
                        .HasComment("舒张压");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("SpO2")
                        .HasColumnType("varchar(20)")
                        .HasComment("血氧饱和度");

                    b.Property<string>("Temp")
                        .HasColumnType("varchar(20)")
                        .HasComment("体温");

                    b.Property<string>("Weight")
                        .HasColumnType("varchar(20)")
                        .HasComment("体重");

                    b.HasKey("Id");

                    b.HasIndex("PatientInfoId")
                        .IsUnique();

                    b.ToTable("Triage_VitalSignInfo");

                    b.HasComment("院前分诊生命体征表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.JudgmentItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<int>("EmergencyLevel")
                        .HasColumnType("int")
                        .HasComment("级别");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<int>("IsEnabled")
                        .HasColumnType("int")
                        .HasComment("是否启用; 0：不启用； 1：启用");

                    b.Property<int>("IsGreenRoad")
                        .HasColumnType("int")
                        .HasComment("是否属于绿色通道； 0：不属于 1：属于");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("分诊依据");

                    b.Property<Guid>("JudgmentMasterId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("判定依据主诉分类主键Id");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Py")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("拼音码");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("JudgmentMasterId");

                    b.ToTable("Dict_JudgmentItem");

                    b.HasComment("院前分诊判定依据项目表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.JudgmentMaster", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<int>("IsEnabled")
                        .HasColumnType("int")
                        .HasComment("是否启用; 0：不启用； 1：启用");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("主诉名称");

                    b.Property<Guid>("JudgmentTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("判定依据科室分类主键Id");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Py")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("拼音码");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("JudgmentTypeId");

                    b.ToTable("Dict_JudgmentMaster");

                    b.HasComment("院前分诊判定依据主诉分类表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.JudgmentType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DeptName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("科室分类名称");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<int>("IsEnabled")
                        .HasColumnType("int")
                        .HasComment("是否启用; 0：不启用； 1：启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Py")
                        .HasColumnType("varchar(50)")
                        .HasComment("拼音码");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TriageDeptCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("对应科室");

                    b.HasKey("Id");

                    b.ToTable("Dict_JudgmentType");

                    b.HasComment("院前分诊判定依据科室分类表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.LevelTriageRelationDirection", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("LevelTriageDirectionCode")
                        .HasColumnType("varchar(50)")
                        .HasComment("分诊去向级别代码");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("OtherDirectionCode")
                        .HasColumnType("varchar(50)")
                        .HasComment("其他去向code");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TriageDirectionCode")
                        .HasColumnType("varchar(50)")
                        .HasComment("分诊去向code");

                    b.Property<string>("TriageLevelCode")
                        .HasColumnType("varchar(50)")
                        .HasComment("分诊级别代码");

                    b.HasKey("Id");

                    b.ToTable("Dict_LevelTriageRelationDirection");

                    b.HasComment("院前分诊级别关联取消字典表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.ReportSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<int>("IsEnabled")
                        .HasColumnType("int")
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<int>("OrderType")
                        .HasColumnType("int")
                        .HasComment("排序类型； 0：升序； 1：降序；");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("ReportHead")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("报表表头");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("报表名称");

                    b.Property<string>("ReportSortFiled")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("报表排序字段");

                    b.Property<string>("ReportSql")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("查询语句");

                    b.Property<string>("ReportTypeCode")
                        .HasColumnType("varchar(20)")
                        .HasComment("报表分类");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Dict_ReportSetting");

                    b.HasComment("分诊报表设置表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.ReportSettingQueryOption", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DataSourceSql")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("数据源：SQL");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("显示名称");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("QueryFiled")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("查询字段");

                    b.Property<string>("QueryName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("查询名称");

                    b.Property<string>("QueryType")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("查询类型");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<Guid>("ReportSettingId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("报表设置表主键Id");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("ReportSettingId");

                    b.ToTable("Dict_ReportSettingQueryOption");

                    b.HasComment("分诊报表查询选项表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.ScoreManage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<string>("ClassName")
                        .HasColumnType("varchar(50)")
                        .HasComment("类名");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DynamicLibraryName")
                        .HasColumnType("varchar(50)")
                        .HasComment("动态库名称");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<string>("ScoreName")
                        .HasColumnType("varchar(50)")
                        .HasComment("评分名称");

                    b.Property<string>("ScoreType")
                        .HasColumnType("varchar(20)")
                        .HasComment("评分类型");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Dict_ScoreManage");

                    b.HasComment("评分管理表");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.TriageConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<int>("IsDisable")
                        .HasColumnType("int")
                        .HasComment("是否启用 0：不启用 1：启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Py")
                        .HasColumnType("varchar(50)")
                        .HasComment("拼音码");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("TriageConfigCode")
                        .HasColumnType("varchar(50)")
                        .HasComment("分诊设置代码");

                    b.Property<string>("TriageConfigName")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("分诊设置名称");

                    b.Property<int>("TriageConfigType")
                        .HasColumnType("int")
                        .HasComment("分诊设置类型 1001:绿色通道 1002:群伤事件 1003:院前分诊评分类型 1004:来院方式  1005:科室配置 1006:院前分诊去向");

                    b.HasKey("Id");

                    b.HasIndex("TriageConfigCode")
                        .IsUnique()
                        .HasFilter("[TriageConfigCode] IS NOT NULL");

                    b.ToTable("TriageConfig");

                    b.HasComment("分诊字典");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.TriageConfigTypeDescription", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("TriageConfigTypeCode")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TriageConfigTypeName")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("TriageConfigTypeDescription");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.TriageDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessMode")
                        .HasColumnType("varchar(50)")
                        .HasComment("接入方式");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("DeviceCode")
                        .HasColumnType("varchar(50)")
                        .HasComment("设备编号");

                    b.Property<string>("DeviceIPOrCom")
                        .HasColumnType("varchar(100)")
                        .HasComment("设备IP或者串口");

                    b.Property<string>("DeviceModel")
                        .HasColumnType("varchar(100)")
                        .HasComment("设备型号");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("设备名称");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("FactoryInfo")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("厂家信息");

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("DeviceCode")
                        .IsUnique()
                        .HasFilter("[DeviceCode] IS NOT NULL");

                    b.ToTable("Config_TriageDevice");

                    b.HasComment("设备信息");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.VitalSignExpression", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("添加人")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<string>("DefaultNdLevelExpression")
                        .HasColumnType("varchar(200)")
                        .HasComment("默认Ⅱ级评分表达式");

                    b.Property<string>("DefaultRdLevelExpression")
                        .HasColumnType("varchar(200)")
                        .HasComment("默认Ⅲ级评分表达式");

                    b.Property<string>("DefaultStLevelExpression")
                        .HasColumnType("varchar(200)")
                        .HasComment("默认Ⅰ级评分表达式");

                    b.Property<string>("DefaultThALevelExpression")
                        .HasColumnType("varchar(200)")
                        .HasComment("默认Ⅳa级评分表达式");

                    b.Property<string>("DefaultThBLevelExpression")
                        .HasColumnType("varchar(300)")
                        .HasComment("默认Ⅳb级评分表达式");

                    b.Property<string>("DeleteUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("删除人")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasComment("删除时间");

                    b.Property<string>("ExtensionField1")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段1")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField2")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段2")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField3")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段3")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField4")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段4")
                        .HasMaxLength(1000);

                    b.Property<string>("ExtensionField5")
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("扩展字段5")
                        .HasMaxLength(1000);

                    b.Property<string>("HospitalCode")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院编码")
                        .HasMaxLength(250);

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(250)")
                        .HasComment("医院名称")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit")
                        .HasComment("是否删除")
                        .HasDefaultValue(false);

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(200)")
                        .HasComment("评分项");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasComment("修改时间");

                    b.Property<string>("ModUser")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("修改人")
                        .HasMaxLength(50);

                    b.Property<string>("NdLevelExpression")
                        .HasColumnType("varchar(200)")
                        .HasComment("Ⅱ级评分表达式");

                    b.Property<string>("RdLevelExpression")
                        .HasColumnType("varchar(200)")
                        .HasComment("Ⅲ级评分表达式");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(256)")
                        .HasComment("备注")
                        .HasMaxLength(256);

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.Property<string>("StLevelExpression")
                        .HasColumnType("varchar(200)")
                        .HasComment("Ⅰ级评分表达式");

                    b.Property<string>("ThALevelExpression")
                        .HasColumnType("varchar(200)")
                        .HasComment("Ⅳa级评分表达式");

                    b.Property<string>("ThBLevelExpression")
                        .HasColumnType("varchar(200)")
                        .HasComment("Ⅳb级评分表达式");

                    b.HasKey("Id");

                    b.ToTable("Dict_VitalSignExpression");

                    b.HasComment("院前分诊生命体征评级标准表");
                });

            modelBuilder.Entity("Volo.Abp.PermissionManagement.PermissionGrant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<Guid?>("TenantId")
                        .HasColumnName("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name", "ProviderName", "ProviderKey");

                    b.ToTable("AbpPermissionGrants");
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.AdmissionInfo", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.PatientInfo", null)
                        .WithOne("AdmissionInfo")
                        .HasForeignKey("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.AdmissionInfo", "PatientInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.ConsequenceInfo", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.PatientInfo", null)
                        .WithOne("ConsequenceInfo")
                        .HasForeignKey("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.ConsequenceInfo", "PatientInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.RegisterInfo", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.PatientInfo", null)
                        .WithMany("RegisterInfo")
                        .HasForeignKey("PatientInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.ScoreInfo", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.PatientInfo", null)
                        .WithMany("ScoreInfo")
                        .HasForeignKey("PatientInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.VitalSignInfo", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.PatientInfo", null)
                        .WithOne("VitalSignInfo")
                        .HasForeignKey("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.Triage.VitalSignInfo", "PatientInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.JudgmentItem", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.JudgmentMaster", null)
                        .WithMany("JudgmentItems")
                        .HasForeignKey("JudgmentMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.JudgmentMaster", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.JudgmentType", null)
                        .WithMany("JudgmentMasters")
                        .HasForeignKey("JudgmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.ReportSettingQueryOption", b =>
                {
                    b.HasOne("SamJan.MicroService.PreHospital.TriageService.Domain.Entities.TriageConfig.ReportSetting", null)
                        .WithMany("ReportSettingQueryOption")
                        .HasForeignKey("ReportSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
