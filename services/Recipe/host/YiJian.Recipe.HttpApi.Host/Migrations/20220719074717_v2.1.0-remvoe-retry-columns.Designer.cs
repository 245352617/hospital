// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;
using YiJian.Recipe.EntityFrameworkCore;

namespace YiJian.Recipe.Migrations
{
    [DbContext(typeof(RecipeHttpApiHostMigrationsDbContext))]
    [Migration("20220719074717_v2.1.0-remvoe-retry-columns")]
    partial class v210remvoeretrycolumns
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YiJian.DoctorsAdvices.Entities.DrugStockQuery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("DoctorsAdviceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱Id");

                    b.Property<int>("Dosage")
                        .HasColumnType("int")
                        .HasComment("最小单位数量 ");

                    b.Property<string>("DosageUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("最小单位");

                    b.Property<string>("DrugBatchNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("药品批号");

                    b.Property<string>("DrugCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("药品编号, 医院药品唯一编码");

                    b.Property<decimal>("DrugDose")
                        .HasMaxLength(50)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("药品剂量");

                    b.Property<string>("DrugName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("药品名称");

                    b.Property<string>("DrugSpec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("药品规格");

                    b.Property<string>("DrugUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("剂量单位");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2")
                        .HasComment("药品效期");

                    b.Property<string>("FirmID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("厂商id");

                    b.Property<int>("MinPackageIndicator")
                        .HasColumnType("int")
                        .HasComment("药 包装类型, 1 表示小包装，0表示大包装");

                    b.Property<string>("MinPackageUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("包装单位,大/小包装单位 小包装单位=片");

                    b.Property<decimal>("PackageAmount")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("包装数量, 大/小包装数量 小包装数量 =（例如一盒有36片）=36");

                    b.Property<string>("PharSpec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("药房规格, 门急诊药房规格");

                    b.Property<string>("PharmUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("药品单位, 门急诊药房单位");

                    b.Property<decimal>("PurchasePrice")
                        .HasMaxLength(50)
                        .HasColumnType("decimal(18,2)")
                        .HasComment("进货价格 元");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("库存数量");

                    b.Property<decimal>("RetailPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("零售价格 元");

                    b.Property<string>("ReturnDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("备注信息");

                    b.Property<int>("Storage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RC_DrugStockQuery");
                });

            modelBuilder.Entity("YiJian.DoctorsAdvices.Entities.MedDetailResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChannelNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("HIS申请单号 处方：处方号码  医技：申请单id（检验、检查返回）");

                    b.Property<string>("ChannelNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("渠道识别号  4.5.3医嘱信息回传（his提供、需对接集成平台） chargeDetailNo projectItemNo");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("科室编码");

                    b.Property<string>("DeptName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("科室名称 ");

                    b.Property<string>("DoctorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("医生编码");

                    b.Property<string>("DoctorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("医生姓名");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HisNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("His识别号 对应his处方识别（C）、医技序号（Y）  可用于二维码展示等");

                    b.Property<string>("LgjkzxPayurl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("支付二维码 深圳市龙岗健康在线支付二维码");

                    b.Property<string>("LgzxyyPayurl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("支付二维码  深圳市龙岗中心医院微信公众");

                    b.Property<string>("MedType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("医嘱类型 处方：CF   非处方:YJ");

                    b.Property<string>("MedicalNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("病历号 患者主索引id、用于条形码展示");

                    b.Property<string>("PatientId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("病人ID");

                    b.Property<string>("VisSerialNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("就诊流水号");

                    b.HasKey("Id");

                    b.ToTable("RC_MedDetailResult");
                });

            modelBuilder.Entity("YiJian.DoctorsAdvices.Entities.MedicalTechnologyMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<Guid>("LPTId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RC_MedicalTechnologyMap");
                });

            modelBuilder.Entity("YiJian.DoctorsAdvices.Entities.Prescription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BillState")
                        .HasColumnType("int")
                        .HasComment("订单状态, 0.未缴费 1.已缴费 -1.已作废 2.已执行");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("就诊科室");

                    b.Property<string>("DoctorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("就诊医生编号");

                    b.Property<Guid>("DoctorsAdviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MedType")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasComment("对应his处方识别（C）、医技序号（Y）");

                    b.Property<string>("MyPrescriptionNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("我方映射处方号");

                    b.Property<string>("PatientName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("就诊患者姓名");

                    b.Property<string>("PrescriptionNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("处方号");

                    b.Property<string>("VisSerialNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("就诊流水号");

                    b.HasKey("Id");

                    b.HasIndex("MyPrescriptionNo");

                    b.ToTable("RC_Prescription");

                    b
                        .HasComment("处方号管理类");
                });

            modelBuilder.Entity("YiJian.Recipe.DoctorSummary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2")
                        .HasComment("报道时间");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("医生编码");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("科室编码");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("科室名称");

                    b.Property<string>("DoctorTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("医生职称");

                    b.Property<Guid>("GroupConsultationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("会诊id");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("联系电话");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("医生名称");

                    b.Property<string>("Opinion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("意见");

                    b.HasKey("Id");

                    b.HasIndex("GroupConsultationId");

                    b.ToTable("RC_DoctorSummary");
                });

            modelBuilder.Entity("YiJian.Recipe.NovelCoronavirusRna", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplyTime")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("申请时间");

                    b.Property<int>("ConsultationOpinions")
                        .HasColumnType("int")
                        .HasComment("专家会诊意见");

                    b.Property<Guid>("DoctorsAdviceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱id");

                    b.Property<int>("EpidemicHistory")
                        .HasColumnType("int")
                        .HasComment("流行病学史");

                    b.Property<bool>("IsFever")
                        .HasColumnType("bit")
                        .HasComment("是否发热");

                    b.Property<bool>("IsLymphopenia")
                        .HasColumnType("bit")
                        .HasComment("淋巴细胞是否降低");

                    b.Property<bool>("IsPneumonia")
                        .HasColumnType("bit")
                        .HasComment("是否有肺炎影像学特征");

                    b.Property<string>("LisesName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("检验项目名称");

                    b.Property<Guid>("PIID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("患者分诊id");

                    b.Property<string>("PatientIdentity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("人员身份");

                    b.Property<string>("PatientSource")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("人员来源");

                    b.Property<int>("PlaceToShenzhen")
                        .HasColumnType("int")
                        .HasComment("来深地点");

                    b.Property<int>("SpecimenType")
                        .HasColumnType("int")
                        .HasComment("标本类型");

                    b.HasKey("Id");

                    b.ToTable("RC_NovelCoronavirusRna");

                    b
                        .HasComment("新冠RNA检测申请");
                });

            modelBuilder.Entity("YiJian.Recipe.OperationApply", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Age")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("年龄");

                    b.Property<string>("AnaestheticCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("麻醉方式编码");

                    b.Property<string>("AnaestheticName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("麻醉方式名称");

                    b.Property<string>("Anesthesiologist")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("麻醉医生");

                    b.Property<string>("AnesthesiologistAssistant")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("麻醉助手");

                    b.Property<string>("ApplicantId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("申请人Id");

                    b.Property<string>("ApplicantName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请人名称");

                    b.Property<string>("ApplyDeptCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请科室编码");

                    b.Property<string>("ApplyDeptName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请科室名称");

                    b.Property<string>("ApplyNum")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("申请单号");

                    b.Property<DateTime?>("ApplyTime")
                        .HasColumnType("datetime2")
                        .HasComment("申请时间");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2")
                        .HasComment("生日");

                    b.Property<string>("BloodType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("血型");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DiagnoseCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("术前诊断编码");

                    b.Property<string>("DiagnoseName")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("术前诊断名称");

                    b.Property<string>("DoctorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("手术医生编码");

                    b.Property<string>("DoctorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("手术医生名称");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("身高");

                    b.Property<string>("IDNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("身份证号");

                    b.Property<string>("InstrumentNurse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("器械护士");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("OperationAssistant")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("手术助手");

                    b.Property<string>("OperationDuration")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("手术时长");

                    b.Property<string>("OperationLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("手术等级");

                    b.Property<string>("OperationLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("手术位置");

                    b.Property<DateTime?>("OperationPlanTime")
                        .HasColumnType("datetime2")
                        .HasComment("手术计划时间");

                    b.Property<string>("OperationType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("手术类型");

                    b.Property<Guid>("PI_Id")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("分诊患者id");

                    b.Property<string>("PatientId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("患者唯一标识(HIS)");

                    b.Property<string>("PatientName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者姓名");

                    b.Property<string>("ProposedOperationCode")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("拟施手术编码");

                    b.Property<string>("ProposedOperationName")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("拟施手术名称");

                    b.Property<string>("RHCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("RH阴性阳性");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("备注");

                    b.Property<int>("Sequence")
                        .HasColumnType("int")
                        .HasComment("手术台次");

                    b.Property<string>("Sex")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者性别");

                    b.Property<string>("SexName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者性别");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("手术状态 0:申请中，1:申请通过，2：已撤回，3：已驳回");

                    b.Property<DateTime?>("SubmitDate")
                        .HasColumnType("datetime2")
                        .HasComment("手术申请提交日期");

                    b.Property<string>("TourNurse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("巡回护士");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("体重");

                    b.HasKey("Id");

                    b.HasIndex("PI_Id");

                    b.ToTable("Oper_OperationApply");

                    b
                        .HasComment("手术申请");
                });

            modelBuilder.Entity("YiJian.Recipe.Packages.Package", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("分组 ID");

                    b.Property<string>("InputCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("输入码");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("名称");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasComment("序号");

                    b.HasKey("Id");

                    b.ToTable("RC_Package");

                    b
                        .HasComment("医嘱套餐");
                });

            modelBuilder.Entity("YiJian.Recipe.Packages.PackageGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("分组名称");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasComment("序号");

                    b.Property<Guid?>("ParentGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("父级分组 ID");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasComment("类型");

                    b.Property<string>("UserOrDepartmentId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasComment("用户/科室 ID");

                    b.HasKey("Id");

                    b.ToTable("RC_PackageGroup");

                    b
                        .HasComment("医嘱套餐分组");
                });

            modelBuilder.Entity("YiJian.Recipe.Packages.PackageProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChargeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContainerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("容器编码");

                    b.Property<string>("ContainerName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("容器名称");

                    b.Property<string>("DailyFrequency")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("HIS频次编码");

                    b.Property<decimal?>("DosageQty")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("剂量");

                    b.Property<string>("DosageUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("剂量单位");

                    b.Property<int>("EntryId")
                        .HasColumnType("int")
                        .HasComment("分录 ID");

                    b.Property<string>("ExecDeptCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行科室编码");

                    b.Property<string>("ExecDeptName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("执行科室");

                    b.Property<string>("FrequencyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("频次编码");

                    b.Property<string>("FrequencyExecDayTimes")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行时间");

                    b.Property<string>("FrequencyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("频次名称");

                    b.Property<int>("FrequencyTimes")
                        .HasColumnType("int")
                        .HasComment("频次系数");

                    b.Property<string>("FrequencyUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("频次单位");

                    b.Property<bool?>("IsSkinTest")
                        .HasColumnType("bit")
                        .HasComment("是否皮试 false=不需要皮试 true=需要皮试");

                    b.Property<int>("LongDays")
                        .HasColumnType("int")
                        .HasComment("天数");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱套餐 ID");

                    b.Property<string>("PartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查部位编码");

                    b.Property<string>("PartName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查部位");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("位置编码");

                    b.Property<string>("PositionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("位置");

                    b.Property<string>("PrescribeTypeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱类型编码");

                    b.Property<string>("PrescribeTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱类型：临嘱、长嘱、出院带药等");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("项目 ID");

                    b.Property<decimal>("Qty")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("数量");

                    b.Property<int>("RecieveQty")
                        .HasColumnType("int")
                        .HasComment("领量(数量)");

                    b.Property<string>("RecieveUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("领量单位");

                    b.Property<int>("RecipeGroupNo")
                        .HasColumnType("int")
                        .HasComment("子号");

                    b.Property<int>("RecipeNo")
                        .HasColumnType("int")
                        .HasComment("项目号");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("备注/说明");

                    b.Property<string>("SpecimenCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本编码");

                    b.Property<string>("SpecimenName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("标本");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("单位");

                    b.Property<string>("UsageCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用途/途径编码");

                    b.Property<string>("UsageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用途/途径名称");

                    b.HasKey("Id");

                    b.HasIndex("PackageId")
                        .HasDatabaseName("IX_PackageProject_PackageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("RC_PackageProject");
                });

            modelBuilder.Entity("YiJian.Recipe.SettingPara", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<string>("Mode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("模式");

                    b.Property<string>("Remark")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("备注");

                    b.Property<int>("Value")
                        .HasColumnType("int")
                        .HasComment("数值");

                    b.HasKey("Id");

                    b.ToTable("RC_SettingPara");
                });

            modelBuilder.Entity("YiJian.Recipes.Basic.RecipeExamProp", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CatalogCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("目录编码");

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("分类名称");

                    b.Property<string>("PartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查部位编码");

                    b.Property<string>("PartName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查部位");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("位置编码");

                    b.Property<string>("PositionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("位置");

                    b.Property<string>("RoomCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行机房编码");

                    b.Property<string>("RoomName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行机房描述");

                    b.HasKey("Id");

                    b.ToTable("RC_ProjectExamProp");

                    b
                        .HasComment("医嘱-检查属性");
                });

            modelBuilder.Entity("YiJian.Recipes.Basic.RecipeLabProp", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CatalogCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("检验目录编码");

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("目录分类名称");

                    b.Property<string>("ContainerCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("容器编码");

                    b.Property<string>("ContainerName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("容器名称");

                    b.Property<string>("PartCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查部位编码");

                    b.Property<string>("PartName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查部位名称");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("位置编码");

                    b.Property<string>("PositionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("位置");

                    b.Property<string>("SpecimenCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本编码");

                    b.Property<string>("SpecimenName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("标本");

                    b.HasKey("Id");

                    b.ToTable("RC_ProjectLabProp");

                    b
                        .HasComment("医嘱-检验属性");
                });

            modelBuilder.Entity("YiJian.Recipes.Basic.RecipeMedicineProp", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("批次");

                    b.Property<int>("BigPackFactor")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("大包装量");

                    b.Property<decimal>("BigPackPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("包装价格");

                    b.Property<string>("BigPackUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("包装单位");

                    b.Property<string>("ChargeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费分类代码");

                    b.Property<string>("ChargeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费分类名称");

                    b.Property<decimal>("DosageQty")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("剂量");

                    b.Property<string>("DosageUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("剂量单位");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2")
                        .HasComment("失效日期");

                    b.Property<string>("FactoryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("厂家代码");

                    b.Property<string>("FactoryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("厂家名称");

                    b.Property<string>("FrequencyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("频次编码");

                    b.Property<string>("FrequencyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("频次名称");

                    b.Property<string>("InsuranceCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("医保类型代码");

                    b.Property<int>("InsuranceType")
                        .HasColumnType("int")
                        .HasComment("医保类型：0自费,1甲类,2乙类，3丙类");

                    b.Property<bool>("IsCompound")
                        .HasColumnType("bit")
                        .HasComment("复方药");

                    b.Property<bool>("IsDrunk")
                        .HasColumnType("bit")
                        .HasComment("麻醉药");

                    b.Property<bool>("IsSkinTest")
                        .HasColumnType("bit")
                        .HasComment("皮试药");

                    b.Property<string>("MedicineProperty")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("药物属性：西药、中药、西药制剂、中药制剂");

                    b.Property<string>("PharmacyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药房代码");

                    b.Property<string>("PharmacyName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药房");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("基本单位价格");

                    b.Property<int>("SmallPackFactor")
                        .HasColumnType("int")
                        .HasComment("小包装量");

                    b.Property<decimal>("SmallPackPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("小包装单价");

                    b.Property<string>("SmallPackUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("小包装单位");

                    b.Property<string>("ToxicProperty")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("基本单位");

                    b.Property<string>("UsageCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用途/途径编码");

                    b.Property<string>("UsageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用途/途径名称");

                    b.HasKey("Id");

                    b.ToTable("RC_ProjectMedicineProp");

                    b
                        .HasComment("医嘱-药品属性");
                });

            modelBuilder.Entity("YiJian.Recipes.Basic.RecipeProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alias")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("别名");

                    b.Property<string>("AliasPyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("别名拼音码");

                    b.Property<string>("AliasWbCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("别名五笔码");

                    b.Property<bool>("CanUseInFirstAid")
                        .HasColumnType("bit")
                        .HasComment("是否可用于院前急救急救");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("类别编码");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("类别名称");

                    b.Property<string>("CategoryPyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("类别拼音码");

                    b.Property<string>("CategoryWbCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("类别五笔码");

                    b.Property<string>("ChargeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费分类代码");

                    b.Property<string>("ChargeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费分类名称");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("编码");

                    b.Property<string>("ExecDeptCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行科室编码");

                    b.Property<string>("ExecDeptName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("执行科室");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("名称");

                    b.Property<decimal>("OtherPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("其他价格");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("单位价格");

                    b.Property<string>("PyCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("拼音码");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("备注/说明");

                    b.Property<string>("ScientificName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("学名");

                    b.Property<int>("Sort")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<int>("SourceId")
                        .HasColumnType("int")
                        .HasComment("源ID");

                    b.Property<string>("Specification")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("规格");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("单位");

                    b.Property<string>("WbCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("五笔码");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .HasDatabaseName("IDX_Project_Code");

                    b.ToTable("RC_Project");

                    b
                        .HasComment("医嘱项目");
                });

            modelBuilder.Entity("YiJian.Recipes.Basic.RecipeTreatProp", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FeeTypeMainCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费大类代码");

                    b.Property<string>("FeeTypeSubCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费小类代码");

                    b.Property<string>("FrequencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("默认频次代码");

                    b.Property<string>("ProjectMerge")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("项目归类--龙岗字典所需");

                    b.HasKey("Id");

                    b.ToTable("RC_ProjectTreatrop");

                    b
                        .HasComment("医嘱-处置属性");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.DoctorsAdvice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alias")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("别名");

                    b.Property<string>("AliasPyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("别名拼音");

                    b.Property<string>("AliasWbCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("别名五笔码");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("总费用");

                    b.Property<string>("ApplyDeptCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请科室编码");

                    b.Property<string>("ApplyDeptName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请科室");

                    b.Property<string>("ApplyDoctorCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("申请医生编码");

                    b.Property<string>("ApplyDoctorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请医生");

                    b.Property<DateTime>("ApplyTime")
                        .HasColumnType("datetime2")
                        .HasComment("开嘱时间");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱项目分类编码");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱项目分类 (药物，检查，检验，治疗，护理，膳食，麻醉，手术，会诊，耗材，其他，嘱托)");

                    b.Property<string>("ChargeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("收费类型编码");

                    b.Property<string>("ChargeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费类型名称");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<int>("DetailId")
                        .HasColumnType("int")
                        .HasComment("明细ID，给医院使用，唯一（备用候选键）");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("临床诊断");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2")
                        .HasComment("结束时间");

                    b.Property<string>("ExecDeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行科室编码");

                    b.Property<string>("ExecDeptName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行科室名称");

                    b.Property<DateTime?>("ExecTime")
                        .HasColumnType("datetime2")
                        .HasComment("执行时间");

                    b.Property<string>("ExecutorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行者编码");

                    b.Property<string>("ExecutorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行者名称");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HisOrderNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("HIS医嘱号");

                    b.Property<string>("InsuranceCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医保目录编码");

                    b.Property<int>("InsuranceType")
                        .HasColumnType("int")
                        .HasComment("医保目录:0=自费,1=甲类,2=乙类,3=其它");

                    b.Property<bool>("IsBackTracking")
                        .HasColumnType("bit")
                        .HasComment("是否补录");

                    b.Property<bool?>("IsChronicDisease")
                        .HasColumnType("bit")
                        .HasComment("是否慢性病");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsRecipePrinted")
                        .HasColumnType("bit")
                        .HasComment("是否打印过");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasComment("医嘱各项分类: 0=药方项,1=检查项,2=检验项,3=诊疗项");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("医嘱名称");

                    b.Property<Guid>("PIID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("患者唯一标识");

                    b.Property<string>("PatientId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("患者Id");

                    b.Property<string>("PatientName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("患者名称");

                    b.Property<int>("PayStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasComment("支付状态 , 0=待支付,1=已支付,2=部分支付,3=已退费");

                    b.Property<int>("PayType")
                        .HasColumnType("int")
                        .HasComment("付费类型: 0=自费,1=医保,2=其它");

                    b.Property<string>("PayTypeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("付费类型编码");

                    b.Property<int>("PlatformType")
                        .HasColumnType("int")
                        .HasComment("系统标识: 0=急诊，1=院前");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("位置编码");

                    b.Property<string>("PositionName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("位置");

                    b.Property<string>("PrescribeTypeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱类型编码");

                    b.Property<string>("PrescribeTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱类型：临嘱、长嘱、出院带药等");

                    b.Property<string>("PrescriptionNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("处方号");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("单价");

                    b.Property<string>("PyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("拼音码");

                    b.Property<decimal>("RecieveQty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(1m)
                        .HasComment("领量(数量)");

                    b.Property<string>("RecieveUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("领量单位");

                    b.Property<int>("RecipeGroupNo")
                        .HasColumnType("int")
                        .HasComment("医嘱子号");

                    b.Property<string>("RecipeNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱号");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("医嘱说明");

                    b.Property<string>("ScientificName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("学名");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2")
                        .HasComment("开始时间");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("医嘱状态:0=未提交,1=已提交,2=已确认,3=已作废,4=已停止,6=已驳回,7=已执行,18=已缴费,19=已退费");

                    b.Property<DateTime?>("StopDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("停嘱时间");

                    b.Property<string>("StopDoctorCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("停嘱医生编码");

                    b.Property<string>("StopDoctorName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("停嘱医生名称");

                    b.Property<string>("TraineeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("管培生代码");

                    b.Property<string>("TraineeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("管培生名称");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("单位");

                    b.Property<string>("WbCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("Name");

                    b.HasIndex("PIID");

                    b.HasIndex("PatientId");

                    b.ToTable("RC_DoctorsAdvice");

                    b
                        .HasComment("医嘱主表");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.DoctorsAdviceAudit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DoctorsAdviceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱Id");

                    b.Property<string>("OperationCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("操作人编码（驳回操作人，复核操作人，执行操作人）");

                    b.Property<string>("OperationName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("操作人名称");

                    b.Property<DateTime>("OperationTime")
                        .HasColumnType("datetime2")
                        .HasComment("操作时间（驳回时间，复核时间，执行时间）");

                    b.Property<int>("OriginType")
                        .HasColumnType("int")
                        .HasComment("操作来源，0=医生操作，1=护士操作");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("状态");

                    b.HasKey("Id");

                    b.HasIndex("DoctorsAdviceId");

                    b.ToTable("RC_DoctorsAdviceAudit");

                    b
                        .HasComment("医嘱审计");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.Lis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddCard")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("附加卡片类型: 15.孕母血清胎儿唐氏综合征筛查申请单(早、中期);14.新型冠状病毒RNA检测申请单;13.基于孕妇外周血胎儿 基于孕妇外周血胎儿13 、18 、21-三体综合征基因筛查申请单");

                    b.Property<string>("CatalogCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("检验类别编码");

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("检验类别");

                    b.Property<string>("ClinicalSymptom")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("临床症状");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ContainerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本容器代码");

                    b.Property<string>("ContainerColor")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本容器颜色:0=红帽,1=蓝帽,2=紫帽");

                    b.Property<string>("ContainerName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本容器");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("DoctorsAdviceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱Id");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("HasReportName")
                        .HasColumnType("bit")
                        .HasComment("报告标识");

                    b.Property<bool>("IsBedSide")
                        .HasColumnType("bit")
                        .HasComment("是否在床旁");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEmergency")
                        .HasColumnType("bit")
                        .HasComment("是否紧急");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ReportDoctorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("确认报告医生编码");

                    b.Property<string>("ReportDoctorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("确认报告医生");

                    b.Property<DateTime?>("ReportTime")
                        .HasColumnType("datetime2")
                        .HasComment("出报告时间");

                    b.Property<string>("SpecimenCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("标本编码");

                    b.Property<DateTime?>("SpecimenCollectDatetime")
                        .HasColumnType("datetime2")
                        .HasComment("标本采集时间");

                    b.Property<string>("SpecimenDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("标本说明");

                    b.Property<string>("SpecimenName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("标本名称");

                    b.Property<string>("SpecimenPartCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本采集部位编码");

                    b.Property<string>("SpecimenPartName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本采集部位");

                    b.Property<DateTime?>("SpecimenReceivedDatetime")
                        .HasColumnType("datetime2")
                        .HasComment("标本接收时间");

                    b.HasKey("Id");

                    b.ToTable("RC_Lis");

                    b
                        .HasComment("检验项");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.LisItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InsuranceCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医保目录编码");

                    b.Property<int>("InsuranceType")
                        .HasColumnType("int")
                        .HasComment("医保目录：0-自费项目1-医保项目(甲、乙)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<Guid>("LisId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("检验项Id");

                    b.Property<decimal>("OtherPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("其它价格");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("单价");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("项目编码");

                    b.Property<string>("ProjectMerge")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("项目归类");

                    b.Property<string>("ProjectType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("项目类型");

                    b.Property<string>("PyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("拼音码");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("数量");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<string>("SpecialFlag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("特殊标识");

                    b.Property<string>("Specification")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("规格");

                    b.Property<string>("TargetCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("小项编码");

                    b.Property<string>("TargetName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("小项名称");

                    b.Property<string>("TargetUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("单位");

                    b.Property<string>("WbCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("LisId");

                    b.ToTable("RC_LisItem");

                    b
                        .HasComment("检验小项");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.Pacs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddCard")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("附加卡片类型: 12.TCT细胞学检查申请单 ,11.病理检验申请单,16.门诊大型设备检查治疗项目审核、报告单（需两联）、需配合医保患者使用");

                    b.Property<string>("CatalogCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("检查类别编码");

                    b.Property<string>("CatalogDisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("分类类型名称 例如心电图申请单、超声申请单");

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("检查类别");

                    b.Property<string>("ClinicalSymptom")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("临床症状");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("DoctorsAdviceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱Id");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("HasReport")
                        .HasColumnType("bit")
                        .HasComment("报告标识");

                    b.Property<bool>("IsBedSide")
                        .HasColumnType("bit")
                        .HasComment("是否在床旁");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEmergency")
                        .HasColumnType("bit")
                        .HasComment("是否紧急");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("MedicalHistory")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("病史简要");

                    b.Property<string>("PartCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("检查部位编码");

                    b.Property<string>("PartName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查部位");

                    b.Property<string>("ReportDoctorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("确认报告医生编码");

                    b.Property<string>("ReportDoctorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("确认报告医生");

                    b.Property<DateTime?>("ReportTime")
                        .HasColumnType("datetime2")
                        .HasComment("出报告时间");

                    b.HasKey("Id");

                    b.ToTable("RC_Pacs");

                    b
                        .HasComment("检查项");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.PacsItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InsuranceCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医保目录编码");

                    b.Property<int>("InsuranceType")
                        .HasColumnType("int")
                        .HasComment("医保目录:0=自费,1=甲类,2=乙类,3=其它");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<decimal>("OtherPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("其它价格");

                    b.Property<Guid>("PacsId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("检查项Id");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("单价");

                    b.Property<string>("ProjectCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("项目编码");

                    b.Property<string>("ProjectMerge")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("项目归类");

                    b.Property<string>("ProjectType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("项目类型");

                    b.Property<string>("PyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("拼音码");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("数量");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<string>("SpecialFlag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("特殊标识");

                    b.Property<string>("Specification")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("规格");

                    b.Property<string>("TargetCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("小项编码");

                    b.Property<string>("TargetName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("小项名称");

                    b.Property<string>("TargetUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("单位");

                    b.Property<string>("WbCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("五笔");

                    b.HasKey("Id");

                    b.HasIndex("PacsId");

                    b.ToTable("RC_PacsItem");

                    b
                        .HasComment("检查小项");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.Prescribe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ActualDays")
                        .HasColumnType("int")
                        .HasComment("实际天数");

                    b.Property<int>("AntibioticPermission")
                        .HasColumnType("int")
                        .HasComment("抗生素权限");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("批次号");

                    b.Property<int>("BigPackFactor")
                        .HasColumnType("int")
                        .HasComment("大包装系数(拆零系数)");

                    b.Property<decimal>("BigPackPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("包装价格");

                    b.Property<string>("BigPackUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("包装单位");

                    b.Property<decimal?>("ChildrenPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("儿童价格");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("DailyFrequency")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("HIS频次编码");

                    b.Property<decimal>("DefaultDosageQty")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("默认规格剂量");

                    b.Property<string>("DefaultDosageUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("DoctorsAdviceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱Id");

                    b.Property<decimal>("DosageQty")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("每次剂量");

                    b.Property<string>("DosageUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("剂量单位");

                    b.Property<DateTime?>("ExpirDate")
                        .HasColumnType("datetime2")
                        .HasComment("失效期");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FactoryCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("厂家代码");

                    b.Property<string>("FactoryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("厂家名称");

                    b.Property<decimal?>("FixPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("批发价格");

                    b.Property<string>("FrequencyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("频次码");

                    b.Property<string>("FrequencyExecDayTimes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("一天内的执行时间");

                    b.Property<string>("FrequencyName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("频次");

                    b.Property<int?>("FrequencyTimes")
                        .HasColumnType("int")
                        .HasComment("在一个周期内执行的次数");

                    b.Property<string>("FrequencyUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("周期单位，比如1D=每天，1W=每周，2D=隔天执行，1H=每小时或者每半小时");

                    b.Property<bool?>("IsAdaptationDisease")
                        .HasColumnType("bit")
                        .HasComment("是否医保适应症");

                    b.Property<bool?>("IsAmendedMark")
                        .HasColumnType("bit")
                        .HasComment("是否抢救后补：false=非抢救后补，true=抢救后补");

                    b.Property<bool?>("IsBindingTreat")
                        .HasColumnType("bit")
                        .HasComment("用于判断关联耗材是否手动删除");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsFirstAid")
                        .HasColumnType("bit")
                        .HasComment("是否是急救药");

                    b.Property<bool>("IsOutDrug")
                        .HasColumnType("bit")
                        .HasComment("是否自备药：false=非自备药,true=自备药");

                    b.Property<bool?>("IsSkinTest")
                        .HasColumnType("bit")
                        .HasComment("是否皮试 false=不需要皮试 true=需要皮试");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LimitType")
                        .HasColumnType("int")
                        .HasComment("限制用药标记");

                    b.Property<int>("LongDays")
                        .HasColumnType("int")
                        .HasComment("开药天数");

                    b.Property<decimal?>("MaterialPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("耗材金额");

                    b.Property<int>("MedicineId")
                        .HasColumnType("int")
                        .HasComment("药品id");

                    b.Property<string>("MedicineProperty")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药物属性：西药、中药、西药制剂、中药制剂");

                    b.Property<string>("PharmacyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药房编码");

                    b.Property<string>("PharmacyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("药房名称");

                    b.Property<int>("PrescriptionPermission")
                        .HasColumnType("int")
                        .HasComment("处方权");

                    b.Property<decimal?>("QtyPerTimes")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("每次用量");

                    b.Property<int?>("RestrictedDrugs")
                        .HasColumnType("int")
                        .HasComment("收费类型");

                    b.Property<decimal?>("RetPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("零售价格");

                    b.Property<bool?>("SkinTestResult")
                        .HasColumnType("bit")
                        .HasComment("皮试结果:false=阴性 ture=阳性");

                    b.Property<int?>("SkinTestSignChoseResult")
                        .HasColumnType("int")
                        .HasComment("皮试选择结果,默认空什么都没选择，0=否，1=是，2=续用");

                    b.Property<int>("SmallPackFactor")
                        .HasColumnType("int")
                        .HasComment("小包装系数(拆零系数)");

                    b.Property<decimal>("SmallPackPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("小包装单价");

                    b.Property<string>("SmallPackUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("小包装单位");

                    b.Property<string>("Specification")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("包装规格");

                    b.Property<string>("Speed")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("滴速");

                    b.Property<string>("ToxicProperty")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("药理等级");

                    b.Property<int>("Unpack")
                        .HasColumnType("int")
                        .HasComment("门诊拆分属性 0=最小单位总量取整 1=包装单位总量取整 2=最小单位每次取整 3=包装单位每次取整 4=最小单位可拆分");

                    b.Property<string>("UsageCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用法编码");

                    b.Property<string>("UsageName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用法名称");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.ToTable("RC_Prescribe");

                    b
                        .HasComment("药品");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.PrintInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsPrintAgain")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("PrescriptionNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrintCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("印人的编码");

                    b.Property<string>("PrintName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("印人的名称");

                    b.Property<DateTime?>("PrintTime")
                        .HasColumnType("datetime2")
                        .HasComment("补打时间");

                    b.HasKey("Id");

                    b.ToTable("RC_PrintInfo");

                    b
                        .HasComment("医嘱打印信息");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.Toxic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AntibioticLevel")
                        .HasColumnType("int")
                        .HasComment("抗菌药  0非抗菌药,1非限制级,2限制级,3特殊使用级");

                    b.Property<bool?>("IsAllergyTest")
                        .HasColumnType("bit")
                        .HasComment("试敏药");

                    b.Property<bool?>("IsAnaleptic")
                        .HasColumnType("bit")
                        .HasComment("兴奋剂");

                    b.Property<bool?>("IsCompound")
                        .HasColumnType("bit")
                        .HasComment("复方药");

                    b.Property<bool?>("IsDrunk")
                        .HasColumnType("bit")
                        .HasComment("麻醉药");

                    b.Property<bool?>("IsHighRisk")
                        .HasColumnType("bit")
                        .HasComment("高危药");

                    b.Property<bool?>("IsInsulin")
                        .HasColumnType("bit")
                        .HasComment("胰岛素");

                    b.Property<bool?>("IsLimited")
                        .HasColumnType("bit")
                        .HasComment("限制性用药标识");

                    b.Property<bool?>("IsPrecious")
                        .HasColumnType("bit")
                        .HasComment("贵重药");

                    b.Property<bool?>("IsRefrigerated")
                        .HasColumnType("bit")
                        .HasComment("冷藏药");

                    b.Property<bool?>("IsSkinTest")
                        .HasColumnType("bit")
                        .HasComment("皮试药");

                    b.Property<bool?>("IsTumour")
                        .HasColumnType("bit")
                        .HasComment("肿瘤药");

                    b.Property<string>("LimitedNote")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("限制性用药描述");

                    b.Property<int>("MedicineId")
                        .HasColumnType("int")
                        .HasComment("药品id");

                    b.Property<int?>("ToxicLevel")
                        .HasColumnType("int")
                        .HasComment("药理 0=普通药品,1=毒性药品,2=麻醉、精一药品，3=精二类，4=放射性，5=贵重药品，6=妊娠药品，7=狂犬疫苗");

                    b.HasKey("Id");

                    b.HasIndex("MedicineId");

                    b.ToTable("RC_Toxic");

                    b
                        .HasComment("药理");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.Treat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdditionalItemsId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("药品附加项id");

                    b.Property<int>("AdditionalItemsType")
                        .HasColumnType("int")
                        .HasComment("附加类型");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("DoctorsAdviceId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱Id");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FeeTypeMainCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费大类代码");

                    b.Property<string>("FeeTypeSubCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费小类代码");

                    b.Property<string>("FrequencyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("默认频次代码");

                    b.Property<string>("FrequencyName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("频次");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LongDays")
                        .HasColumnType("int")
                        .HasComment("开药天数");

                    b.Property<decimal?>("OtherPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("其它价格");

                    b.Property<string>("ProjectMerge")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("项目归类");

                    b.Property<string>("ProjectName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("项目类型名称");

                    b.Property<string>("ProjectType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("项目类型");

                    b.Property<string>("Specification")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("包装规格");

                    b.Property<int>("TreatId")
                        .HasColumnType("int")
                        .HasComment("诊疗项Id");

                    b.Property<string>("UsageCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用法编码");

                    b.Property<string>("UsageName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用法名称");

                    b.HasKey("Id");

                    b.ToTable("RC_Treat");

                    b
                        .HasComment("诊疗项");
                });

            modelBuilder.Entity("YiJian.Recipes.GroupConsultation.GroupConsultation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请人编码");

                    b.Property<string>("ApplyDeptCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请科室编码");

                    b.Property<string>("ApplyDeptName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("申请科室名称");

                    b.Property<string>("ApplyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("申请人名称");

                    b.Property<DateTime?>("ApplyTime")
                        .HasColumnType("datetime2")
                        .HasComment("申请时间");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("Content")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("病历摘要");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Diagnose")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("诊断");

                    b.Property<string>("DoctorOrder")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("医嘱");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnType("datetime2")
                        .HasComment("结束时间");

                    b.Property<string>("Inspect")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("检查");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("联系方式");

                    b.Property<string>("ObjectiveCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("会诊目的编码");

                    b.Property<string>("ObjectiveContent")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("会诊目的内容");

                    b.Property<Guid>("PI_ID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("分诊患者id");

                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("患者id");

                    b.Property<string>("Place")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("地点");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2")
                        .HasComment("会诊开始时间");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("会诊状态");

                    b.Property<string>("Summary")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("总结");

                    b.Property<string>("Test")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("检验");

                    b.Property<string>("TypeCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("会诊类型编码");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("类型名称");

                    b.Property<string>("VitalSigns")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("生命体征");

                    b.HasKey("Id");

                    b.HasIndex("PI_ID");

                    b.ToTable("RC_GroupConsultations");

                    b
                        .HasComment("会诊管理");
                });

            modelBuilder.Entity("YiJian.Recipes.InviteDoctor.InviteDoctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CheckInStatus")
                        .HasColumnType("int")
                        .HasComment("状态，0：已邀请，1：已报到");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2")
                        .HasComment("报道时间");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("医生编码");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("科室编码");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("科室名称");

                    b.Property<string>("DoctorTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("医生职称");

                    b.Property<Guid>("GroupConsultationId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("会诊id");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("联系电话");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("医生名称");

                    b.Property<string>("Opinion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("意见");

                    b.HasKey("Id");

                    b.HasIndex("GroupConsultationId");

                    b.ToTable("RC_InviteDoctors");

                    b
                        .HasComment("会诊邀请医生");
                });

            modelBuilder.Entity("YiJian.Recipes.Preferences.Entities.QuickStartAdvice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("QuickStartCatalogueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<int>("UsageCount")
                        .HasColumnType("int")
                        .HasComment(" 统计使用过的次数（个人统计）");

                    b.HasKey("Id");

                    b.HasIndex("QuickStartCatalogueId");

                    b.ToTable("RC_QuickStartAdvice");

                    b
                        .HasComment("快速开嘱信息");
                });

            modelBuilder.Entity("YiJian.Recipes.Preferences.Entities.QuickStartCatalogue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanModify")
                        .HasColumnType("bit")
                        .HasComment("平台标识");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DoctorCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("医生编号");

                    b.Property<string>("DoctorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("医生名称");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("PlatformType")
                        .HasColumnType("int")
                        .HasComment("平台标识");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("分类名称");

                    b.HasKey("Id");

                    b.HasIndex("DoctorCode");

                    b.ToTable("RC_QuickStartCatalogue");

                    b
                        .HasComment("快速开嘱目录");
                });

            modelBuilder.Entity("YiJian.Recipes.Preferences.Entities.QuickStartMedicine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ActualDays")
                        .HasColumnType("int")
                        .HasComment("实际天数");

                    b.Property<string>("Alias")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("别名");

                    b.Property<string>("AliasPyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("别名拼音");

                    b.Property<string>("AliasWbCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("别名五笔码");

                    b.Property<int?>("AntibioticLevel")
                        .HasColumnType("int")
                        .HasComment("抗菌药  0非抗菌药,1非限制级,2限制级,3特殊使用级");

                    b.Property<int>("AntibioticPermission")
                        .HasColumnType("int")
                        .HasComment("抗生素权限");

                    b.Property<string>("ApplyDeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("申请科室编码");

                    b.Property<string>("ApplyDeptName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请科室");

                    b.Property<string>("ApplyDoctorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("申请医生编码");

                    b.Property<string>("ApplyDoctorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请医生");

                    b.Property<DateTime?>("ApplyTime")
                        .HasColumnType("datetime2")
                        .HasComment("开嘱时间");

                    b.Property<string>("BaseFlag")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("基药标准  N普通,Y国基,P省基,C市基");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("批次号");

                    b.Property<int>("BigPackFactor")
                        .HasColumnType("int")
                        .HasComment("大包装量(大包装系数)");

                    b.Property<decimal>("BigPackPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("大包装价格");

                    b.Property<string>("BigPackUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("大包装单位");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱项目分类编码");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱项目分类 (药物，检查，检验，治疗，护理，膳食，麻醉，手术，会诊，耗材，其他，嘱托)");

                    b.Property<string>("ChargeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("收费类型编码");

                    b.Property<string>("ChargeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费类型名称");

                    b.Property<decimal?>("ChildrenPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("儿童价格");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("DailyFrequency")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("HIS频次编码");

                    b.Property<double>("DefaultDosage")
                        .HasMaxLength(20)
                        .HasColumnType("float")
                        .HasComment("默认剂量");

                    b.Property<decimal>("DefaultDosageQty")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("默认规格剂量");

                    b.Property<string>("DefaultDosageUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DosageForm")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("剂型");

                    b.Property<decimal>("DosageQty")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("剂量");

                    b.Property<string>("DosageUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("剂量单位");

                    b.Property<string>("ExecDeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行科室编码");

                    b.Property<string>("ExecDeptName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行科室名称");

                    b.Property<string>("ExecutorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行者编码");

                    b.Property<string>("ExecutorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行者名称");

                    b.Property<DateTime?>("ExpireDate")
                        .HasMaxLength(20)
                        .HasColumnType("datetime2")
                        .HasComment("失效期");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FactoryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("厂家代码");

                    b.Property<string>("FactoryName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("厂家名称");

                    b.Property<decimal?>("FixPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("批发价格");

                    b.Property<string>("FrequencyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("默认频次编码");

                    b.Property<string>("FrequencyExecDayTimes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("一天内的执行时间");

                    b.Property<string>("FrequencyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("默认频次名称");

                    b.Property<int?>("FrequencyTimes")
                        .HasColumnType("int")
                        .HasComment("在一个周期内执行的次数");

                    b.Property<string>("FrequencyUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("周期单位，比如1D=每天，1W=每周，2D=隔天执行，1H=每小时或者每半小时");

                    b.Property<string>("InsuranceCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医保目录编码");

                    b.Property<int?>("InsurancePayRate")
                        .HasColumnType("int")
                        .HasComment("医保支付比例");

                    b.Property<int>("InsuranceType")
                        .HasColumnType("int")
                        .HasComment("医保目录:0=自费,1=甲类,2=乙类,3=其它");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool?>("IsAdaptationDisease")
                        .HasColumnType("bit")
                        .HasComment("是否医保适应症");

                    b.Property<bool?>("IsAllergyTest")
                        .HasColumnType("bit")
                        .HasComment("试敏药");

                    b.Property<bool?>("IsAmendedMark")
                        .HasColumnType("bit")
                        .HasComment("是否抢救后补：false=非抢救后补，true=抢救后补");

                    b.Property<bool?>("IsAnaleptic")
                        .HasColumnType("bit")
                        .HasComment("兴奋剂");

                    b.Property<bool>("IsBackTracking")
                        .HasColumnType("bit")
                        .HasComment("是否补录");

                    b.Property<bool?>("IsBindingTreat")
                        .HasColumnType("bit")
                        .HasComment("用于判断关联耗材是否手动删除");

                    b.Property<bool?>("IsCompound")
                        .HasColumnType("bit")
                        .HasComment("复方药");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsDrunk")
                        .HasColumnType("bit")
                        .HasComment("麻醉药");

                    b.Property<bool?>("IsFirstAid")
                        .HasColumnType("bit")
                        .HasComment("急救药");

                    b.Property<bool?>("IsHighRisk")
                        .HasColumnType("bit")
                        .HasComment("高危药");

                    b.Property<bool?>("IsInsulin")
                        .HasColumnType("bit")
                        .HasComment("胰岛素");

                    b.Property<bool?>("IsLimited")
                        .HasColumnType("bit")
                        .HasComment("限制性用药标识");

                    b.Property<bool?>("IsPrecious")
                        .HasColumnType("bit")
                        .HasComment("贵重药");

                    b.Property<bool?>("IsRefrigerated")
                        .HasColumnType("bit")
                        .HasComment("冷藏药");

                    b.Property<bool?>("IsSkinTest")
                        .HasColumnType("bit")
                        .HasComment("皮试药");

                    b.Property<bool?>("IsTumour")
                        .HasColumnType("bit")
                        .HasComment("肿瘤药");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LimitedNote")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("限制性用药描述");

                    b.Property<int>("LongDays")
                        .HasColumnType("int")
                        .HasComment("开药天数");

                    b.Property<decimal?>("MaterialPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("耗材金额");

                    b.Property<string>("MedicineCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("药品编码");

                    b.Property<int>("MedicineId")
                        .HasColumnType("int")
                        .HasComment("药品id");

                    b.Property<string>("MedicineName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("药品名称");

                    b.Property<string>("MedicineProperty")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("药物属性：西药、中药、西药制剂、中药制剂");

                    b.Property<int>("PayType")
                        .HasColumnType("int")
                        .HasComment("付费类型: 0=自费,1=医保,2=其它");

                    b.Property<string>("PayTypeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("付费类型编码");

                    b.Property<string>("PharmacyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药房代码");

                    b.Property<string>("PharmacyName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药房");

                    b.Property<string>("PrescriptionNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("处方号");

                    b.Property<int>("PrescriptionPermission")
                        .HasColumnType("int")
                        .HasComment("处方权");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("基本单位价格");

                    b.Property<string>("PyCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("拼音码");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("数量");

                    b.Property<decimal?>("QtyPerTimes")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("每次用量");

                    b.Property<Guid>("QuickStartAdviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RecieveQty")
                        .HasColumnType("int")
                        .HasComment("领量(数量)");

                    b.Property<string>("RecieveUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("领量单位");

                    b.Property<string>("Remark")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("备注");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("医嘱说明");

                    b.Property<int?>("RestrictedDrugs")
                        .HasColumnType("int")
                        .HasComment("收费类型");

                    b.Property<decimal?>("RetPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("零售价格");

                    b.Property<string>("ScientificName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("学名");

                    b.Property<bool?>("SkinTestResult")
                        .HasColumnType("bit")
                        .HasComment("皮试结果:false=阴性 ture=阳性");

                    b.Property<int?>("SkinTestSignChoseResult")
                        .HasColumnType("int")
                        .HasComment("皮试选择结果,默认空什么都没选择，0=否，1=是，2=续用");

                    b.Property<int>("SmallPackFactor")
                        .HasColumnType("int")
                        .HasComment("小包装量(小包装系数)");

                    b.Property<decimal>("SmallPackPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("小包装单价");

                    b.Property<string>("SmallPackUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("小包装单位");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("规格");

                    b.Property<string>("Speed")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("滴速");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("医嘱状态:0=未提交,1=已提交,2=已确认,3=已作废,4=已停止,6=已驳回,7=已执行,18=已缴费,19=已退费");

                    b.Property<int>("Stock")
                        .HasColumnType("int")
                        .HasComment("库存");

                    b.Property<DateTime?>("StopDateTime")
                        .HasColumnType("datetime2")
                        .HasComment("停嘱时间");

                    b.Property<string>("StopDoctorCode")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("停嘱医生编码");

                    b.Property<string>("StopDoctorName")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("停嘱医生名称");

                    b.Property<int?>("ToxicLevel")
                        .HasColumnType("int")
                        .HasComment("精神药  0非精神药,1一类精神药,2二类精神药");

                    b.Property<string>("ToxicProperty")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("药理等级");

                    b.Property<string>("TraineeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("管培生代码");

                    b.Property<string>("TraineeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("管培生名称");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("基本单位");

                    b.Property<int>("Unpack")
                        .HasColumnType("int")
                        .HasComment("门诊拆分属性 0最小单位总量取整 1包装单位总量取整 2最小单位每次取整 3包装单位每次取整 4最小单位可拆分");

                    b.Property<string>("UsageCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("默认用法编码");

                    b.Property<string>("UsageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("默认用法名称");

                    b.Property<double?>("Volume")
                        .HasColumnType("float")
                        .HasComment("体积");

                    b.Property<string>("VolumeUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("体积单位");

                    b.Property<string>("WbCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("五笔");

                    b.Property<double?>("Weight")
                        .HasColumnType("float")
                        .HasComment("重量");

                    b.Property<string>("WeightUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("重量单位");

                    b.HasKey("Id");

                    b.HasIndex("QuickStartAdviceId")
                        .IsUnique();

                    b.ToTable("RC_QuickStartMedicine");

                    b
                        .HasComment("快速开嘱的药品");
                });

            modelBuilder.Entity("YiJian.Sequences.Entities.MySequence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FiledName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("受控的字段");

                    b.Property<int>("Increment")
                        .HasColumnType("int")
                        .HasComment("增长计数器");

                    b.Property<string>("TableName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("受控表名");

                    b.HasKey("Id");

                    b.ToTable("RC_MySequence");

                    b
                        .HasComment("我的系列号管理器");
                });

            modelBuilder.Entity("YiJian.Recipe.DoctorSummary", b =>
                {
                    b.HasOne("YiJian.Recipes.GroupConsultation.GroupConsultation", null)
                        .WithMany("DoctorSummarys")
                        .HasForeignKey("GroupConsultationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YiJian.Recipe.Packages.PackageProject", b =>
                {
                    b.HasOne("YiJian.Recipe.Packages.Package", "Package")
                        .WithMany("Projects")
                        .HasForeignKey("PackageId")
                        .HasConstraintName("FK_Package_PackageProject")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("YiJian.Recipes.Basic.RecipeProject", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("YiJian.Recipes.Basic.RecipeExamProp", b =>
                {
                    b.HasOne("YiJian.Recipes.Basic.RecipeProject", "RecipeProject")
                        .WithOne("ExamProp")
                        .HasForeignKey("YiJian.Recipes.Basic.RecipeExamProp", "Id")
                        .HasConstraintName("FK_Project_ExamProp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipeProject");
                });

            modelBuilder.Entity("YiJian.Recipes.Basic.RecipeLabProp", b =>
                {
                    b.HasOne("YiJian.Recipes.Basic.RecipeProject", "RecipeProject")
                        .WithOne("LabProp")
                        .HasForeignKey("YiJian.Recipes.Basic.RecipeLabProp", "Id")
                        .HasConstraintName("FK_Project_LabProp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipeProject");
                });

            modelBuilder.Entity("YiJian.Recipes.Basic.RecipeMedicineProp", b =>
                {
                    b.HasOne("YiJian.Recipes.Basic.RecipeProject", "RecipeProject")
                        .WithOne("MedicineProp")
                        .HasForeignKey("YiJian.Recipes.Basic.RecipeMedicineProp", "Id")
                        .HasConstraintName("FK_Project_Medicine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipeProject");
                });

            modelBuilder.Entity("YiJian.Recipes.Basic.RecipeTreatProp", b =>
                {
                    b.HasOne("YiJian.Recipes.Basic.RecipeProject", "RecipeProject")
                        .WithOne("TreatProp")
                        .HasForeignKey("YiJian.Recipes.Basic.RecipeTreatProp", "Id")
                        .HasConstraintName("FK_Project_TreatProp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipeProject");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.DoctorsAdviceAudit", b =>
                {
                    b.HasOne("YiJian.Recipes.DoctorsAdvices.Entities.DoctorsAdvice", "DoctorsAdvice")
                        .WithMany()
                        .HasForeignKey("DoctorsAdviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoctorsAdvice");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.LisItem", b =>
                {
                    b.HasOne("YiJian.Recipes.DoctorsAdvices.Entities.Lis", "Lis")
                        .WithMany("LisItems")
                        .HasForeignKey("LisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lis");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.PacsItem", b =>
                {
                    b.HasOne("YiJian.Recipes.DoctorsAdvices.Entities.Pacs", "Pacs")
                        .WithMany("PacsItems")
                        .HasForeignKey("PacsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pacs");
                });

            modelBuilder.Entity("YiJian.Recipes.InviteDoctor.InviteDoctor", b =>
                {
                    b.HasOne("YiJian.Recipes.GroupConsultation.GroupConsultation", null)
                        .WithMany("InviteDoctors")
                        .HasForeignKey("GroupConsultationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YiJian.Recipes.Preferences.Entities.QuickStartAdvice", b =>
                {
                    b.HasOne("YiJian.Recipes.Preferences.Entities.QuickStartCatalogue", null)
                        .WithMany("QuickStartAdvices")
                        .HasForeignKey("QuickStartCatalogueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YiJian.Recipes.Preferences.Entities.QuickStartMedicine", b =>
                {
                    b.HasOne("YiJian.Recipes.Preferences.Entities.QuickStartAdvice", null)
                        .WithOne("Medicine")
                        .HasForeignKey("YiJian.Recipes.Preferences.Entities.QuickStartMedicine", "QuickStartAdviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YiJian.Recipe.Packages.Package", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("YiJian.Recipes.Basic.RecipeProject", b =>
                {
                    b.Navigation("ExamProp");

                    b.Navigation("LabProp");

                    b.Navigation("MedicineProp");

                    b.Navigation("TreatProp");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.Lis", b =>
                {
                    b.Navigation("LisItems");
                });

            modelBuilder.Entity("YiJian.Recipes.DoctorsAdvices.Entities.Pacs", b =>
                {
                    b.Navigation("PacsItems");
                });

            modelBuilder.Entity("YiJian.Recipes.GroupConsultation.GroupConsultation", b =>
                {
                    b.Navigation("DoctorSummarys");

                    b.Navigation("InviteDoctors");
                });

            modelBuilder.Entity("YiJian.Recipes.Preferences.Entities.QuickStartAdvice", b =>
                {
                    b.Navigation("Medicine");
                });

            modelBuilder.Entity("YiJian.Recipes.Preferences.Entities.QuickStartCatalogue", b =>
                {
                    b.Navigation("QuickStartAdvices");
                });
#pragma warning restore 612, 618
        }
    }
}
