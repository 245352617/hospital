// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;
using YiJian.Nursing.EntityFrameworkCore;

namespace YiJian.Nursing.Migrations
{
    [DbContext(typeof(NursingHttpApiHostMigrationsDbContext))]
    [Migration("20211214102207_recipeaddDiagnosis")]
    partial class recipeaddDiagnosis
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YiJian.Nursing.Dict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室代码");

                    b.Property<string>("DictCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("字典代码");

                    b.Property<string>("DictDesc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("字典值说明");

                    b.Property<string>("DictStandard")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("字典标准（国标、自定义）");

                    b.Property<string>("DictValue")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("字典值");

                    b.Property<string>("HisCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("HIS对照代码");

                    b.Property<string>("HisName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("HIS对照");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasComment("是否默认");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ModuleCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("模块代码");

                    b.Property<string>("ParaCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("参数代码");

                    b.Property<string>("ParaName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("参数名称");

                    b.Property<string>("ParentId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("上级代码");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("ParaCode");

                    b.ToTable("Duct_Dict");

                    b
                        .HasComment("表:导管字典-通用业务");
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<int>("Grade")
                        .HasColumnType("int")
                        .HasComment("等级，1:一级，2：二级");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("项目编码");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasComment("项目名称");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("MaxEarlyWarning")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("最大值预警");

                    b.Property<decimal>("MaxValue")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("最大值");

                    b.Property<decimal>("MinEarlyWarning")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("最小值预警");

                    b.Property<decimal>("MinValue")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("最小值");

                    b.Property<string>("ParentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("父级编码");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("单位");

                    b.HasKey("Id");

                    b.ToTable("NursingIllnessObserveHeader");

                    b
                        .HasComment("病情观察头部");
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveInput", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BloodTransfusion")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("输血");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Diet")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("饮食");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("IllnessObserveMainId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主表id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("NasalFeeding")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("鼻饲");

                    b.Property<string>("TotalInput")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("入量合计");

                    b.Property<string>("Water")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("水");

                    b.HasKey("Id");

                    b.HasIndex("IllnessObserveMainId")
                        .IsUnique();

                    b.ToTable("NursingIllnessObserveInput");

                    b
                        .HasComment("病情观察入量表");
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveMain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BloodSugar")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("血糖");

                    b.Property<string>("Breathing")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("呼吸");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ConsciousnessCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("意识编码");

                    b.Property<string>("ConsciousnessName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("意识名称");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HeartRate")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("心率");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LeftPupilSize")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("左瞳大小");

                    b.Property<int>("LeftPupilType")
                        .HasColumnType("int")
                        .HasComment("左瞳类型，0：灵敏，1：迟钝，2：无反应");

                    b.Property<string>("ObserveTime")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("时间");

                    b.Property<Guid>("PI_ID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("traige患者id");

                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("患者id");

                    b.Property<string>("RightPupilSize")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("右瞳大小");

                    b.Property<int>("RightPupilType")
                        .HasColumnType("int")
                        .HasComment("右瞳类型，0：灵敏，1：迟钝，2：无反应");

                    b.Property<string>("Sbp")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("血压BP收缩压");

                    b.Property<string>("Sdp")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("血压BP舒张压");

                    b.Property<string>("SpO2")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("血氧饱和度");

                    b.Property<string>("Temperature")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("体温");

                    b.Property<int>("VisitNo")
                        .HasColumnType("int")
                        .HasComment("就诊号");

                    b.HasKey("Id");

                    b.ToTable("NursingIllnessObserveMain");

                    b
                        .HasComment("病情观察");
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveOther", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("C")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("GCS分");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ElectricCardioversion")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("电复律");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("G")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("GCS分");

                    b.Property<Guid>("IllnessObserveMainId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主表id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("S")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("GCS分");

                    b.Property<string>("TurnOver")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("翻身");

                    b.HasKey("Id");

                    b.HasIndex("IllnessObserveMainId")
                        .IsUnique();

                    b.ToTable("NursingIllnessObserveOther");

                    b
                        .HasComment("病情观察其他");
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveOutput", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("IllnessObserveMainId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主表id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Shit")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("大便");

                    b.Property<string>("SputumSuction")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("吸痰");

                    b.Property<string>("Sweat")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("汗液");

                    b.Property<string>("TotalOutput")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("出量合计");

                    b.Property<string>("UrineVolume")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("尿量");

                    b.Property<string>("VenousInflow")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("静脉入量");

                    b.Property<string>("Vomit")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("呕吐");

                    b.HasKey("Id");

                    b.HasIndex("IllnessObserveMainId")
                        .IsUnique();

                    b.ToTable("NursingIllnessObserveOutput");

                    b
                        .HasComment("病情观察出量表");
                });

            modelBuilder.Entity("YiJian.Nursing.ParaItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbnormalSign")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasComment("是否异常体征参数");

                    b.Property<string>("AddSource")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("添加来源");

                    b.Property<string>("ColorParaCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("关联颜色");

                    b.Property<string>("ColorParaName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("关联颜色名称");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("DataSource")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("默认值");

                    b.Property<string>("DecimalDigits")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("小数位数");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室编号");

                    b.Property<string>("DeviceParaCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("设备参数代码");

                    b.Property<string>("DeviceParaType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("设备参数类型（1-测量值，2-设定值）");

                    b.Property<string>("DictFlag")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasComment("导管项目是否静态显示");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("显示名称");

                    b.Property<int>("DrawChartFlag")
                        .HasColumnType("int")
                        .HasComment("绘制趋势图形");

                    b.Property<string>("GroupName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("导管分类");

                    b.Property<bool?>("GuidFlag")
                        .HasColumnType("bit")
                        .HasComment("是否评分");

                    b.Property<string>("GuidId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("评分指引编号");

                    b.Property<int?>("HealthSign")
                        .HasColumnType("int")
                        .HasComment("是否生命体征项目");

                    b.Property<string>("HighValue")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("高值");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool?>("IsUsage")
                        .HasColumnType("bit")
                        .HasComment("是否用药所属项目");

                    b.Property<string>("KBCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("知识库代码");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LowValue")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("低值");

                    b.Property<string>("MaxValue")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("最大值");

                    b.Property<string>("MinValue")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("最小值");

                    b.Property<string>("ModuleCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("参数所属模块");

                    b.Property<string>("NuringViewCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("护理概览参数");

                    b.Property<string>("ParaCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("项目代码");

                    b.Property<int>("ParaItemType")
                        .HasColumnType("int")
                        .HasComment("项目参数类型，用于区分监护仪或者呼吸机等");

                    b.Property<string>("ParaName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("项目名称");

                    b.Property<string>("PropertyParaCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("关联性状");

                    b.Property<string>("PropertyParaName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("关联性状名称");

                    b.Property<string>("ScoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("评分代码");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<string>("StatisticalType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("特护单统计参数分类");

                    b.Property<string>("Style")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("文本类型");

                    b.Property<bool>("Threshold")
                        .HasColumnType("bit")
                        .HasComment("是否预警");

                    b.Property<string>("UnitName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("单位名称");

                    b.Property<string>("ValueType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("数据类型");

                    b.HasKey("Id");

                    b.HasIndex("DeptCode");

                    b.ToTable("Duct_ParaItem");

                    b
                        .HasComment("表:导管护理项目表");
                });

            modelBuilder.Entity("YiJian.Nursing.Prescribe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ActualDays")
                        .HasColumnType("int")
                        .HasComment("实际天数");

                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasComment("领量");

                    b.Property<string>("BatchNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("批次号");

                    b.Property<string>("BigPackUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("包装单位");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<decimal>("DosageQty")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("每次剂量");

                    b.Property<string>("DosageUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("剂量单位");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2")
                        .HasComment("结束时间");

                    b.Property<DateTime?>("ExpirDate")
                        .HasColumnType("datetime2")
                        .HasComment("失效期");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("Factory")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("厂家");

                    b.Property<string>("FactoryCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("厂家代码");

                    b.Property<string>("FrequencyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("频次码");

                    b.Property<string>("FrequencyExecDayTimes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("一天内的执行时间");

                    b.Property<string>("FrequencyName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("频次");

                    b.Property<int?>("FrequencyTimes")
                        .HasColumnType("int")
                        .HasComment("在一个周期内执行的次数");

                    b.Property<string>("FrequencyUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("周期单位");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsAdaptationDisease")
                        .HasColumnType("bit")
                        .HasComment("是否医保适应症");

                    b.Property<bool?>("IsAmendedMark")
                        .HasColumnType("bit")
                        .HasComment("是否抢救后补：0-非抢救后补1-抢救后补");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsOutDrug")
                        .HasColumnType("bit")
                        .HasComment("是否自备药：0-非自备药1-自备药");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSkinTest")
                        .HasMaxLength(20)
                        .HasColumnType("bit")
                        .HasComment("是否皮试 0 不需要皮试 1 需要皮试");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int?>("LongDays")
                        .HasColumnType("int")
                        .HasComment("开药天数");

                    b.Property<string>("MedicineProperty")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药物属性：西药、中药、西药制剂、中药制剂");

                    b.Property<string>("Pharmacy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("药房");

                    b.Property<string>("PharmacyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药房编码");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("位置");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("位置编码");

                    b.Property<string>("PrescribeType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱类型：临嘱、长嘱、出院带药等");

                    b.Property<string>("PrescribeTypeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱类型编码");

                    b.Property<decimal?>("QtyPerTime")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("每次用量");

                    b.Property<int>("RecipeGroupNo")
                        .HasColumnType("int")
                        .HasComment("医嘱分组号：分组顺序1,2,3");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱主表ID");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("医嘱说明");

                    b.Property<bool?>("SkinTestResult")
                        .HasMaxLength(20)
                        .HasColumnType("bit")
                        .HasComment("皮试结果 0-阴性 1-阳性");

                    b.Property<string>("Specification")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("包装规格");

                    b.Property<string>("Speed")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("滴速");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2")
                        .HasComment("开始时间");

                    b.Property<int>("ToxicProperty")
                        .HasColumnType("int")
                        .HasComment("药理等级：毒、麻、精一、精二");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("领量单位");

                    b.Property<string>("Usage")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用法");

                    b.Property<string>("UsageCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用法编码");

                    b.HasKey("Id");

                    b.ToTable("NursingPrescribes");

                    b
                        .HasComment("药物");
                });

            modelBuilder.Entity("YiJian.Nursing.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplyDept")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("开嘱科室");

                    b.Property<string>("ApplyDeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("开嘱科室编码");

                    b.Property<string>("ApplyDoctor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("开嘱医生");

                    b.Property<string>("ApplyDoctorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("开嘱医生编码");

                    b.Property<DateTime>("ApplyTime")
                        .HasColumnType("datetime2")
                        .HasComment("开嘱时间");

                    b.Property<int>("BussinessCatalog")
                        .HasColumnType("int")
                        .HasComment("业务类型");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Diagnosis")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("临床诊断");

                    b.Property<string>("ExecDept")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行科室");

                    b.Property<string>("ExecDeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行科室编码");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HisOrderNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("HIS医嘱号");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Insurance")
                        .HasColumnType("int")
                        .HasComment("医保目录：0-自费项目1-医保项目(甲、乙)");

                    b.Property<bool>("IsBackTracking")
                        .HasColumnType("bit")
                        .HasComment("是否补录");

                    b.Property<bool?>("IsChronicDisease")
                        .HasColumnType("bit")
                        .HasComment("慢性病标识");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("PIID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("病人标识");

                    b.Property<int>("PayType")
                        .HasColumnType("int")
                        .HasComment("付费类型  0 自费项目 1 医保项目");

                    b.Property<string>("PrescriptionNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("处方号");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("单价");

                    b.Property<string>("RecipeCategory")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱项目分类 (药物，检查，检验，治疗，护理，膳食，麻醉，手术，会诊，耗材，其他，嘱托)");

                    b.Property<string>("RecipeCategoryCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱项目分类编码 (药物，检查，检验，治疗，护理，膳食，麻醉，手术，会诊，耗材，其他，嘱托)");

                    b.Property<string>("RecipeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("编码");

                    b.Property<string>("RecipeFeeStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("收费状态");

                    b.Property<string>("RecipeFeeStatusCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("收费状态码");

                    b.Property<int>("RecipeGroupNo")
                        .HasColumnType("int")
                        .HasComment("医嘱子号：药物为1.2.3...其它项目取默认值");

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("名称");

                    b.Property<string>("RecipeNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱号");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StopDateTime")
                        .HasMaxLength(20)
                        .HasColumnType("datetime2")
                        .HasComment("停嘱时间");

                    b.Property<string>("StopDoctor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("停嘱医生");

                    b.Property<string>("StopDoctorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("停嘱医生代码");

                    b.Property<decimal>("TotalFee")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("总费用");

                    b.Property<string>("Trainee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("管培生");

                    b.Property<string>("TraineeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("管培生代码");

                    b.HasKey("Id");

                    b.HasIndex("RecipeCode");

                    b.HasIndex("RecipeName");

                    b.ToTable("NursingRecipe");

                    b
                        .HasComment("医嘱");
                });

            modelBuilder.Entity("YiJian.Nursing.RecipeExec", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CheckNurseCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CheckNurseName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CheckStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CheckTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("ConversionTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Dosage")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DosageUnit")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ExcuteNurseCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ExcuteNurseName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ExcuteNurseTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecuteType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FinishNurse")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FinishNurseCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HospitalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HospitalName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IfCalcIn")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsProHospitalUse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTime?>("NurseTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("NursingStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("PIID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlanExcuteHours")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("PlanExcuteTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RecipeNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱号");

                    b.Property<int>("SortNum")
                        .HasColumnType("int");

                    b.Property<string>("TotalDosage")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("NursingRecipeExec");

                    b
                        .HasComment("医嘱执行");
                });

            modelBuilder.Entity("YiJian.Nursing.RecipeExecHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CombineStatus")
                        .HasColumnType("int")
                        .HasComment("操作后状态");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("NurseCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("护士编码");

                    b.Property<string>("NurseName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("护士名称");

                    b.Property<DateTime?>("OperationTime")
                        .HasColumnType("datetime2")
                        .HasComment("实际操作时间");

                    b.Property<int>("OperationType")
                        .HasColumnType("int")
                        .HasComment("操作类型");

                    b.Property<DateTime>("PlanExcuteTime")
                        .HasColumnType("datetime2")
                        .HasComment("计划执行时间");

                    b.Property<Guid>("RecipeExecId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱执行Id");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱Id");

                    b.HasKey("Id");

                    b.ToTable("NursingRecipeExecHistory");

                    b
                        .HasComment("医嘱执行历史记录");
                });

            modelBuilder.Entity("YiJian.Nursing.Settings.ParaModule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室代码");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("模块显示名称");

                    b.Property<bool>("IsBloodFlow")
                        .HasColumnType("bit")
                        .HasComment("是否血流内导管");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("模块代码");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("模块名称");

                    b.Property<string>("ModuleType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("模块类型：（CANULA：导管，SKIN：皮肤，VS：观察项目，IO：出入量，EM：ECMO，BP：血液净化，PC：PICCO）");

                    b.Property<string>("Py")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("模块拼音");

                    b.Property<int>("Sort")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("ModuleCode");

                    b.ToTable("Duct_ParaModule");

                    b
                        .HasComment("表:导管模块参数");
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveInput", b =>
                {
                    b.HasOne("YiJian.Nursing.IllnessObserveMain", null)
                        .WithOne("IllnessObserveInput")
                        .HasForeignKey("YiJian.Nursing.IllnessObserveInput", "IllnessObserveMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveOther", b =>
                {
                    b.HasOne("YiJian.Nursing.IllnessObserveMain", null)
                        .WithOne("IllnessObserveOther")
                        .HasForeignKey("YiJian.Nursing.IllnessObserveOther", "IllnessObserveMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveOutput", b =>
                {
                    b.HasOne("YiJian.Nursing.IllnessObserveMain", null)
                        .WithOne("IllnessObserveOutput")
                        .HasForeignKey("YiJian.Nursing.IllnessObserveOutput", "IllnessObserveMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveMain", b =>
                {
                    b.Navigation("IllnessObserveInput");

                    b.Navigation("IllnessObserveOther");

                    b.Navigation("IllnessObserveOutput");
                });
#pragma warning restore 612, 618
        }
    }
}
