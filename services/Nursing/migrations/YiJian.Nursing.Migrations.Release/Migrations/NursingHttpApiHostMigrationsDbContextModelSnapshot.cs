// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Volo.Abp.EntityFrameworkCore;
using YiJian.Nursing.EntityFrameworkCore;

namespace YiJian.Nursing.Migrations.Migrations
{
    [DbContext(typeof(NursingHttpApiHostMigrationsDbContext))]
    partial class NursingHttpApiHostMigrationsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YiJian.Nursing.Canula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CanulaId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("导管主表主键");

                    b.Property<string>("CanulaLength")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("置管长度");

                    b.Property<string>("CanulaWay")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("置入方式");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("NurseId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("护士Id");

                    b.Property<string>("NurseName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("护士名称");

                    b.Property<DateTime>("NurseTime")
                        .HasColumnType("datetime2")
                        .HasComment("护理时间");

                    b.HasKey("Id");

                    b.ToTable("Duct_Canula");

                    b
                        .HasComment("表:导管护理记录信息");
                });

            modelBuilder.Entity("YiJian.Nursing.CanulaDynamic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CanulaId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("导管主表主键");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("GroupName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("管道分类");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ParaCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("参数代码");

                    b.Property<string>("ParaName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("参数名称");

                    b.Property<string>("ParaValue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("参数值");

                    b.HasKey("Id");

                    b.ToTable("Duct_CanulaDynamic");

                    b
                        .HasComment("表:导管参数动态");
                });

            modelBuilder.Entity("YiJian.Nursing.CanulaPart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("PartNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Duct_CanulaPart");

                    b
                        .HasComment("表:人体图-编号字典");
                });

            modelBuilder.Entity("YiJian.Nursing.Dict", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室代码");

                    b.Property<string>("DictCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("字典代码");

                    b.Property<string>("DictDesc")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("字典值说明");

                    b.Property<string>("DictStandard")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("字典标准（国标、自定义）");

                    b.Property<string>("DictValue")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("字典值");

                    b.Property<string>("HisCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("HIS对照代码");

                    b.Property<string>("HisName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("HIS对照");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit")
                        .HasComment("是否默认");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<string>("ModuleCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("模块代码");

                    b.Property<string>("ParaCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("参数代码");

                    b.Property<string>("ParaName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("参数名称");

                    b.Property<string>("ParentId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("上级代码");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("ParaCode");

                    b.ToTable("Duct_Dict");

                    b
                        .HasComment("表:导管字典-通用业务");
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<int>("Grade")
                        .HasColumnType("int")
                        .HasComment("等级，1:一级，2：二级");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("项目编码");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasComment("项目名称");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal>("MaxEarlyWarning")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("最大值预警");

                    b.Property<decimal>("MaxValue")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("最大值");

                    b.Property<decimal>("MinEarlyWarning")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("最小值预警");

                    b.Property<decimal>("MinValue")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("最小值");

                    b.Property<string>("ParentCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasComment("父级编码");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("单位");

                    b.HasKey("Id");

                    b.ToTable("NursingIllnessObserveHeader");

                    b
                        .HasComment("病情观察头部");
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveInput", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BloodTransfusion")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("输血");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Diet")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("饮食");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("IllnessObserveMainId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主表id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("NasalFeeding")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("鼻饲");

                    b.Property<string>("TotalInput")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("入量合计");

                    b.Property<string>("Water")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("水");

                    b.HasKey("Id");

                    b.HasIndex("IllnessObserveMainId")
                        .IsUnique();

                    b.ToTable("NursingIllnessObserveInput");

                    b
                        .HasComment("病情观察入量表");
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveMain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BloodSugar")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("血糖");

                    b.Property<string>("Breathing")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("呼吸");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ConsciousnessCode")
                        .HasColumnType("nvarchar(50)")
                        .HasComment("意识编码");

                    b.Property<string>("ConsciousnessName")
                        .HasColumnType("nvarchar(100)")
                        .HasComment("意识名称");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HeartRate")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("心率");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LeftPupilSize")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("左瞳大小");

                    b.Property<int>("LeftPupilType")
                        .HasColumnType("int")
                        .HasComment("左瞳类型，0：灵敏，1：迟钝，2：无反应");

                    b.Property<string>("ObserveTime")
                        .HasColumnType("nvarchar(20)")
                        .HasComment("时间");

                    b.Property<Guid>("PI_ID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("traige患者id");

                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("患者id");

                    b.Property<string>("RightPupilSize")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("右瞳大小");

                    b.Property<int>("RightPupilType")
                        .HasColumnType("int")
                        .HasComment("右瞳类型，0：灵敏，1：迟钝，2：无反应");

                    b.Property<string>("Sbp")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("血压BP收缩压");

                    b.Property<string>("Sdp")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("血压BP舒张压");

                    b.Property<string>("SpO2")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("血氧饱和度");

                    b.Property<string>("Temperature")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("体温");

                    b.Property<int>("VisitNo")
                        .HasColumnType("int")
                        .HasComment("就诊号");

                    b.HasKey("Id");

                    b.ToTable("NursingIllnessObserveMain");

                    b
                        .HasComment("病情观察");
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveOther", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("C")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("GCS分");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ElectricCardioversion")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("电复律");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("G")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("GCS分");

                    b.Property<Guid>("IllnessObserveMainId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主表id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("S")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("GCS分");

                    b.Property<string>("TurnOver")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("翻身");

                    b.HasKey("Id");

                    b.HasIndex("IllnessObserveMainId")
                        .IsUnique();

                    b.ToTable("NursingIllnessObserveOther");

                    b
                        .HasComment("病情观察其他");
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveOutput", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<Guid>("IllnessObserveMainId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("主表id");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Shit")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("大便");

                    b.Property<string>("SputumSuction")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("吸痰");

                    b.Property<string>("Sweat")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("汗液");

                    b.Property<string>("TotalOutput")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("出量合计");

                    b.Property<string>("UrineVolume")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("尿量");

                    b.Property<string>("VenousInflow")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("静脉入量");

                    b.Property<string>("Vomit")
                        .HasColumnType("nvarchar(10)")
                        .HasComment("呕吐");

                    b.HasKey("Id");

                    b.HasIndex("IllnessObserveMainId")
                        .IsUnique();

                    b.ToTable("NursingIllnessObserveOutput");

                    b
                        .HasComment("病情观察出量表");
                });

            modelBuilder.Entity("YiJian.Nursing.NursingCanula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CanulaLength")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("置管长度");

                    b.Property<string>("CanulaName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("管道名称");

                    b.Property<int?>("CanulaNumber")
                        .HasColumnType("int")
                        .HasComment("插管次数");

                    b.Property<string>("CanulaPart")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("插管部位");

                    b.Property<string>("CanulaPosition")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("插管地点");

                    b.Property<string>("CanulaWay")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("置入方式");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DoctorId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("置管人代码");

                    b.Property<string>("DoctorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("置管人名称");

                    b.Property<string>("DrawReason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("拔管原因");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ModuleCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("导管分类");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("排序");

                    b.Property<string>("NurseId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("护士Id");

                    b.Property<string>("NurseName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("护士名称");

                    b.Property<DateTime?>("NurseTime")
                        .HasColumnType("datetime2")
                        .HasComment("护理时间");

                    b.Property<Guid>("PI_ID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("患者id");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2")
                        .HasComment("插管时间");

                    b.Property<DateTime?>("StopTime")
                        .HasColumnType("datetime2")
                        .HasComment("拔管时间");

                    b.Property<int>("TubeDrawState")
                        .HasColumnType("int")
                        .HasComment("管道状态");

                    b.Property<string>("UseFlag")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasComment("使用标志：（Y在用，N已拔管）");

                    b.HasKey("Id");

                    b.ToTable("Duct_NursingCanula");

                    b
                        .HasComment("表:导管护理信息");
                });

            modelBuilder.Entity("YiJian.Nursing.NursingEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuditNurseCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("审核人");

                    b.Property<string>("AuditNurseName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("审核人名称");

                    b.Property<int?>("AuditState")
                        .HasColumnType("int")
                        .HasComment("审核状态（0-未审核，1，已审核，2-取消审核）");

                    b.Property<DateTime?>("AuditTime")
                        .HasColumnType("datetime2")
                        .HasComment("审核时间");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasComment("内容");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("NurseCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("护士工号");

                    b.Property<DateTime>("NurseDate")
                        .HasColumnType("datetime2")
                        .HasComment("护理日期");

                    b.Property<string>("NurseName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("护士名称");

                    b.Property<DateTime>("NurseTime")
                        .HasColumnType("datetime2")
                        .HasComment("护理时间");

                    b.Property<Guid>("PI_ID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("患者id");

                    b.Property<DateTime?>("RecordTime")
                        .HasColumnType("datetime2")
                        .HasComment("记录时间");

                    b.Property<Guid?>("SignatureId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("签名记录编号对应icu_signature的id");

                    b.Property<int?>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.ToTable("Duct_NursingEvent");

                    b
                        .HasComment("表:护理记录");
                });

            modelBuilder.Entity("YiJian.Nursing.ParaItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbnormalSign")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasComment("是否异常体征参数");

                    b.Property<string>("AddSource")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("添加来源");

                    b.Property<string>("ColorParaCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("关联颜色");

                    b.Property<string>("ColorParaName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("关联颜色名称");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<string>("DataSource")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("默认值");

                    b.Property<string>("DecimalDigits")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("小数位数");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室编号");

                    b.Property<string>("DeviceParaCode")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("设备参数代码");

                    b.Property<string>("DeviceParaType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasComment("设备参数类型（1-测量值，2-设定值）");

                    b.Property<string>("DictFlag")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasComment("导管项目是否静态显示");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("显示名称");

                    b.Property<int>("DrawChartFlag")
                        .HasColumnType("int")
                        .HasComment("绘制趋势图形");

                    b.Property<string>("GroupName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("导管分类");

                    b.Property<bool?>("GuidFlag")
                        .HasColumnType("bit")
                        .HasComment("是否评分");

                    b.Property<string>("GuidId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("评分指引编号");

                    b.Property<int?>("HealthSign")
                        .HasColumnType("int")
                        .HasComment("是否生命体征项目");

                    b.Property<string>("HighValue")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("高值");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<bool?>("IsUsage")
                        .HasColumnType("bit")
                        .HasComment("是否用药所属项目");

                    b.Property<string>("KBCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("知识库代码");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("LowValue")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("低值");

                    b.Property<string>("MaxValue")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("最大值");

                    b.Property<string>("MinValue")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("最小值");

                    b.Property<string>("ModuleCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("参数所属模块");

                    b.Property<string>("NuringViewCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("护理概览参数");

                    b.Property<string>("ParaCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("项目代码");

                    b.Property<int>("ParaItemType")
                        .HasColumnType("int")
                        .HasComment("项目参数类型，用于区分监护仪或者呼吸机等");

                    b.Property<string>("ParaName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("项目名称");

                    b.Property<string>("PropertyParaCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("关联性状");

                    b.Property<string>("PropertyParaName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasComment("关联性状名称");

                    b.Property<string>("ScoreCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("评分代码");

                    b.Property<int>("Sort")
                        .HasColumnType("int")
                        .HasComment("排序号");

                    b.Property<string>("StatisticalType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("特护单统计参数分类");

                    b.Property<string>("Style")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("文本类型");

                    b.Property<bool>("Threshold")
                        .HasColumnType("bit")
                        .HasComment("是否预警");

                    b.Property<string>("UnitName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("单位名称");

                    b.Property<string>("ValueType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("数据类型");

                    b.HasKey("Id");

                    b.HasIndex("DeptCode");

                    b.ToTable("Duct_ParaItem");

                    b
                        .HasComment("表:导管护理项目表");
                });

            modelBuilder.Entity("YiJian.Nursing.RecipeExecutes.Entities.RecipeExec", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CheckNurseCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("核对护士");

                    b.Property<string>("CheckNurseName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("核对护士名称");

                    b.Property<string>("CheckStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("核对结果");

                    b.Property<DateTime?>("CheckTime")
                        .HasColumnType("datetime2")
                        .HasComment("核对时间");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("ConversionTime")
                        .HasColumnType("datetime2")
                        .HasComment("拆分时间");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DosageQty")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("每次剂量");

                    b.Property<string>("DosageUnit")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("每次剂量单位");

                    b.Property<string>("ExcuteNurseCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行护士");

                    b.Property<string>("ExcuteNurseName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行护士名称");

                    b.Property<DateTime?>("ExcuteNurseTime")
                        .HasColumnType("datetime2")
                        .HasComment("护士执行时间");

                    b.Property<string>("ExecuteType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("执行方式PC/PDA");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FinishNurse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("完成护士名称");

                    b.Property<string>("FinishNurseCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("完成护士");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnType("datetime2")
                        .HasComment("执行完成时间");

                    b.Property<int?>("IfCalcIn")
                        .HasColumnType("int")
                        .HasComment("是否计算进入量");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsInfusion")
                        .HasColumnType("bit")
                        .HasComment("是否输液");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTime?>("NurseTime")
                        .HasColumnType("datetime2")
                        .HasComment("护理时间");

                    b.Property<int>("NursingStatus")
                        .HasColumnType("int")
                        .HasComment("医嘱执行状态");

                    b.Property<Guid>("PIID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("病人标识");

                    b.Property<DateTime>("PlanExcuteTime")
                        .HasColumnType("datetime2")
                        .HasComment("计划执行时间");

                    b.Property<int>("PlatformType")
                        .HasColumnType("int")
                        .HasComment("系统标识: 0=急诊，1=院前");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("关联医嘱表编号");

                    b.Property<string>("RecipeNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱号");

                    b.Property<int>("SortNum")
                        .HasColumnType("int")
                        .HasComment("排序编号");

                    b.Property<string>("TotalDosage")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("总剂量");

                    b.Property<string>("UsageCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用法编码");

                    b.Property<string>("UsageName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("用法名称");

                    b.HasKey("Id");

                    b.ToTable("NursingRecipeExec");

                    b
                        .HasComment("医嘱执行");
                });

            modelBuilder.Entity("YiJian.Nursing.RecipeExecutes.Entities.RecipeExecHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CombineStatus")
                        .HasColumnType("int")
                        .HasComment("操作后状态");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LastStatus")
                        .HasColumnType("int")
                        .HasComment("操作前状态");

                    b.Property<string>("NurseCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("护士编码");

                    b.Property<string>("NurseName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("护士名称");

                    b.Property<DateTime?>("OperationTime")
                        .HasColumnType("datetime2")
                        .HasComment("实际操作时间");

                    b.Property<int>("OperationType")
                        .HasColumnType("int")
                        .HasComment("操作类型");

                    b.Property<DateTime>("PlanExcuteTime")
                        .HasColumnType("datetime2")
                        .HasComment("计划执行时间");

                    b.Property<Guid>("RecipeExecId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱执行Id");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱Id");

                    b.HasKey("Id");

                    b.ToTable("NursingRecipeExecHistory");

                    b
                        .HasComment("医嘱执行历史记录");
                });

            modelBuilder.Entity("YiJian.Nursing.RecipeExecutes.Entities.RecipeExecRefund", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime?>("ConfirmedTime")
                        .HasColumnType("datetime2")
                        .HasComment("审批时间");

                    b.Property<string>("ConfirmmerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("审批人编码");

                    b.Property<string>("ConfirmmerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("审批人名称");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<Guid>("ExecId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("关联医嘱执行表编号");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsWithDrawn")
                        .HasColumnType("bit")
                        .HasComment("是否退药退费");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("NurseCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("申请护士编码");

                    b.Property<string>("NurseName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请护士名称");

                    b.Property<int>("NursingRefundStatus")
                        .HasColumnType("int")
                        .HasComment("退药退费状态");

                    b.Property<Guid>("PIID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("病人标识");

                    b.Property<int>("PlatformType")
                        .HasColumnType("int")
                        .HasComment("系统标识: 0=急诊，1=院前");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("原因");

                    b.Property<string>("RecipeNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱号");

                    b.Property<int>("RefundQty")
                        .HasColumnType("int")
                        .HasComment("数量");

                    b.Property<int>("RefundType")
                        .HasColumnType("int")
                        .HasComment("退药退费类型");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("datetime2")
                        .HasComment("申请时间");

                    b.Property<string>("Specification")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("规格");

                    b.HasKey("Id");

                    b.ToTable("NursingRecipeExecRefund");

                    b
                        .HasComment("医嘱执行退款退费表");
                });

            modelBuilder.Entity("YiJian.Nursing.Recipes.Entities.Lis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CatalogCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("检验类别编码");

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("检验类别");

                    b.Property<string>("ClinicalSymptom")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("临床症状");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<string>("ContainerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本容器代码");

                    b.Property<string>("ContainerColor")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本容器颜色:0=红帽,1=蓝帽,2=紫帽");

                    b.Property<string>("ContainerName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本容器");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("HasReport")
                        .HasColumnType("bit")
                        .HasComment("报告标识");

                    b.Property<bool>("IsBedSide")
                        .HasColumnType("bit")
                        .HasComment("是否在床旁");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEmergency")
                        .HasColumnType("bit")
                        .HasComment("是否紧急");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱ID");

                    b.Property<string>("ReportDoctorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("确认报告医生编码");

                    b.Property<string>("ReportDoctorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("确认报告医生");

                    b.Property<DateTime?>("ReportTime")
                        .HasColumnType("datetime2")
                        .HasComment("出报告时间");

                    b.Property<string>("SpecimenCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("标本编码");

                    b.Property<DateTime?>("SpecimenCollectDatetime")
                        .HasColumnType("datetime2")
                        .HasComment("标本采集时间");

                    b.Property<string>("SpecimenDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("标本说明");

                    b.Property<string>("SpecimenName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("标本名称");

                    b.Property<string>("SpecimenPartCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本采集部位编码");

                    b.Property<string>("SpecimenPartName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("标本采集部位");

                    b.Property<DateTime?>("SpecimenReceivedDatetime")
                        .HasColumnType("datetime2")
                        .HasComment("标本接收时间");

                    b.HasKey("Id");

                    b.ToTable("NursingLis");

                    b
                        .HasComment("检验");
                });

            modelBuilder.Entity("YiJian.Nursing.Recipes.Entities.OwnMedicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplyDeptCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请科室编码");

                    b.Property<string>("ApplyDeptName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请科室");

                    b.Property<string>("ApplyDoctorCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("申请医生编码");

                    b.Property<string>("ApplyDoctorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("申请医生");

                    b.Property<DateTime>("ApplyTime")
                        .HasColumnType("datetime2")
                        .HasComment("开嘱时间");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱编码");

                    b.Property<decimal>("DosageQty")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("每次剂量");

                    b.Property<string>("DosageUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("剂量单位");

                    b.Property<string>("FrequencyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("频次码");

                    b.Property<string>("FrequencyName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("频次");

                    b.Property<int?>("FrequencyTimes")
                        .HasColumnType("int")
                        .HasComment("在一个周期内执行的次数");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("医嘱名称");

                    b.Property<int>("OwnMedicineId")
                        .HasColumnType("int")
                        .HasComment("医生站OwnMedicineId");

                    b.Property<Guid>("PIID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("患者唯一标识");

                    b.Property<string>("PatientId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("患者Id");

                    b.Property<string>("PatientName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("患者名称");

                    b.Property<int>("PlatformType")
                        .HasColumnType("int")
                        .HasComment("系统标识: 0=急诊，1=院前");

                    b.Property<decimal>("RecieveQty")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("领量(数量)");

                    b.Property<string>("RecieveUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("领量单位");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("医嘱说明");

                    b.Property<string>("UsageCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用法编码");

                    b.Property<string>("UsageName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用法名称");

                    b.HasKey("Id");

                    b.ToTable("NursingOwnMedicine");

                    b
                        .HasComment("自备药");
                });

            modelBuilder.Entity("YiJian.Nursing.Recipes.Entities.Pacs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CatalogCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("检查类别编码");

                    b.Property<string>("CatalogDisplayName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("分类类型名称 例如心电图申请单、超声申请单");

                    b.Property<string>("CatalogName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("检查类别");

                    b.Property<string>("ClinicalSymptom")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("临床症状");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("HasReport")
                        .HasColumnType("bit")
                        .HasComment("报告标识");

                    b.Property<bool>("IsBedSide")
                        .HasColumnType("bit")
                        .HasComment("是否在床旁");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEmergency")
                        .HasColumnType("bit")
                        .HasComment("是否紧急");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("MedicalHistory")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasComment("病史简要");

                    b.Property<string>("PartCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("检查部位编码");

                    b.Property<string>("PartName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("检查部位");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱ID");

                    b.Property<string>("ReportDoctorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("确认报告医生编码");

                    b.Property<string>("ReportDoctorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("确认报告医生");

                    b.Property<DateTime?>("ReportTime")
                        .HasColumnType("datetime2")
                        .HasComment("出报告时间");

                    b.HasKey("Id");

                    b.ToTable("NursingPacs");

                    b
                        .HasComment("检查");
                });

            modelBuilder.Entity("YiJian.Nursing.Recipes.Entities.Prescribe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ActualDays")
                        .HasColumnType("int")
                        .HasComment("实际天数");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<decimal>("DosageQty")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("每次剂量");

                    b.Property<string>("DosageUnit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("剂量单位");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FrequencyCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("频次码");

                    b.Property<string>("FrequencyExecDayTimes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("一天内的执行时间");

                    b.Property<string>("FrequencyName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("频次");

                    b.Property<int?>("FrequencyTimes")
                        .HasColumnType("int")
                        .HasComment("在一个周期内执行的次数");

                    b.Property<string>("FrequencyUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("周期单位，比如1D=每天，1W=每周，2D=隔天执行，1H=每小时或者每半小时");

                    b.Property<bool?>("IsAdaptationDisease")
                        .HasColumnType("bit")
                        .HasComment("是否医保适应症");

                    b.Property<bool?>("IsAmendedMark")
                        .HasColumnType("bit")
                        .HasComment("是否抢救后补：false=非抢救后补，true=抢救后补");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool?>("IsFirstAid")
                        .HasColumnType("bit")
                        .HasComment("是否是急救药");

                    b.Property<bool>("IsOutDrug")
                        .HasColumnType("bit")
                        .HasComment("是否自备药：false=非自备药,true=自备药");

                    b.Property<bool?>("IsSkinTest")
                        .HasColumnType("bit")
                        .HasComment("是否皮试 false=不需要皮试 true=需要皮试");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<int>("LongDays")
                        .HasColumnType("int")
                        .HasComment("开药天数");

                    b.Property<decimal?>("MaterialPrice")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("耗材金额");

                    b.Property<string>("MedicineProperty")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药物属性：西药、中药、西药制剂、中药制剂");

                    b.Property<string>("PharmacyCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("药房编码");

                    b.Property<string>("PharmacyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("药房名称");

                    b.Property<decimal?>("QtyPerTimes")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("每次用量");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱主表ID");

                    b.Property<bool?>("SkinTestResult")
                        .HasColumnType("bit")
                        .HasComment("皮试结果:false=阴性 ture=阳性");

                    b.Property<int?>("SkinTestSignChoseResult")
                        .HasColumnType("int")
                        .HasComment("皮试选择结果,默认空什么都没选择，0=否，1=是，2=续用");

                    b.Property<string>("Specification")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("包装规格");

                    b.Property<string>("Speed")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("滴速");

                    b.Property<string>("ToxicProperty")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("药理等级");

                    b.Property<string>("UsageCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用法编码");

                    b.Property<string>("UsageName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("用法名称");

                    b.HasKey("Id");

                    b.ToTable("NursingPrescribe");

                    b
                        .HasComment("药物处方");
                });

            modelBuilder.Entity("YiJian.Nursing.Recipes.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("总费用");

                    b.Property<string>("ApplyDeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("开嘱科室编码");

                    b.Property<string>("ApplyDeptName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("开嘱科室名称");

                    b.Property<string>("ApplyDoctorCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("开嘱医生编码");

                    b.Property<string>("ApplyDoctorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("开嘱医生名称");

                    b.Property<DateTime>("ApplyTime")
                        .HasColumnType("datetime2")
                        .HasComment("开嘱时间");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱项目分类编码");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱项目分类 (药物，检查，检验，治疗，护理，膳食，麻醉，手术，会诊，耗材，其他，嘱托)");

                    b.Property<string>("ChargeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("收费类型编码");

                    b.Property<string>("ChargeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费类型名称");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱编码");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("临床诊断");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2")
                        .HasComment("结束时间");

                    b.Property<string>("ExecDeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行科室编码");

                    b.Property<string>("ExecDeptName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行科室名称");

                    b.Property<DateTime?>("ExecTime")
                        .HasColumnType("datetime2")
                        .HasComment("执行时间");

                    b.Property<string>("ExecutorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("执行者编码");

                    b.Property<string>("ExecutorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("执行者名称");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("HisOrderNo")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasComment("HIS医嘱号");

                    b.Property<string>("InsuranceCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医保目录编码");

                    b.Property<int>("InsuranceType")
                        .HasColumnType("int")
                        .HasComment("医保目录:0=自费,1=甲类,2=乙类,3=其它");

                    b.Property<bool>("IsBackTracking")
                        .HasColumnType("bit")
                        .HasComment("是否补录");

                    b.Property<bool?>("IsChronicDisease")
                        .HasColumnType("bit")
                        .HasComment("是否慢性病");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<int>("ItemType")
                        .HasColumnType("int")
                        .HasComment("医嘱各项分类: 0=药品,1=检查,2=检验,3=诊疗");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("医嘱名称");

                    b.Property<int>("NursingStatus")
                        .HasColumnType("int")
                        .HasComment("护理医嘱状态:0=未知,1=已提交(医生站)->未执行(护士站),2=已确认,3=已作废,4=已停止(医生站)->停复核(护士站),5=已提交(医生站)->需要复核->未复核(护士站),6=已驳回,7=已执行,8:已停嘱(医生站)->停复核(护士站)");

                    b.Property<Guid>("PIID")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("患者入科流水号");

                    b.Property<string>("PatientId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("患者Id");

                    b.Property<string>("PatientName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("患者名称");

                    b.Property<int>("PayStatus")
                        .HasColumnType("int")
                        .HasComment("支付状态 , 0=未支付,1=已支付,2=部分支付,3=已退费");

                    b.Property<int>("PayType")
                        .HasColumnType("int")
                        .HasComment("付费类型: 0=自费,1=医保,2=其它");

                    b.Property<string>("PayTypeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("付费类型编码");

                    b.Property<int>("PlatformType")
                        .HasColumnType("int")
                        .HasComment("系统标识: 0=急诊，1=院前");

                    b.Property<string>("PrescribeTypeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱类型编码");

                    b.Property<string>("PrescribeTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱类型：临嘱、长嘱、出院带药等");

                    b.Property<string>("PrescriptionNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("处方号");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("收费单价");

                    b.Property<int>("PrintedTimes")
                        .HasColumnType("int")
                        .HasComment("打印次数");

                    b.Property<int>("RecieveQty")
                        .HasColumnType("int")
                        .HasComment("数量");

                    b.Property<string>("RecieveUnit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("单位");

                    b.Property<int>("RecipeGroupNo")
                        .HasColumnType("int")
                        .HasComment("医嘱子号");

                    b.Property<string>("RecipeNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("医嘱号");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("医嘱说明");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2")
                        .HasComment("开始时间");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasComment("医嘱状态:0=未提交,1=已提交,2=已确认,3=已作废,4=已停止,6=已驳回,7=已执行");

                    b.Property<string>("StopDoctorCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("停嘱医生代码");

                    b.Property<string>("StopDoctorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("停嘱医生");

                    b.Property<DateTime?>("StopOptTime")
                        .HasColumnType("datetime2")
                        .HasComment("停嘱操作时间");

                    b.Property<DateTime?>("StopTime")
                        .HasColumnType("datetime2")
                        .HasComment("停嘱生效时间");

                    b.Property<string>("TraineeCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("管培生编码");

                    b.Property<string>("TraineeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("管培生名称");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("收费单位");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("Name");

                    b.ToTable("NursingRecipe");

                    b
                        .HasComment("医嘱");
                });

            modelBuilder.Entity("YiJian.Nursing.Recipes.Entities.RecipeHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<DateTime>("OperaTime")
                        .HasColumnType("datetime2")
                        .HasComment("操作时间");

                    b.Property<int>("Operation")
                        .HasColumnType("int")
                        .HasComment("操作类型");

                    b.Property<string>("OperatorCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("操作人编码");

                    b.Property<string>("OperatorName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("操作人名称");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱ID");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasComment("备注");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("NursingRecipeHistory");

                    b
                        .HasComment("医嘱操作历史");
                });

            modelBuilder.Entity("YiJian.Nursing.Recipes.Entities.Treat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdditionalItemsId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("处置关联处方医嘱ID");

                    b.Property<int>("AdditionalItemsType")
                        .HasColumnType("int")
                        .HasComment("附加类型");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ConcurrencyStamp");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("ExtraProperties")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExtraProperties");

                    b.Property<string>("FeeTypeMainCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费大类代码");

                    b.Property<string>("FeeTypeSubCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("收费小类代码");

                    b.Property<string>("FrequencyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("默认频次代码");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<decimal?>("OtherPrice")
                        .HasColumnType("decimal(18,4)")
                        .HasComment("其它价格");

                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier")
                        .HasComment("医嘱ID");

                    b.Property<string>("Specification")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("规格");

                    b.HasKey("Id");

                    b.ToTable("NursingTreat");

                    b
                        .HasComment("诊疗");
                });

            modelBuilder.Entity("YiJian.Nursing.Settings.ParaModule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreationTime");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatorId");

                    b.Property<Guid?>("DeleterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DeleterId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletionTime");

                    b.Property<string>("DeptCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("科室代码");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("模块显示名称");

                    b.Property<bool>("IsBloodFlow")
                        .HasColumnType("bit")
                        .HasComment("是否血流内导管");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit")
                        .HasComment("是否启用");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastModificationTime");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LastModifierId");

                    b.Property<string>("ModuleCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("模块代码");

                    b.Property<string>("ModuleName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasComment("模块名称");

                    b.Property<string>("ModuleType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasComment("模块类型：（CANULA：导管，SKIN：皮肤，VS：观察项目，IO：出入量，EM：ECMO，BP：血液净化，PC：PICCO）");

                    b.Property<string>("Py")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("模块拼音");

                    b.Property<int>("Sort")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasComment("排序");

                    b.HasKey("Id");

                    b.HasIndex("ModuleCode");

                    b.ToTable("Duct_ParaModule");

                    b
                        .HasComment("表:导管模块参数");
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveInput", b =>
                {
                    b.HasOne("YiJian.Nursing.IllnessObserveMain", null)
                        .WithOne("IllnessObserveInput")
                        .HasForeignKey("YiJian.Nursing.IllnessObserveInput", "IllnessObserveMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveOther", b =>
                {
                    b.HasOne("YiJian.Nursing.IllnessObserveMain", null)
                        .WithOne("IllnessObserveOther")
                        .HasForeignKey("YiJian.Nursing.IllnessObserveOther", "IllnessObserveMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveOutput", b =>
                {
                    b.HasOne("YiJian.Nursing.IllnessObserveMain", null)
                        .WithOne("IllnessObserveOutput")
                        .HasForeignKey("YiJian.Nursing.IllnessObserveOutput", "IllnessObserveMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YiJian.Nursing.IllnessObserveMain", b =>
                {
                    b.Navigation("IllnessObserveInput");

                    b.Navigation("IllnessObserveOther");

                    b.Navigation("IllnessObserveOutput");
                });
#pragma warning restore 612, 618
        }
    }
}
